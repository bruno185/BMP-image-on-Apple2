------+---------------------+-------------+----+---------+------+-----------------------+-------------------------------------------------------------------
 Line | # File         Line | Line Type   | MX |  Reloc  | Size | Address   Object Code |  Source Code                                                      
------+---------------------+-------------+----+---------+------+-----------------------+-------------------------------------------------------------------
    1 |  1 asmdemo.s      1 | Comment     | 11 |         |    0 | 00/8000               | ;
    2 |  1 asmdemo.s      2 | Comment     | 11 |         |    0 | 00/8000               | * Demo for Graphics Primitives            
    3 |  1 asmdemo.s      3 | Comment     | 11 |         |    0 | 00/8000               | *
    4 |  1 asmdemo.s      4 | Comment     | 11 |         |    0 | 00/8000               | *<sym>
    5 |  1 asmdemo.s      5 | Directive   | 11 |         |    0 | 00/8000               | GP_call          MAC                           ; call to graphic primitives (macro)
    6 |  1 asmdemo.s      6 | Directive   | 11 |         |    0 | 00/8000               |                  jsr      {$4000}              ; graphic primitives only entry point
    7 |  1 asmdemo.s      7 | Directive   | 11 |         |    0 | 00/8000               |                  dfb      ]1                   ; command ID (1 byte)
    8 |  1 asmdemo.s      8 | Directive   | 11 |         |    0 | 00/8000               |                  da       ]2                   ; address of parameter(s) (2 bytes), 0 if no paramter
    9 |  1 asmdemo.s      9 | Directive   | 11 |         |    0 | 00/8000               |                  EOM                           
   10 |  1 asmdemo.s     10 | Empty       | 11 |         |    0 | 00/8000               |                                                
   11 |  1 asmdemo.s     11 | Directive   | 11 |         |    0 | 00/8000               |                  put      equates              
   12 |  2 equates.s      1 | Comment     | 11 |         |    0 | 00/8000               | ;
   13 |  2 equates.s      2 | Comment     | 11 |         |    0 | 00/8000               | ; equate file for interfacing to toolkit/graphics
   14 |  2 equates.s      3 | Comment     | 11 |         |    0 | 00/8000               | ;
   15 |  2 equates.s      4 | Equivalence | 11 |         |    0 | 00/8000               | ToolMLI          equ      $4000                
   16 |  2 equates.s      5 | Equivalence | 11 |         |    0 | 00/8000               | GrafMLI          equ      $4000                
   17 |  2 equates.s      6 | Comment     | 11 |         |    0 | 00/8000               | ;
   18 |  2 equates.s      7 | Comment     | 11 |         |    0 | 00/8000               | ; constants
   19 |  2 equates.s      8 | Comment     | 11 |         |    0 | 00/8000               | ;
   20 |  2 equates.s      9 | Equivalence | 11 |         |    0 | 00/8000               | SrcCopy          equ      0                    
   21 |  2 equates.s     10 | Equivalence | 11 |         |    0 | 00/8000               | SrcOr            equ      1                    
   22 |  2 equates.s     11 | Equivalence | 11 |         |    0 | 00/8000               | SrcXor           equ      2                    
   23 |  2 equates.s     12 | Equivalence | 11 |         |    0 | 00/8000               | SrcBic           equ      3                    
   24 |  2 equates.s     13 | Equivalence | 11 |         |    0 | 00/8000               | SrcNotCopy       equ      4                    
   25 |  2 equates.s     14 | Equivalence | 11 |         |    0 | 00/8000               | SrcNotOr         equ      5                    
   26 |  2 equates.s     15 | Equivalence | 11 |         |    0 | 00/8000               | SrcNotXor        equ      6                    
   27 |  2 equates.s     16 | Equivalence | 11 |         |    0 | 00/8000               | SrcNotBic        equ      7                    
   28 |  2 equates.s     17 | Comment     | 11 |         |    0 | 00/8000               | ;
   29 |  2 equates.s     18 | Comment     | 11 |         |    0 | 00/8000               | ; grafport structure
   30 |  2 equates.s     19 | Comment     | 11 |         |    0 | 00/8000               | ;
   31 |  2 equates.s     20 | Equivalence | 11 |         |    0 | 00/8000               | viewloc          equ      0                    
   32 |  2 equates.s     21 | Equivalence | 11 |         |    0 | 00/8000               | portbits         equ      {0}+4                
   33 |  2 equates.s     22 | Equivalence | 11 |         |    0 | 00/8000               | portwidth        equ      {{0}+4}+2            ; 1 byte for width, the other is reserved.
   34 |  2 equates.s     23 | Equivalence | 11 |         |    0 | 00/8000               | portrect         equ      {{{0}+4}+2}+2        
   35 |  2 equates.s     24 | Equivalence | 11 |         |    0 | 00/8000               | penpat           equ      {{{{0}+4}+2}+2}+8    
   36 |  2 equates.s     25 | Equivalence | 11 |         |    0 | 00/8000               | penloc           equ      {{{{{0}+4}+2}+2}+8}+10
   37 |  2 equates.s     26 | Equivalence | 11 |         |    0 | 00/8000               | pensize          equ      {{{{{{0}+4}+2}+2}+8}+10}+4
   38 |  2 equates.s     27 | Equivalence | 11 |         |    0 | 00/8000               | penmode          equ      {{{{{{{0}+4}+2}+2}+8}+10}+4}+2
   39 |  2 equates.s     28 | Equivalence | 11 |         |    0 | 00/8000               | txback           equ      {{{{{{{{0}+4}+2}+2}+8}+10}+4}+2}+1
   40 |  2 equates.s     29 | Equivalence | 11 |         |    0 | 00/8000               | txfont           equ      {{{{{{{{{0}+4}+2}+2}+8}+10}+4}+2}+1}+1
   41 |  2 equates.s     30 | Comment     | 11 |         |    0 | 00/8000               | ;
   42 |  2 equates.s     31 | Equivalence | 11 |         |    0 | 00/8000               | portlength       equ      {{{{{{{{{{0}+4}+2}+2}+8}+10}+4}+2}+1}+1}+2
   43 |  2 equates.s     32 | Comment     | 11 |         |    0 | 00/8000               | ;
   44 |  2 equates.s     33 | Comment     | 11 |         |    0 | 00/8000               | ;
   45 |  2 equates.s     34 | Comment     | 11 |         |    0 | 00/8000               | ; command numbers
   46 |  2 equates.s     35 | Comment     | 11 |         |    0 | 00/8000               | ;
   47 |  2 equates.s     36 | Equivalence | 11 |         |    0 | 00/8000               | InitGraf         equ      1                    
   48 |  2 equates.s     37 | Equivalence | 11 |         |    0 | 00/8000               | SetSwitches      equ      {1}+1                
   49 |  2 equates.s     38 | Comment     | 11 |         |    0 | 00/8000               | ;
   50 |  2 equates.s     39 | Equivalence | 11 |         |    0 | 00/8000               | InitPort         equ      {{1}+1}+1            
   51 |  2 equates.s     40 | Equivalence | 11 |         |    0 | 00/8000               | SetPort          equ      {{{1}+1}+1}+1        
   52 |  2 equates.s     41 | Equivalence | 11 |         |    0 | 00/8000               | GetPort          equ      {{{{1}+1}+1}+1}+1    
   53 |  2 equates.s     42 | Equivalence | 11 |         |    0 | 00/8000               | SetPortBits      equ      {{{{{1}+1}+1}+1}+1}+1
   54 |  2 equates.s     43 | Equivalence | 11 |         |    0 | 00/8000               | SetPenMode       equ      {{{{{{1}+1}+1}+1}+1}+1}+1
   55 |  2 equates.s     44 | Equivalence | 11 |         |    0 | 00/8000               | SetPattern       equ      {{{{{{{1}+1}+1}+1}+1}+1}+1}+1
   56 |  2 equates.s     45 | Equivalence | 11 |         |    0 | 00/8000               | SetColorFlags    equ      {{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1
   57 |  2 equates.s     46 | Equivalence | 11 |         |    0 | 00/8000               | SetPenSize       equ      {{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   58 |  2 equates.s     47 | Equivalence | 11 |         |    0 | 00/8000               | SetFont          equ      {{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   59 |  2 equates.s     48 | Equivalence | 11 |         |    0 | 00/8000               | SetTextBG        equ      {{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   60 |  2 equates.s     49 | Comment     | 11 |         |    0 | 00/8000               | ;
   61 |  2 equates.s     50 | Equivalence | 11 |         |    0 | 00/8000               | Move             equ      {{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   62 |  2 equates.s     51 | Equivalence | 11 |         |    0 | 00/8000               | MoveTo           equ      {{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   63 |  2 equates.s     52 | Equivalence | 11 |         |    0 | 00/8000               | Line             equ      {{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   64 |  2 equates.s     53 | Equivalence | 11 |         |    0 | 00/8000               | LineTo           equ      {{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   65 |  2 equates.s     54 | Equivalence | 11 |         |    0 | 00/8000               | PaintRect        equ      {{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   66 |  2 equates.s     55 | Equivalence | 11 |         |    0 | 00/8000               | FrameRect        equ      {{{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   67 |  2 equates.s     56 | Equivalence | 11 |         |    0 | 00/8000               | InRect           equ      {{{{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   68 |  2 equates.s     57 | Equivalence | 11 |         |    0 | 00/8000               | PaintBits        equ      {{{{{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   69 |  2 equates.s     58 | Equivalence | 11 |         |    0 | 00/8000               | PaintPoly        equ      {{{{{{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   70 |  2 equates.s     59 | Equivalence | 11 |         |    0 | 00/8000               | FramePoly        equ      {{{{{{{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   71 |  2 equates.s     60 | Equivalence | 11 |         |    0 | 00/8000               | InPoly           equ      {{{{{{{{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   72 |  2 equates.s     61 | Comment     | 11 |         |    0 | 00/8000               | ;
   73 |  2 equates.s     62 | Equivalence | 11 |         |    0 | 00/8000               | TextWidth        equ      {{{{{{{{{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   74 |  2 equates.s     63 | Equivalence | 11 |         |    0 | 00/8000               | DrawText         equ      {{{{{{{{{{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   75 |  2 equates.s     64 | Comment     | 11 |         |    0 | 00/8000               | ;
   76 |  2 equates.s     65 | Equivalence | 11 |         |    0 | 00/8000               | SetZP1           equ      {{{{{{{{{{{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   77 |  2 equates.s     66 | Equivalence | 11 |         |    0 | 00/8000               | SetZP2           equ      {{{{{{{{{{{{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   78 |  2 equates.s     67 | Equivalence | 11 |         |    0 | 00/8000               | GetVersion       equ      {{{{{{{{{{{{{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   79 |  2 equates.s     68 | Empty       | 11 |         |    0 | 00/8000               |                                                
   80 |  2 equates.s     69 | Comment     | 11 |         |    0 | 00/8000               | ; DATA STRUCTURES
   81 |  2 equates.s     70 | Comment     | 11 |         |    0 | 00/8000               | ;
   82 |  2 equates.s     71 | Comment     | 11 |         |    0 | 00/8000               | ; The following data structures are defined as types (Pascal format):
   83 |  2 equates.s     72 | Comment     | 11 |         |    0 | 00/8000               |     ; byte = 0..255;
   84 |  2 equates.s     73 | Empty       | 11 |         |    0 | 00/8000               |                                                
   85 |  2 equates.s     74 | Comment     | 11 |         |    0 | 00/8000               |     ; bits = packed array (0..7) of boolean;
   86 |  2 equates.s     75 | Empty       | 11 |         |    0 | 00/8000               |                                                
   87 |  2 equates.s     76 | Comment     | 11 |         |    0 | 00/8000               |     ; pmode = (penCopy, penOr, penXor, penBic, notpenCopy, notpenOr, notpenXor, notpenBic);
   88 |  2 equates.s     77 | Empty       | 11 |         |    0 | 00/8000               |                                                
   89 |  2 equates.s     78 | Comment     | 11 |         |    0 | 00/8000               |     ; point = record
   90 |  2 equates.s     79 | Comment     | 11 |         |    0 | 00/8000               |         ; x: integer;
   91 |  2 equates.s     80 | Comment     | 11 |         |    0 | 00/8000               |         ; y: integer;
   92 |  2 equates.s     81 | Comment     | 11 |         |    0 | 00/8000               |     ; end;
   93 |  2 equates.s     82 | Empty       | 11 |         |    0 | 00/8000               |                                                
   94 |  2 equates.s     83 | Comment     | 11 |         |    0 | 00/8000               |     ; rect = record
   95 |  2 equates.s     84 | Comment     | 11 |         |    0 | 00/8000               |         ; case integer of
   96 |  2 equates.s     85 | Comment     | 11 |         |    0 | 00/8000               |         ; 0: (left: integer; top: integer; right: integer; bottom: integer);
   97 |  2 equates.s     86 | Comment     | 11 |         |    0 | 00/8000               |         ; 1: (topleft: point; botright: point);
   98 |  2 equates.s     87 | Empty       | 11 |         |    0 | 00/8000               |                                                
   99 |  2 equates.s     88 | Comment     | 11 |         |    0 | 00/8000               |     ; maplnfo = packed record
  100 |  2 equates.s     89 | Comment     | 11 |         |    0 | 00/8000               |         ; viewloc: point;
  101 |  2 equates.s     90 | Comment     | 11 |         |    0 | 00/8000               |         ; mspbits: pointer;
  102 |  2 equates.s     91 | Comment     | 11 |         |    0 | 00/8000               |         ; mspwidth: byte;
  103 |  2 equates.s     92 | Comment     | 11 |         |    0 | 00/8000               |         ; reserved: byte;
  104 |  2 equates.s     93 | Comment     | 11 |         |    0 | 00/8000               |         ; maprect: rect;
  105 |  2 equates.s     94 | Comment     | 11 |         |    0 | 00/8000               |     ; end;
  106 |  2 equates.s     95 | Empty       | 11 |         |    0 | 00/8000               |                                                
  107 |  2 equates.s     96 | Comment     | 11 |         |    0 | 00/8000               |     ; pattern = packed array [1..9] of byte;                ; 1..8 ???
  108 |  2 equates.s     97 | Empty       | 11 |         |    0 | 00/8000               |                                                
  109 |  2 equates.s     98 | Comment     | 11 |         |    0 | 00/8000               |     ; maskinfo = packed record
  110 |  2 equates.s     99 | Comment     | 11 |         |    0 | 00/8000               |         ; ANDmask: byte;
  111 |  2 equates.s    100 | Comment     | 11 |         |    0 | 00/8000               |         ; ORmask: byte;
  112 |  2 equates.s    101 | Comment     | 11 |         |    0 | 00/8000               |     ; end;
  113 |  2 equates.s    102 | Empty       | 11 |         |    0 | 00/8000               |                                                
  114 |  2 equates.s    103 | Comment     | 11 |         |    0 | 00/8000               |     ; GrafPort = packed record
  115 |  2 equates.s    104 | Comment     | 11 |         |    0 | 00/8000               |         ; portmap: maplnfo;
  116 |  2 equates.s    105 | Comment     | 11 |         |    0 | 00/8000               |         ; penpattern: pattern;
  117 |  2 equates.s    106 | Comment     | 11 |         |    0 | 00/8000               |         ; colormasks: maskinfo;
  118 |  2 equates.s    107 | Comment     | 11 |         |    0 | 00/8000               |         ; penloc: point;
  119 |  2 equates.s    108 | Comment     | 11 |         |    0 | 00/8000               |         ; penwidth: byte;
  120 |  2 equates.s    109 | Comment     | 11 |         |    0 | 00/8000               |         ; penheight: byte;
  121 |  2 equates.s    110 | Comment     | 11 |         |    0 | 00/8000               |         ; penmode: pmode;
  122 |  2 equates.s    111 | Comment     | 11 |         |    0 | 00/8000               |         ; reserved: 0..31;
  123 |  2 equates.s    112 | Comment     | 11 |         |    0 | 00/8000               |         ; textback: byte;
  124 |  2 equates.s    113 | Comment     | 11 |         |    0 | 00/8000               |         ; textfont: integer;
  125 |  2 equates.s    114 | Comment     | 11 |         |    0 | 00/8000               |     ; end;
  126 |  2 equates.s    115 | Empty       | 11 |         |    0 | 00/8000               |                                                
  127 |  1 asmdemo.s     12 | Directive   | 11 |         |    0 | 00/8000               |                  put      equ                  
  128 |  3     equ.s      1 | Comment     | 11 |         |    0 | 00/8000               | ************ ROM routines ************ 
  129 |  3     equ.s      2 | Equivalence | 11 |         |    0 | 00/8000               | home             equ      $FC58                ; clear text screen, reset margins
  130 |  3     equ.s      3 | Equivalence | 11 |         |    0 | 00/8000               | text             equ      $FB2F                ; text mode
  131 |  3     equ.s      4 | Equivalence | 11 |         |    0 | 00/8000               | Bell             equ      $FBDD                ; play a sound
  132 |  3     equ.s      5 | Equivalence | 11 |         |    0 | 00/8000               | cout             equ      $FDED                ; print char in A
  133 |  3     equ.s      6 | Equivalence | 11 |         |    0 | 00/8000               | vtab             equ      $FC22                ; vert. tab, value must be in CV ($25)
  134 |  3     equ.s      7 | Equivalence | 11 |         |    0 | 00/8000               | getln            equ      $FD6A                ; read line of input (=> X = length, buffer = $200)
  135 |  3     equ.s      8 | Equivalence | 11 |         |    0 | 00/8000               | getlnz           equ      $FD67                ; = return + getln
  136 |  3     equ.s      9 | Equivalence | 11 |         |    0 | 00/8000               | getln1           equ      $FD6F                ; = getln without prompt
  137 |  3     equ.s     10 | Equivalence | 11 |         |    0 | 00/8000               | bascalc          equ      $FBC1                ; calc. address of line in A, put address in $28/$29
  138 |  3     equ.s     11 | Equivalence | 11 |         |    0 | 00/8000               | crout            equ      $FD8E                ; print carriage return
  139 |  3     equ.s     12 | Equivalence | 11 |         |    0 | 00/8000               | clreop           equ      $FC42                ; clear from cursor to end of page
  140 |  3     equ.s     13 | Equivalence | 11 |         |    0 | 00/8000               | clreol           equ      $FC9C                ; clear from cursor to end of line
  141 |  3     equ.s     14 | Equivalence | 11 |         |    0 | 00/8000               | prntx            equ      $F944                ; prints X in hex (2 digits)
  142 |  3     equ.s     15 | Equivalence | 11 |         |    0 | 00/8000               | prbyte           equ      $FDDA                ; prints A in hex (2 digits)
  143 |  3     equ.s     16 | Equivalence | 11 |         |    0 | 00/8000               | printax          equ      $F941                ; Prints current contents of the A and X in hex
  144 |  3     equ.s     17 | Equivalence | 11 |         |    0 | 00/8000               | prntyx           equ      $F940                ; Prints current contents of the Y and X in hex
  145 |  3     equ.s     18 | Equivalence | 11 |         |    0 | 00/8000               | rdkey            equ      $FD0C                ; wait for keypress
  146 |  3     equ.s     19 | Equivalence | 11 |         |    0 | 00/8000               | wait             equ      $FCA8                ; monitor delay
  147 |  3     equ.s     20 | Equivalence | 11 |         |    0 | 00/8000               | AUXMOV           equ      $C311                
  148 |  3     equ.s     21 | Equivalence | 11 |         |    0 | 00/8000               | OUTPORT          equ      $FE95                
  149 |  3     equ.s     22 | Equivalence | 11 |         |    0 | 00/8000               | prnxy            equ      $F940                
  150 |  3     equ.s     23 | Equivalence | 11 |         |    0 | 00/8000               | normal           equ      $FE84                ; Set normal video mode (white on black)
  151 |  3     equ.s     24 | Equivalence | 11 |         |    0 | 00/8000               | pr0              equ      $fe93                ; SETVID (= PR#0)
  152 |  3     equ.s     25 | Equivalence | 11 |         |    0 | 00/8000               | in0              equ      $fe89                ; SETKBD (= IN#0)
  153 |  3     equ.s     26 | Empty       | 11 |         |    0 | 00/8000               |                                                
  154 |  3     equ.s     27 | Comment     | 11 |         |    0 | 00/8000               | *
  155 |  3     equ.s     28 | Comment     | 11 |         |    0 | 00/8000               | ************ ROM switches ************  
  156 |  3     equ.s     29 | Equivalence | 11 |         |    0 | 00/8000               | RAMRDON          equ      $C003                ; read aux
  157 |  3     equ.s     30 | Equivalence | 11 |         |    0 | 00/8000               | RAMRDOFF         equ      $C002                ; read main
  158 |  3     equ.s     31 | Equivalence | 11 |         |    0 | 00/8000               | RAMWRTOFF        equ      $C004                ; write to main
  159 |  3     equ.s     32 | Equivalence | 11 |         |    0 | 00/8000               | RAMWRTON         equ      $C005                ; write to aux
  160 |  3     equ.s     33 | Equivalence | 11 |         |    0 | 00/8000               | ALTCHARSET0FF    equ      $C00E                
  161 |  3     equ.s     34 | Equivalence | 11 |         |    0 | 00/8000               | ALTCHARSET0N     equ      $C00F                
  162 |  3     equ.s     35 | Equivalence | 11 |         |    0 | 00/8000               | kbd              equ      $C000                ; ascii code of last key pressed (+ 128 if strobe not cleared)
  163 |  3     equ.s     36 | Equivalence | 11 |         |    0 | 00/8000               | kbdstrb          equ      $C010                
  164 |  3     equ.s     37 | Equivalence | 11 |         |    0 | 00/8000               | col80off         equ      $C00C                
  165 |  3     equ.s     38 | Equivalence | 11 |         |    0 | 00/8000               | col80on          equ      $C00D                
  166 |  3     equ.s     39 | Equivalence | 11 |         |    0 | 00/8000               | 80col            equ      $C01F                
  167 |  3     equ.s     40 | Comment     | 11 |         |    0 | 00/8000               | *
  168 |  3     equ.s     41 | Comment     | 11 |         |    0 | 00/8000               | ************ page 0 ************  
  169 |  3     equ.s     42 | Equivalence | 11 |         |    0 | 00/8000               | cv               equ      $25                  
  170 |  3     equ.s     43 | Equivalence | 11 |         |    0 | 00/8000               | ch               equ      $24                  
  171 |  3     equ.s     44 | Equivalence | 11 |         |    0 | 00/8000               | basl             equ      $28                  
  172 |  3     equ.s     45 | Equivalence | 11 |         |    0 | 00/8000               | wndlft           equ      $20                  
  173 |  3     equ.s     46 | Equivalence | 11 |         |    0 | 00/8000               | wndwdth          equ      $21                  
  174 |  3     equ.s     47 | Equivalence | 11 |         |    0 | 00/8000               | wndtop           equ      $22                  ; Top Margin (0 - 23, 0 is default, 20 in graphics mode)
  175 |  3     equ.s     48 | Equivalence | 11 |         |    0 | 00/8000               | wndbtm           equ      $23                  
  176 |  3     equ.s     49 | Equivalence | 11 |         |    0 | 00/8000               | prompt           equ      $33                  
  177 |  3     equ.s     50 | Comment     | 11 |         |    0 | 00/8000               | *
  178 |  3     equ.s     51 | Equivalence | 11 |         |    0 | 00/8000               | ourch            equ      $57B                 ; Cursor's column position minus 1 (HTAB's place) in 80-column mode
  179 |  3     equ.s     52 | Equivalence | 11 |         |    0 | 00/8000               | ourcv            equ      $5FB                 ; 80 col vertical pos
  180 |  3     equ.s     53 | Comment     | 11 |         |    0 | 00/8000               | *
  181 |  3     equ.s     54 | Comment     | 11 |         |    0 | 00/8000               | ************ ProDOS ************ 
  182 |  3     equ.s     55 | Equivalence | 11 |         |    0 | 00/8000               | GETBUFR          equ      $bef5                
  183 |  3     equ.s     56 | Equivalence | 11 |         |    0 | 00/8000               | FREEBUFR         equ      $BEF8                
  184 |  3     equ.s     57 | Equivalence | 11 |         |    0 | 00/8000               | devnum           equ      $BF30                ; last used device here, format : DSSS0000
  185 |  3     equ.s     58 | Equivalence | 11 |         |    0 | 00/8000               | RSHIMEM          equ      $BEFB                
  186 |  3     equ.s     59 | Comment     | 11 |         |    0 | 00/8000               | *
  187 |  3     equ.s     60 | Comment     | 11 |         |    0 | 00/8000               | ************ MLI calls (ProDOS) ************
  188 |  3     equ.s     61 | Equivalence | 11 |         |    0 | 00/8000               | MLI              equ      $BF00                
  189 |  3     equ.s     62 | Equivalence | 11 |         |    0 | 00/8000               | create           equ      $C0                  
  190 |  3     equ.s     63 | Equivalence | 11 |         |    0 | 00/8000               | destroy          equ      $C1                  
  191 |  3     equ.s     64 | Equivalence | 11 |         |    0 | 00/8000               | online           equ      $C5                  
  192 |  3     equ.s     65 | Equivalence | 11 |         |    0 | 00/8000               | getprefix        equ      $c7                  
  193 |  3     equ.s     66 | Equivalence | 11 |         |    0 | 00/8000               | setprefix        equ      $c6                  
  194 |  3     equ.s     67 | Equivalence | 11 |         |    0 | 00/8000               | open             equ      $C8                  
  195 |  3     equ.s     68 | Equivalence | 11 |         |    0 | 00/8000               | close            equ      $CC                  
  196 |  3     equ.s     69 | Equivalence | 11 |         |    0 | 00/8000               | read             equ      $CA                  
  197 |  3     equ.s     70 | Equivalence | 11 |         |    0 | 00/8000               | write            equ      $CB                  
  198 |  3     equ.s     71 | Equivalence | 11 |         |    0 | 00/8000               | setmark          equ      $ce                  
  199 |  3     equ.s     72 | Equivalence | 11 |         |    0 | 00/8000               | geteof           equ      $d1                  
  200 |  3     equ.s     73 | Equivalence | 11 |         |    0 | 00/8000               | quit             equ      $65                  
  201 |  3     equ.s     74 | Comment     | 11 |         |    0 | 00/8000               | *
  202 |  3     equ.s     75 | Comment     | 11 |         |    0 | 00/8000               | ************ FP routines ************
  203 |  3     equ.s     76 | Equivalence | 11 |         |    0 | 00/8000               | float            equ      $E2F2                ; Converts SIGNED integer in A/Y (high/lo) into FAC
  204 |  3     equ.s     77 | Equivalence | 11 |         |    0 | 00/8000               | GIVAYF           equ      $E2F2                ; idem
  205 |  3     equ.s     78 | Equivalence | 11 |         |    0 | 00/8000               | FLOAT2           equ      $EBA0                ; "Float2" entry point (https://6502disassembly.com/a2-rom/Applesoft.html#SymLDAB7)
  206 |  3     equ.s     79 | Comment     | 11 |         |    0 | 00/8000               |                                 ; Float UNSIGNED value in FAC+1,2 (hi,low)
  207 |  3     equ.s     80 | Comment     | 11 |         |    0 | 00/8000               |                                 ; X-reg = exponent ; C=0 to make value negative, C=1 to make value positive
  208 |  3     equ.s     81 | Empty       | 11 |         |    0 | 00/8000               |                                                
  209 |  3     equ.s     82 | Equivalence | 11 |         |    0 | 00/8000               | PRNTFAC          equ      $ED2E                ; Prints number in FAC (in decimal format). FAC is destroyed
  210 |  3     equ.s     83 | Equivalence | 11 |         |    0 | 00/8000               | FIN              equ      $EC4A                ; FAC = expression pointed TXTPTR
  211 |  3     equ.s     84 | Equivalence | 11 |         |    0 | 00/8000               | FNEG             equ      $EED0                ; FAC = - FAC
  212 |  3     equ.s     85 | Equivalence | 11 |         |    0 | 00/8000               | FABS             equ      $EBAF                ; FAC = ABS(FAC)
  213 |  3     equ.s     86 | Equivalence | 11 |         |    0 | 00/8000               | F2INT16          equ      $E752                ; FAC to 16 bits int in A/Y and $50/51 (low/high)
  214 |  3     equ.s     87 | Equivalence | 11 |         |    0 | 00/8000               | FADD             equ      $E7BE                ; FAC = FAC + ARG
  215 |  3     equ.s     88 | Equivalence | 11 |         |    0 | 00/8000               | FSUBT            equ      $E7AA                ; FAC = FAC - ARG
  216 |  3     equ.s     89 | Equivalence | 11 |         |    0 | 00/8000               | FMULT            equ      $E97F                ; Move the number pointed by Y,A into ARG and fall into FMULTT
  217 |  3     equ.s     90 | Equivalence | 11 |         |    0 | 00/8000               | FMULTT           equ      $E982                ; FAC = FAC x ARG
  218 |  3     equ.s     91 | Equivalence | 11 |         |    0 | 00/8000               | FDIVT            equ      $EA69                ; FAC = FAC / ARG
  219 |  3     equ.s     92 | Equivalence | 11 |         |    0 | 00/8000               | RND              equ      $EFAE                ; FAC = random number
  220 |  3     equ.s     93 | Equivalence | 11 |         |    0 | 00/8000               | FOUT             equ      $ED34                ; Create a string at the start of the stack ($100−$110)
  221 |  3     equ.s     94 | Equivalence | 11 |         |    0 | 00/8000               | MOVAF            equ      $EB63                ; Move FAC into ARG. On exit A=FACEXP and Z is set
  222 |  3     equ.s     95 | Equivalence | 11 |         |    0 | 00/8000               | CONINT           equ      $E6FB                ; Convert FAC into a single byte number in X and FACLO
  223 |  3     equ.s     96 | Equivalence | 11 |         |    0 | 00/8000               | YTOFAC           equ      $E301                ; Float y
  224 |  3     equ.s     97 | Equivalence | 11 |         |    0 | 00/8000               | MOVMF            equ      $EB2B                ; Routine to pack FP number. Address of destination must be in Y
  225 |  3     equ.s     98 | Comment     | 11 |         |    0 | 00/8000               |                                 ; (high) and X (low). Result is packed from FAC                             
  226 |  3     equ.s     99 | Equivalence | 11 |         |    0 | 00/8000               | QUINT            equ      $EBF2                ; convert fac to 16bit INT at $A0 and $A1 (fac+3/fac+4)
  227 |  3     equ.s    100 | Equivalence | 11 |         |    0 | 00/8000               | STROUT           equ      $DB3A                ;
  228 |  3     equ.s    101 | Equivalence | 11 |         |    0 | 00/8000               | LINPRT           equ      $ED24                ; Converts the unsigned hexadecimal number in X (low) and A (high) into a decimal number and displays it.
  229 |  3     equ.s    102 | Empty       | 11 |         |    0 | 00/8000               |                                                
  230 |  3     equ.s    103 | Comment     | 11 |         |    0 | 00/8000               | * A intégrer :
  231 |  3     equ.s    104 | Comment     | 11 |         |    0 | 00/8000               | *FSUB = $E7A7    OVERFLOW = $E8D5        ONE = $E913        FLOG = $E941    CONUPK = $E9E3  MUL10 = $EA39 
  232 |  3     equ.s    105 | Comment     | 11 |         |    0 | 00/8000               | * FDIV = $EA66        DIVERR = $EAE1        MOVFM = $EAF9    FLOAT = $EB93        FCOMP = $EBB2      
  233 |  3     equ.s    106 | Comment     | 11 |         |    0 | 00/8000               | * FINT = $EC23   SQR = $EE8D        FPWRT = $EE9    FEXP = $EF09      FCOS = $EFEA    FSIN = $EFF1  FTAN = $F03A 
  234 |  3     equ.s    107 | Comment     | 11 |         |    0 | 00/8000               | * PIHALF = $F066   FATN = $F09E        
  235 |  3     equ.s    108 | Comment     | 11 |         |    0 | 00/8000               | *
  236 |  3     equ.s    109 | Comment     | 11 |         |    0 | 00/8000               | ************ Applesoft BASIC ************
  237 |  3     equ.s    110 | Equivalence | 11 |         |    0 | 00/8000               | TXTTAB           equ      $67                  ; $67/$68 address of beginning of BASIC Program ($0801 is default)
  238 |  3     equ.s    111 | Equivalence | 11 |         |    0 | 00/8000               | PRGEND           equ      $AF                  ; $AF/$B0 address of end of Applesoft program plus 1 or 2 of BASIC
  239 |  3     equ.s    112 | Equivalence | 11 |         |    0 | 00/8000               | VARTAB           equ      $69                  ; $69/$6A address of beginning of simple variables, just after Basic prog. (unless modified by LOMEN)
  240 |  3     equ.s    113 | Equivalence | 11 |         |    0 | 00/8000               | ARYTAB           equ      $6B                  ; $6B/$6C addresse of beginning of array variables, just after simple variables
  241 |  3     equ.s    114 | Equivalence | 11 |         |    0 | 00/8000               | STREND           equ      $6D                  ; $6D/$6E addresse of end of array variables
  242 |  3     equ.s    115 | Equivalence | 11 |         |    0 | 00/8000               | MEMSIZ           equ      $73                  ; $73/$74 : top of string data, set by HIMEM: (usually $9600),
  243 |  3     equ.s    116 | Equivalence | 11 |         |    0 | 00/8000               | FRETOP           equ      $6F                  ; $6F/$70 bottom of string data, growing downwards
  244 |  3     equ.s    117 | Equivalence | 11 |         |    0 | 00/8000               | CHRGOT           equ      $B7                  ; get char pointed by TXTPTR in A
  245 |  3     equ.s    118 | Equivalence | 11 |         |    0 | 00/8000               | CHRGET           equ      $B1                  ; advance TXTPRT and read char
  246 |  3     equ.s    119 | Equivalence | 11 |         |    0 | 00/8000               | TXTPTR           equ      $B8                  ; pointer $B8/$B9 used in chrget and chrgot
  247 |  3     equ.s    120 | Equivalence | 11 |         |    0 | 00/8000               | CHKCOM           equ      $DEBE                ; check for comma and move TXTPTR forward
  248 |  3     equ.s    121 | Equivalence | 11 |         |    0 | 00/8000               | FRMNUM           equ      $DD67                ; eval num. value, variable, expression pointed by TXTPTR, advance TXTPTR
  249 |  3     equ.s    122 | Equivalence | 11 |         |    0 | 00/8000               | GETADR           equ      $E752                ; convert FAC to integer (to Y,A)
  250 |  3     equ.s    123 | Equivalence | 11 |         |    0 | 00/8000               | FRMEVL           equ      $DD7B                ; evaluate any expression, result in FAC.
  251 |  3     equ.s    124 | Equivalence | 11 |         |    0 | 00/8000               | FRESTR           equ      $E5FD                ; check if epression is a string. A = length, pointer in $5E/$5F
  252 |  3     equ.s    125 | Equivalence | 11 |         |    0 | 00/8000               | ERRDIR           equ      $E306                ; illegal direct if not running
  253 |  3     equ.s    126 | Empty       | 11 |         |    0 | 00/8000               |                                                
  254 |  3     equ.s    127 | Equivalence | 11 |         |    0 | 00/8000               | PTRGET           equ      $DFE3                ; On entry, TXTPTR must be pointing to the first character of the variable's name.
  255 |  3     equ.s    128 | Comment     | 11 |         |    0 | 00/8000               | * finds an Applesoft variable's memory address and puts a pointer to it in VARPNT ($83-$84) and in A/Y (low/hi). 
  256 |  3     equ.s    129 | Comment     | 11 |         |    0 | 00/8000               | * The variable's name is left in VARNAM ($81-$82). It will work with any type of variable (integer, array element, string..)
  257 |  3     equ.s    130 | Comment     | 11 |         |    0 | 00/8000               | * If the variable does not already exist, PTRGET will create it for you
  258 |  3     equ.s    131 | Comment     | 11 |         |    0 | 00/8000               | * Advances TXTPTR.
  259 |  3     equ.s    132 | Comment     | 11 |         |    0 | 00/8000               | * Set : vartype equ $11 ; str$=$ff, num=$00 
  260 |  3     equ.s    133 | Comment     | 11 |         |    0 | 00/8000               | * set : numtype equ $12 ; int =$80, real = $00
  261 |  3     equ.s    134 | Empty       | 11 |         |    0 | 00/8000               |                                                
  262 |  3     equ.s    135 | Equivalence | 11 |         |    0 | 00/8000               | CHKNUM           equ      $DD6A                ; verifies that the most recent var found by PTRGET was numeric.
  263 |  3     equ.s    136 | Comment     | 11 |         |    0 | 00/8000               |  *  https://www.brutaldeluxe.fr/documentation/thesourcerorsapprentice/thesourcerorsapprentice_v1n1.pdf
  264 |  3     equ.s    137 | Comment     | 11 |         |    0 | 00/8000               |  * Type mismatch error if var not numeric
  265 |  3     equ.s    138 | Empty       | 11 |         |    0 | 00/8000               |                                                
  266 |  1 asmdemo.s     13 | Comment     | 11 |         |    0 | 00/8000               | *<sym>
  267 |  1 asmdemo.s     14 | Equivalence | 11 |         |    0 | 00/8000               | MyBuffer         equ      $8000                ; starting address of storage for MyPort grafport
  268 |  1 asmdemo.s     15 | Comment     | 11 |         |    0 | 00/8000               | *<sym>
  269 |  1 asmdemo.s     16 | Equivalence | 11 |         |    0 | 00/8000               | TestFont         equ      $800                 ; loading address of "TEST.FONT" file
  270 |  1 asmdemo.s     17 | Comment     | 11 |         |    0 | 00/8000               | *<sym>
  271 |  1 asmdemo.s     18 | Equivalence | 11 |         |    0 | 00/8000               | ptr              equ      $06                  
  272 |  1 asmdemo.s     19 | Empty       | 11 |         |    0 | 00/8000               |                                                
  273 |  1 asmdemo.s     20 | Comment     | 11 |         |    0 | 00/8000               | *
  274 |  1 asmdemo.s     21 | Comment     | 11 |         |    0 | 00/8000               | *
  275 |  1 asmdemo.s     22 | Comment     | 11 |         |    0 | 00/8000               | **************************** MAIN PROGRAM ****************************
  276 |  1 asmdemo.s     23 | Comment     | 11 |         |    0 | 00/8000               | *
  277 |  1 asmdemo.s     24 | Directive   | 11 |         |    0 | 00/8000               |                  org      $E00                 
  278 |  1 asmdemo.s     25 | Empty       | 11 |         |    0 | 00/0E00               |                                                
  279 |  1 asmdemo.s     26 | Code        | 11 |         |    3 | 00/0E00 : 20 22 0E    |                  jsr      DoHeader             
  280 |  1 asmdemo.s     27 | Code        | 11 |         |    2 | 00/0E03 : 90 01       |                  bcc      okheader             ; exit on error if carry set
  281 |  1 asmdemo.s     28 | Code        | 11 |         |    1 | 00/0E05 : 60          |                  rts                           
  282 |  1 asmdemo.s     29 | Comment     | 11 |         |    0 | 00/0E06               | *<sym>
  283 |  1 asmdemo.s     30 | Empty       | 11 |         |    0 | 00/0E06               | okheader                                       
  284 |  1 asmdemo.s     31 | Macro       | 11 |         |    0 | 00/0E06               |                  GP_call  {1};0                
  285 |  1 asmdemo.s     31 | Code        | 11 |         |    3 | 00/0E06 : 20 00 40    |                  jsr      {$4000}              ; graphic primitives only entry point
  286 |  1 asmdemo.s     31 | Data        | 11 |         |    1 | 00/0E09 : 01          |                  dfb      {1}                  ; command ID (1 byte)
  287 |  1 asmdemo.s     31 | Data        | 11 |         |    2 | 00/0E0A : 00 00       |                  da       0                    ; address of parameter(s) (2 bytes), 0 if no paramter
  288 |  1 asmdemo.s     32 | Macro       | 11 |         |    0 | 00/0E0C               |                  GP_call  {{{1}+1}+1};MyPort   
  289 |  1 asmdemo.s     32 | Code        | 11 |         |    3 | 00/0E0C : 20 00 40    |                  jsr      {$4000}              ; graphic primitives only entry point
  290 |  1 asmdemo.s     32 | Data        | 11 |         |    1 | 00/0E0F : 03          |                  dfb      {{{1}+1}+1}          ; command ID (1 byte)
  291 |  1 asmdemo.s     32 | Data        | 11 |         |    2 | 00/0E10 : C1 12       |                  da       MyPort               ; address of parameter(s) (2 bytes), 0 if no paramter
  292 |  1 asmdemo.s     33 | Macro       | 11 |         |    0 | 00/0E12               |                  GP_call  {{{{1}+1}+1}+1};MyPort
  293 |  1 asmdemo.s     33 | Code        | 11 |         |    3 | 00/0E12 : 20 00 40    |                  jsr      {$4000}              ; graphic primitives only entry point
  294 |  1 asmdemo.s     33 | Data        | 11 |         |    1 | 00/0E15 : 04          |                  dfb      {{{{1}+1}+1}+1}      ; command ID (1 byte)
  295 |  1 asmdemo.s     33 | Data        | 11 |         |    2 | 00/0E16 : C1 12       |                  da       MyPort               ; address of parameter(s) (2 bytes), 0 if no paramter
  296 |  1 asmdemo.s     34 | Empty       | 11 |         |    0 | 00/0E18               |                                                
  297 |  1 asmdemo.s     35 | Code        | 11 |         |    3 | 00/0E18 : 20 65 0F    |                  jsr      Doimg                
  298 |  1 asmdemo.s     36 | Empty       | 11 |         |    0 | 00/0E1B               |                                                
  299 |  1 asmdemo.s     37 | Empty       | 11 |         |    0 | 00/0E1B               |                                                
  300 |  1 asmdemo.s     38 | Comment     | 11 |         |    0 | 00/0E1B               |                 ;jsr DoPaint
  301 |  1 asmdemo.s     39 | Code        | 11 |         |    3 | 00/0E1B : 20 6F 11    |                  jsr      WaitForKeyPress      
  302 |  1 asmdemo.s     40 | Code        | 11 |         |    3 | 00/0E1E : 20 9A 13    |                  jsr      DoTextScreen         
  303 |  1 asmdemo.s     41 | Code        | 11 |         |    1 | 00/0E21 : 60          |                  rts                           
  304 |  1 asmdemo.s     42 | Comment     | 11 |         |    0 | 00/0E22               | *
  305 |  1 asmdemo.s     43 | Comment     | 11 |         |    0 | 00/0E22               | *********************************************************************
  306 |  1 asmdemo.s     44 | Comment     | 11 |         |    0 | 00/0E22               | *
  307 |  1 asmdemo.s     45 | Comment     | 11 |         |    0 | 00/0E22               | *
  308 |  1 asmdemo.s     46 | Comment     | 11 |         |    0 | 00/0E22               | *<bp>
  309 |  1 asmdemo.s     47 | Comment     | 11 |         |    0 | 00/0E22               | *<sym>
  310 |  1 asmdemo.s     48 | Empty       | 11 |         |    0 | 00/0E22               | DoHeader                                       
  311 |  1 asmdemo.s     49 | Code        | 11 |         |    3 | 00/0E22 : 20 C1 0E    |                  jsr      TestSign             ; test BMP signature
  312 |  1 asmdemo.s     50 | Code        | 11 |         |    2 | 00/0E25 : 90 01       |                  bcc      oksign               ; exit on error if carry set
  313 |  1 asmdemo.s     51 | Code        | 11 |         |    1 | 00/0E27 : 60          |                  rts                           
  314 |  1 asmdemo.s     52 | Empty       | 11 |         |    0 | 00/0E28               |                                                
  315 |  1 asmdemo.s     53 | Comment     | 11 |         |    0 | 00/0E28               | *<sym>
  316 |  1 asmdemo.s     54 | Empty       | 11 |         |    0 | 00/0E28               | oksign                                         
  317 |  1 asmdemo.s     55 | Comment     | 11 |         |    0 | 00/0E28               | * get file length
  318 |  1 asmdemo.s     56 | Code        | 11 |         |    2 | 00/0E28 : A2 02       |                  ldx      #2                   
  319 |  1 asmdemo.s     57 | Code        | 11 |         |    3 | 00/0E2A : BD 00 60    |                  lda      {$6000},x            
  320 |  1 asmdemo.s     58 | Code        | 11 |         |    3 | 00/0E2D : 8D B7 0E    |                  sta      filelen              
  321 |  1 asmdemo.s     59 | Code        | 11 |         |    1 | 00/0E30 : E8          |                  inx                           
  322 |  1 asmdemo.s     60 | Code        | 11 |         |    3 | 00/0E31 : BD 00 60    |                  lda      {$6000},x            
  323 |  1 asmdemo.s     61 | Code        | 11 |         |    3 | 00/0E34 : 8D B8 0E    |                  sta      filelen+1            
  324 |  1 asmdemo.s     62 | Comment     | 11 |         |    0 | 00/0E37               | * check file length
  325 |  1 asmdemo.s     63 | Code        | 11 |         |    3 | 00/0E37 : AD B8 0E    |                  lda      filelen+1            
  326 |  1 asmdemo.s     64 | Code        | 11 |         |    2 | 00/0E3A : C9 36       |                  cmp      #>{$3600}            
  327 |  1 asmdemo.s     65 | Code        | 11 |         |    2 | 00/0E3C : D0 05       |                  bne      ozunid_1             
  328 |  1 asmdemo.s     66 | Code        | 11 |         |    3 | 00/0E3E : AD B7 0E    |                  lda      filelen              
  329 |  1 asmdemo.s     67 | Code        | 11 |         |    2 | 00/0E41 : C9 00       |                  cmp      #<{$3600}            
  330 |  1 asmdemo.s     68 | Code        | 11 |         |    2 | 00/0E43 : 90 09       | ozunid_1         bcc      lower                
  331 |  1 asmdemo.s     69 | Code        | 11 |         |    2 | 00/0E45 : D0 02       |                  bne      higher               
  332 |  1 asmdemo.s     70 | Code        | 11 |         |    2 | 00/0E47 : F0 05       |                  beq      same                 
  333 |  1 asmdemo.s     71 | Comment     | 11 |         |    0 | 00/0E49               | *<sym>
  334 |  1 asmdemo.s     72 | Code        | 11 |         |    3 | 00/0E49 : 4C CF 0E    | higher           jmp      dataerr              
  335 |  1 asmdemo.s     73 | Code        | 11 |         |    1 | 00/0E4C : 38          |                  sec                           
  336 |  1 asmdemo.s     74 | Code        | 11 |         |    1 | 00/0E4D : 60          |                  rts                           
  337 |  1 asmdemo.s     75 | Comment     | 11 |         |    0 | 00/0E4E               | *<sym>
  338 |  1 asmdemo.s     76 | Empty       | 11 |         |    0 | 00/0E4E               | same                                           ; file length = max : OK
  339 |  1 asmdemo.s     77 | Comment     | 11 |         |    0 | 00/0E4E               | *<sym>
  340 |  1 asmdemo.s     78 | Empty       | 11 |         |    0 | 00/0E4E               | lower                                          ; file length < max : OK
  341 |  1 asmdemo.s     79 | Empty       | 11 |         |    0 | 00/0E4E               |                                                
  342 |  1 asmdemo.s     80 | Code        | 11 |         |    2 | 00/0E4E : A2 12       |                  ldx      #$12                 ; get image width
  343 |  1 asmdemo.s     81 | Code        | 11 |         |    3 | 00/0E50 : BD 00 60    |                  lda      {$6000},x            
  344 |  1 asmdemo.s     82 | Code        | 11 |         |    3 | 00/0E53 : 8D B9 0E    |                  sta      hdef                 
  345 |  1 asmdemo.s     83 | Code        | 11 |         |    1 | 00/0E56 : E8          |                  inx                           
  346 |  1 asmdemo.s     84 | Code        | 11 |         |    3 | 00/0E57 : BD 00 60    |                  lda      {$6000},x            
  347 |  1 asmdemo.s     85 | Code        | 11 |         |    3 | 00/0E5A : 8D BA 0E    |                  sta      hdef+1               
  348 |  1 asmdemo.s     86 | Code        | 11 |         |    2 | 00/0E5D : A2 16       |                  ldx      #$16                 ; get image height
  349 |  1 asmdemo.s     87 | Code        | 11 |         |    3 | 00/0E5F : BD 00 60    |                  lda      {$6000},x            
  350 |  1 asmdemo.s     88 | Code        | 11 |         |    3 | 00/0E62 : 8D BB 0E    |                  sta      vdef                 
  351 |  1 asmdemo.s     89 | Code        | 11 |         |    1 | 00/0E65 : E8          |                  inx                           
  352 |  1 asmdemo.s     90 | Code        | 11 |         |    3 | 00/0E66 : BD 00 60    |                  lda      {$6000},x            
  353 |  1 asmdemo.s     91 | Code        | 11 |         |    3 | 00/0E69 : 8D BC 0E    |                  sta      vdef+1               
  354 |  1 asmdemo.s     92 | Empty       | 11 |         |    0 | 00/0E6C               |                                                
  355 |  1 asmdemo.s     93 | Code        | 11 |         |    3 | 00/0E6C : AD BA 0E    |                  lda      hdef+1               ; width must be <= maxwidth (560 ?)
  356 |  1 asmdemo.s     94 | Empty       | 11 |         |    0 | 00/0E6F               |                                                
  357 |  1 asmdemo.s     95 | Code        | 11 |         |    2 | 00/0E6F : C9 02       |                  cmp      #>{560}              
  358 |  1 asmdemo.s     96 | Code        | 11 |         |    2 | 00/0E71 : D0 05       |                  bne      ozunid_2             
  359 |  1 asmdemo.s     97 | Code        | 11 |         |    3 | 00/0E73 : AD B9 0E    |                  lda      hdef                 
  360 |  1 asmdemo.s     98 | Code        | 11 |         |    2 | 00/0E76 : C9 30       |                  cmp      #<{560}              
  361 |  1 asmdemo.s     99 | Code        | 11 |         |    2 | 00/0E78 : 90 09       | ozunid_2         bcc      goodw                
  362 |  1 asmdemo.s    100 | Code        | 11 |         |    2 | 00/0E7A : D0 02       |                  bne      badw                 
  363 |  1 asmdemo.s    101 | Code        | 11 |         |    2 | 00/0E7C : F0 05       |                  beq      goodw                
  364 |  1 asmdemo.s    102 | Comment     | 11 |         |    0 | 00/0E7E               | *<sym>
  365 |  1 asmdemo.s    103 | Code        | 11 |         |    3 | 00/0E7E : 4C CF 0E    | badw             jmp      dataerr              
  366 |  1 asmdemo.s    104 | Code        | 11 |         |    1 | 00/0E81 : 38          |                  sec                           
  367 |  1 asmdemo.s    105 | Code        | 11 |         |    1 | 00/0E82 : 60          |                  rts                           
  368 |  1 asmdemo.s    106 | Comment     | 11 |         |    0 | 00/0E83               | *<sym>
  369 |  1 asmdemo.s    107 | Empty       | 11 |         |    0 | 00/0E83               | goodw                                          
  370 |  1 asmdemo.s    108 | Code        | 11 |         |    3 | 00/0E83 : AD BC 0E    |                  lda      vdef+1               ; height must be <= maxheight (192 ?)
  371 |  1 asmdemo.s    109 | Code        | 11 |         |    2 | 00/0E86 : C9 00       |                  cmp      #>{192}              
  372 |  1 asmdemo.s    110 | Code        | 11 |         |    2 | 00/0E88 : D0 05       |                  bne      ozunid_3             
  373 |  1 asmdemo.s    111 | Code        | 11 |         |    3 | 00/0E8A : AD BB 0E    |                  lda      vdef                 
  374 |  1 asmdemo.s    112 | Code        | 11 |         |    2 | 00/0E8D : C9 C0       |                  cmp      #<{192}              
  375 |  1 asmdemo.s    113 | Code        | 11 |         |    2 | 00/0E8F : 90 04       | ozunid_3         bcc      goodh                
  376 |  1 asmdemo.s    114 | Code        | 11 |         |    2 | 00/0E91 : D0 EB       |                  bne      badw                 
  377 |  1 asmdemo.s    115 | Code        | 11 |         |    2 | 00/0E93 : F0 00       |                  beq      goodh                
  378 |  1 asmdemo.s    116 | Comment     | 11 |         |    0 | 00/0E95               | *<sym>
  379 |  1 asmdemo.s    117 | Empty       | 11 |         |    0 | 00/0E95               | goodh                                          
  380 |  1 asmdemo.s    118 | Code        | 11 |         |    2 | 00/0E95 : A2 0A       |                  ldx      #$A                  ; get image offset
  381 |  1 asmdemo.s    119 | Comment     | 11 |         |    0 | 00/0E97               |                                         ; image data start @ bmp+imgoffset
  382 |  1 asmdemo.s    120 | Code        | 11 |         |    3 | 00/0E97 : BD 00 60    |                  lda      {$6000},x            
  383 |  1 asmdemo.s    121 | Code        | 11 |         |    3 | 00/0E9A : 8D BD 0E    |                  sta      imgoffset            
  384 |  1 asmdemo.s    122 | Code        | 11 |         |    1 | 00/0E9D : E8          |                  inx                           
  385 |  1 asmdemo.s    123 | Code        | 11 |         |    3 | 00/0E9E : BD 00 60    |                  lda      {$6000},x            
  386 |  1 asmdemo.s    124 | Code        | 11 |         |    3 | 00/0EA1 : 8D BE 0E    |                  sta      imgoffset+1          
  387 |  1 asmdemo.s    125 | Empty       | 11 |         |    0 | 00/0EA4               |                                                
  388 |  1 asmdemo.s    126 | Code        | 11 |         |    2 | 00/0EA4 : A9 00       |                  lda      #<{$6000}            ; set pointer to beginning of image data
  389 |  1 asmdemo.s    127 | Code        | 11 |         |    1 | 00/0EA6 : 18          |                  clc                           
  390 |  1 asmdemo.s    128 | Code        | 11 |         |    3 | 00/0EA7 : 6D BD 0E    |                  adc      imgoffset            
  391 |  1 asmdemo.s    129 | Code        | 11 |         |    3 | 00/0EAA : 8D BF 0E    |                  sta      imgdata              
  392 |  1 asmdemo.s    130 | Code        | 11 |         |    2 | 00/0EAD : A9 60       |                  lda      #>{$6000}            
  393 |  1 asmdemo.s    131 | Code        | 11 |         |    3 | 00/0EAF : 6D BE 0E    |                  adc      imgoffset+1          
  394 |  1 asmdemo.s    132 | Code        | 11 |         |    3 | 00/0EB2 : 8D C0 0E    |                  sta      imgdata+1            
  395 |  1 asmdemo.s    133 | Code        | 11 |         |    1 | 00/0EB5 : 18          |                  clc                           
  396 |  1 asmdemo.s    134 | Code        | 11 |         |    1 | 00/0EB6 : 60          |                  rts                           
  397 |  1 asmdemo.s    135 | Comment     | 11 |         |    0 | 00/0EB7               | *<sym>
  398 |  1 asmdemo.s    136 | Data        | 11 |         |    2 | 00/0EB7 : 00 00       | filelen          ds       2                    
  399 |  1 asmdemo.s    137 | Comment     | 11 |         |    0 | 00/0EB9               | *<syme>
  400 |  1 asmdemo.s    138 | Equivalence | 11 |         |    0 | 00/0EB9               | maxlen           equ      $3600                
  401 |  1 asmdemo.s    139 | Comment     | 11 |         |    0 | 00/0EB9               | *<syme>
  402 |  1 asmdemo.s    140 | Equivalence | 11 |         |    0 | 00/0EB9               | maxwidth         equ      560                  
  403 |  1 asmdemo.s    141 | Comment     | 11 |         |    0 | 00/0EB9               | *<syme>
  404 |  1 asmdemo.s    142 | Equivalence | 11 |         |    0 | 00/0EB9               | maxheight        equ      192                  
  405 |  1 asmdemo.s    143 | Comment     | 11 |         |    0 | 00/0EB9               | *<sym>
  406 |  1 asmdemo.s    144 | Data        | 11 |         |    2 | 00/0EB9 : 00 00       | hdef             ds       2                    
  407 |  1 asmdemo.s    145 | Comment     | 11 |         |    0 | 00/0EBB               | *<sym>
  408 |  1 asmdemo.s    146 | Data        | 11 |         |    2 | 00/0EBB : 00 00       | vdef             ds       2                    
  409 |  1 asmdemo.s    147 | Comment     | 11 |         |    0 | 00/0EBD               | *<sym>
  410 |  1 asmdemo.s    148 | Data        | 11 |         |    2 | 00/0EBD : 00 00       | imgoffset        ds       2                    
  411 |  1 asmdemo.s    149 | Comment     | 11 |         |    0 | 00/0EBF               | *<sym>
  412 |  1 asmdemo.s    150 | Empty       | 11 |         |    0 | 00/0EBF               | imgdata                                        
  413 |  1 asmdemo.s    151 | Data        | 11 |         |    2 | 00/0EBF : 00 00       |                  ds       2                    
  414 |  1 asmdemo.s    152 | Empty       | 11 |         |    0 | 00/0EC1               |                                                
  415 |  1 asmdemo.s    153 | Comment     | 11 |         |    0 | 00/0EC1               | *<sym>
  416 |  1 asmdemo.s    154 | Empty       | 11 |         |    0 | 00/0EC1               | TestSign                                       
  417 |  1 asmdemo.s    155 | Code        | 11 |         |    3 | 00/0EC1 : AD 00 60    |                  lda      {$6000}              ; test signature
  418 |  1 asmdemo.s    156 | Code        | 11 |         |    2 | 00/0EC4 : C9 42       |                  cmp      #'B'                 
  419 |  1 asmdemo.s    157 | Code        | 11 |         |    2 | 00/0EC6 : D0 07       |                  bne      dataerr              
  420 |  1 asmdemo.s    158 | Code        | 11 |         |    3 | 00/0EC8 : AD 01 60    |                  lda      {$6000}+1            
  421 |  1 asmdemo.s    159 | Code        | 11 |         |    2 | 00/0ECB : C9 4D       |                  cmp      #'M'                 
  422 |  1 asmdemo.s    160 | Code        | 11 |         |    2 | 00/0ECD : F0 16       |                  beq      bmpOK                
  423 |  1 asmdemo.s    161 | Comment     | 11 |         |    0 | 00/0ECF               | *<sym>
  424 |  1 asmdemo.s    162 | Code        | 11 |         |    3 | 00/0ECF : 20 9A 13    | dataerr          jsr      DoTextScreen         ; bad signature
  425 |  1 asmdemo.s    163 | Code        | 11 |         |    2 | 00/0ED2 : A2 00       |                  ldx      #0                   
  426 |  1 asmdemo.s    164 | Comment     | 11 |         |    0 | 00/0ED4               | *<sym>
  427 |  1 asmdemo.s    165 | Code        | 11 |         |    3 | 00/0ED4 : BD E7 0E    | printchar        lda      errmsg,x             
  428 |  1 asmdemo.s    166 | Code        | 11 |         |    2 | 00/0ED7 : F0 07       |                  beq      errend               
  429 |  1 asmdemo.s    167 | Code        | 11 |         |    3 | 00/0ED9 : 20 ED FD    |                  jsr      {$FDED}              
  430 |  1 asmdemo.s    168 | Code        | 11 |         |    1 | 00/0EDC : E8          |                  inx                           
  431 |  1 asmdemo.s    169 | Code        | 11 |         |    3 | 00/0EDD : 4C D4 0E    |                  jmp      printchar            
  432 |  1 asmdemo.s    170 | Comment     | 11 |         |    0 | 00/0EE0               | *<sym>
  433 |  1 asmdemo.s    171 | Code        | 11 |         |    3 | 00/0EE0 : 20 8E FD    | errend           jsr      {$FD8E}              
  434 |  1 asmdemo.s    172 | Code        | 11 |         |    1 | 00/0EE3 : 38          |                  sec                           
  435 |  1 asmdemo.s    173 | Code        | 11 |         |    1 | 00/0EE4 : 60          |                  rts                           
  436 |  1 asmdemo.s    174 | Comment     | 11 |         |    0 | 00/0EE5               | *<sym>
  437 |  1 asmdemo.s    175 | Code        | 11 |         |    1 | 00/0EE5 : 18          | bmpOK            clc                           
  438 |  1 asmdemo.s    176 | Code        | 11 |         |    1 | 00/0EE6 : 60          |                  rts                           
  439 |  1 asmdemo.s    177 | Comment     | 11 |         |    0 | 00/0EE7               | *<sym>
  440 |  1 asmdemo.s    178 | Data        | 11 |         |    5 | 00/0EE7 : C5 F2 F2 EF | errmsg           asc      "Error"              
      |                     |             |    |         |      |           F2          |
  441 |  1 asmdemo.s    179 | Data        | 11 |         |    1 | 00/0EEC : 00          |                  dfb      0                    
  442 |  1 asmdemo.s    180 | Empty       | 11 |         |    0 | 00/0EED               |                                                
  443 |  1 asmdemo.s    181 | Comment     | 11 |         |    0 | 00/0EED               | *<sym>
  444 |  1 asmdemo.s    182 | Comment     | 11 |         |    0 | 00/0EED               | * Doimg
  445 |  1 asmdemo.s    183 | Comment     | 11 |         |    0 | 00/0EED               | * lopp on each line
  446 |  1 asmdemo.s    184 | Comment     | 11 |         |    0 | 00/0EED               | * loop on a line (lopp length = hdef bytes / 8) => calculte loop length 
  447 |  1 asmdemo.s    185 | Comment     | 11 |         |    0 | 00/0EED               | * needs : pointer to inputbyte
  448 |  1 asmdemo.s    186 | Comment     | 11 |         |    0 | 00/0EED               | * init pointer to imgdata
  449 |  1 asmdemo.s    187 | Empty       | 11 |         |    0 | 00/0EED               |                                                
  450 |  1 asmdemo.s    188 | Comment     | 11 |         |    0 | 00/0EED               | * for i = 1 to loop length
  451 |  1 asmdemo.s    189 | Comment     | 11 |         |    0 | 00/0EED               | * for each byte :
  452 |  1 asmdemo.s    190 | Comment     | 11 |         |    0 | 00/0EED               | * loop 8 time :                 ; no, end of line may occur before 8
  453 |  1 asmdemo.s    191 | Comment     | 11 |         |    0 | 00/0EED               | * get next bit by shifting left in C
  454 |  1 asmdemo.s    192 | Comment     | 11 |         |    0 | 00/0EED               | * poke bit in output byte : need bitcounter
  455 |  1 asmdemo.s    193 | Comment     | 11 |         |    0 | 00/0EED               | * if C = 0 : x = bitcounter; lda output byte ; and tableZero ; sta output byte
  456 |  1 asmdemo.s    194 | Comment     | 11 |         |    0 | 00/0EED               | * if C = 1 : x = bitcounter; lda tableZero,x ; eor $ff ; and output byte ; sta output byte
  457 |  1 asmdemo.s    195 | Empty       | 11 |         |    0 | 00/0EED               |                                                
  458 |  1 asmdemo.s    196 | Comment     | 11 |         |    0 | 00/0EED               | * inc bitcounter ; cmp #7 ; bne loop else { next output byte, bitcounter = 0}
  459 |  1 asmdemo.s    197 | Empty       | 11 |         |    0 | 00/0EED               |                                                
  460 |  1 asmdemo.s    198 | Comment     | 11 |         |    0 | 00/0EED               | * Draw line 
  461 |  1 asmdemo.s    199 | Comment     | 11 |         |    0 | 00/0EED               | * next line
  462 |  1 asmdemo.s    200 | Empty       | 11 |         |    0 | 00/0EED               |                                                
  463 |  1 asmdemo.s    201 | Comment     | 11 |         |    0 | 00/0EED               | * vars :
  464 |  1 asmdemo.s    202 | Comment     | 11 |         |    0 | 00/0EED               | *<sym>
  465 |  1 asmdemo.s    203 | Data        | 11 |         |    1 | 00/0EED : 00          | lineCnt          ds       1                    ; current # of lines
  466 |  1 asmdemo.s    204 | Comment     | 11 |         |    0 | 00/0EEE               | *<sym>
  467 |  1 asmdemo.s    205 | Data        | 11 |         |    1 | 00/0EEE : 00          | inputBitPos      ds       1                    ; current position in input byte (0 to 7)
  468 |  1 asmdemo.s    206 | Comment     | 11 |         |    0 | 00/0EEF               | *<sym>
  469 |  1 asmdemo.s    207 | Data        | 11 |         |    2 | 00/0EEF : 00 00       | inputBitCnt      ds       2                    ; current # of input byte (0 to hdef - 1)
  470 |  1 asmdemo.s    208 | Comment     | 11 |         |    0 | 00/0EF1               | *<sym>
  471 |  1 asmdemo.s    209 | Data        | 11 |         |    1 | 00/0EF1 : 00          | outputBitPos     ds       1                    ; current position in ouput byte (0 to 6)
  472 |  1 asmdemo.s    210 | Comment     | 11 |         |    0 | 00/0EF2               | *<sym>
  473 |  1 asmdemo.s    211 | Data        | 11 |         |    1 | 00/0EF2 : 00          | inbyte           ds       1                    ; save input byte
  474 |  1 asmdemo.s    212 | Comment     | 11 |         |    0 | 00/0EF3               | *<sym>
  475 |  1 asmdemo.s    213 | Data        | 11 |         |    1 | 00/0EF3 : 00          | inputByteCnt     ds       1                    ; counts # of input byte in a line
  476 |  1 asmdemo.s    214 | Comment     | 11 |         |    0 | 00/0EF4               | *<sym>
  477 |  1 asmdemo.s    215 | Empty       | 11 |         |    0 | 00/0EF4               | tableZero                                      
  478 |  1 asmdemo.s    216 | Data        | 11 |         |    1 | 00/0EF4 : FE          |                  db       %11111110            
  479 |  1 asmdemo.s    217 | Data        | 11 |         |    1 | 00/0EF5 : FD          |                  db       %11111101            
  480 |  1 asmdemo.s    218 | Data        | 11 |         |    1 | 00/0EF6 : FB          |                  db       %11111011            
  481 |  1 asmdemo.s    219 | Data        | 11 |         |    1 | 00/0EF7 : F7          |                  db       %11110111            
  482 |  1 asmdemo.s    220 | Data        | 11 |         |    1 | 00/0EF8 : EF          |                  db       %11101111            
  483 |  1 asmdemo.s    221 | Data        | 11 |         |    1 | 00/0EF9 : DF          |                  db       %11011111            
  484 |  1 asmdemo.s    222 | Data        | 11 |         |    1 | 00/0EFA : BF          |                  db       %10111111            
  485 |  1 asmdemo.s    223 | Comment     | 11 |         |    0 | 00/0EFB               | *<sym>
  486 |  1 asmdemo.s    224 | Data        | 11 |         |    7 | 00/0EFB : 00 00 00 00 | tableOne         ds       7                    
      |                     |             |    |         |      |           00 00 00    |
  487 |  1 asmdemo.s    225 | Comment     | 11 |         |    0 | 00/0F02               | *<sym>
  488 |  1 asmdemo.s    226 | Data        | 11 |         |    1 | 00/0F02 : 00          | bitmapwidth      ds       1                    
  489 |  1 asmdemo.s    227 | Comment     | 11 |         |    0 | 00/0F03               | *<sym>
  490 |  1 asmdemo.s    228 | Data        | 11 |         |    1 | 00/0F03 : 01          | flipflop         db       1                    
  491 |  1 asmdemo.s    229 | Empty       | 11 |         |    0 | 00/0F04               |                                                
  492 |  1 asmdemo.s    230 | Empty       | 11 |         |    0 | 00/0F04               |                                                
  493 |  1 asmdemo.s    231 | Comment     | 11 |         |    0 | 00/0F04               | ************ line grafport ************
  494 |  1 asmdemo.s    232 | Comment     | 11 |         |    0 | 00/0F04               | *<m2>
  495 |  1 asmdemo.s    233 | Comment     | 11 |         |    0 | 00/0F04               | *<sym>
  496 |  1 asmdemo.s    234 | Data        | 11 |         |    4 | 00/0F04 : 00 00 00 00 | imageLine        dw       0,0                  ; view location on current port
  497 |  1 asmdemo.s    235 | Comment     | 11 |         |    0 | 00/0F08               | *<sym>
  498 |  1 asmdemo.s    236 | Data        | 11 |         |    2 | 00/0F08 : 14 0F       | imfbits          dw       outbuff              ; bitmap pointer
  499 |  1 asmdemo.s    237 | Comment     | 11 |         |    0 | 00/0F0A               | *<sym>
  500 |  1 asmdemo.s    238 | Data        | 11 |         |    2 | 00/0F0A : 00 00       | imgw             dw       0                    ; width of bitmap
  501 |  1 asmdemo.s    239 | Comment     | 11 |         |    0 | 00/0F0C               | *<sym>
  502 |  1 asmdemo.s    240 | Data        | 11 |         |    8 | 00/0F0C : 00 00 00 00 | clipr            dw       0,0,0,0              ; clip rectangle
      |                     |             |    |         |      |           00 00 00 00 |
  503 |  1 asmdemo.s    241 | Empty       | 11 |         |    0 | 00/0F14               |                                                
  504 |  1 asmdemo.s    242 | Comment     | 11 |         |    0 | 00/0F14               | *<m1>
  505 |  1 asmdemo.s    243 | Comment     | 11 |         |    0 | 00/0F14               | *<sym>
  506 |  1 asmdemo.s    244 | Data        | 11 |         |   80 | 00/0F14 : 00 00 00 00 | outbuff          ds       80                   
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
  507 |  1 asmdemo.s    245 | Comment     | 11 |         |    0 | 00/0F64               | *<sym>
  508 |  1 asmdemo.s    246 | Data        | 11 |         |    1 | 00/0F64 : 00          | carryf           ds       1                    
  509 |  1 asmdemo.s    247 | Empty       | 11 |         |    0 | 00/0F65               |                                                
  510 |  1 asmdemo.s    248 | Comment     | 11 |         |    0 | 00/0F65               | *<bp>
  511 |  1 asmdemo.s    249 | Comment     | 11 |         |    0 | 00/0F65               | *<sym>
  512 |  1 asmdemo.s    250 | Empty       | 11 |         |    0 | 00/0F65               | Doimg                                          
  513 |  1 asmdemo.s    251 | Comment     | 11 |         |    0 | 00/0F65               | ***** init *****
  514 |  1 asmdemo.s    252 | Empty       | 11 |         |    0 | 00/0F65               |                                                
  515 |  1 asmdemo.s    253 | Code        | 11 |         |    3 | 00/0F65 : 20 BC 13    |                  jsr      clearbuffer          ; clear line buffer
  516 |  1 asmdemo.s    254 | Empty       | 11 |         |    0 | 00/0F68               |                                                
  517 |  1 asmdemo.s    255 | Code        | 11 |         |    2 | 00/0F68 : A9 00       |                  lda      #0                   ; init input line counter
  518 |  1 asmdemo.s    256 | Code        | 11 |         |    3 | 00/0F6A : 8D ED 0E    |                  sta      lineCnt              
  519 |  1 asmdemo.s    257 | Code        | 11 |         |    3 | 00/0F6D : 8D EF 0E    |                  sta      inputBitCnt          ; init input bit counter
  520 |  1 asmdemo.s    258 | Code        | 11 |         |    3 | 00/0F70 : 8D F0 0E    |                  sta      inputBitCnt+1        
  521 |  1 asmdemo.s    259 | Code        | 11 |         |    3 | 00/0F73 : 8D F3 0E    |                  sta      inputByteCnt         ; init # of byte in a row
  522 |  1 asmdemo.s    260 | Empty       | 11 |         |    0 | 00/0F76               |                                                
  523 |  1 asmdemo.s    261 | Code        | 11 |         |    3 | 00/0F76 : 8D F1 0E    |                  sta      outputBitPos         ; init output bit counter
  524 |  1 asmdemo.s    262 | Empty       | 11 |         |    0 | 00/0F79               |                                                
  525 |  1 asmdemo.s    263 | Code        | 11 |         |    3 | 00/0F79 : AD BF 0E    |                  lda      imgdata              ; init pointer to image data (input)
  526 |  1 asmdemo.s    264 | Code        | 11 |         |    3 | 00/0F7C : 8D C6 0F    |                  sta      lineloop+1           
  527 |  1 asmdemo.s    265 | Code        | 11 |         |    3 | 00/0F7F : AD C0 0E    |                  lda      imgdata+1            
  528 |  1 asmdemo.s    266 | Code        | 11 |         |    3 | 00/0F82 : 8D C7 0F    |                  sta      lineloop+2           
  529 |  1 asmdemo.s    267 | Empty       | 11 |         |    0 | 00/0F85               |                                                
  530 |  1 asmdemo.s    268 | Code        | 11 |         |    2 | 00/0F85 : A9 14       |                  lda      #<outbuff            ; init pointer to ouput (buffer)
  531 |  1 asmdemo.s    269 | Code        | 11 |         |    3 | 00/0F87 : 8D DE 0F    |                  sta      getoutbyte+1         
  532 |  1 asmdemo.s    270 | Code        | 11 |         |    2 | 00/0F8A : A9 0F       |                  lda      #>outbuff            
  533 |  1 asmdemo.s    271 | Code        | 11 |         |    3 | 00/0F8C : 8D DF 0F    |                  sta      getoutbyte+2         
  534 |  1 asmdemo.s    272 | Empty       | 11 |         |    0 | 00/0F8F               |                                                
  535 |  1 asmdemo.s    273 | Code        | 11 |         |    2 | 00/0F8F : A2 00       |                  ldx      #0                   ; init tableOne (= eor table Zero)
  536 |  1 asmdemo.s    274 | Comment     | 11 |         |    0 | 00/0F91               | *<sym> 
  537 |  1 asmdemo.s    275 | Code        | 11 |         |    3 | 00/0F91 : BD F4 0E    | tabloop          lda      tableZero,x          
  538 |  1 asmdemo.s    276 | Code        | 11 |         |    2 | 00/0F94 : 49 FF       |                  eor      #$FF                 
  539 |  1 asmdemo.s    277 | Code        | 11 |         |    3 | 00/0F96 : 9D FB 0E    |                  sta      tableOne,x           
  540 |  1 asmdemo.s    278 | Code        | 11 |         |    1 | 00/0F99 : E8          |                  inx                           
  541 |  1 asmdemo.s    279 | Code        | 11 |         |    2 | 00/0F9A : E0 07       |                  cpx      #7                   
  542 |  1 asmdemo.s    280 | Code        | 11 |         |    2 | 00/0F9C : D0 F3       |                  bne      tabloop              
  543 |  1 asmdemo.s    281 | Comment     | 11 |         |    0 | 00/0F9E               | *<sym>
  544 |  1 asmdemo.s    282 | Empty       | 11 |         |    0 | 00/0F9E               | getwidth                                       
  545 |  1 asmdemo.s    283 | Code        | 11 |         |    3 | 00/0F9E : AD B9 0E    |                  lda      hdef                 
  546 |  1 asmdemo.s    284 | Code        | 11 |         |    3 | 00/0FA1 : AE BA 0E    |                  ldx      hdef+1               
  547 |  1 asmdemo.s    285 | Code        | 11 |         |    3 | 00/0FA4 : 20 E0 13    |                  jsr      computeBytes         
  548 |  1 asmdemo.s    286 | Code        | 11 |         |    3 | 00/0FA7 : 8E 02 0F    |                  stx      bitmapwidth          
  549 |  1 asmdemo.s    287 | Comment     | 11 |         |    0 | 00/0FAA               | *<sym>
  550 |  1 asmdemo.s    288 | Empty       | 11 |         |    0 | 00/0FAA               | setline                                        
  551 |  1 asmdemo.s    289 | Code        | 11 |         |    3 | 00/0FAA : AD BB 0E    |                  lda      vdef                 
  552 |  1 asmdemo.s    290 | Code        | 11 |         |    3 | 00/0FAD : 8D 06 0F    |                  sta      imageLine+2          ; set vertical position of lower image line
  553 |  1 asmdemo.s    291 | Empty       | 11 |         |    0 | 00/0FB0               |                                                
  554 |  1 asmdemo.s    292 | Code        | 11 |         |    3 | 00/0FB0 : AD 02 0F    |                  lda      bitmapwidth          
  555 |  1 asmdemo.s    293 | Code        | 11 |         |    1 | 00/0FB3 : 0A          |                  asl                           
  556 |  1 asmdemo.s    294 | Code        | 11 |         |    3 | 00/0FB4 : 8D 0A 0F    |                  sta      imgw                 ; set image width in byte
  557 |  1 asmdemo.s    295 | Empty       | 11 |         |    0 | 00/0FB7               |                                                
  558 |  1 asmdemo.s    296 | Code        | 11 |         |    3 | 00/0FB7 : AD B9 0E    |                  lda      hdef                 ; set clip rectangle in pixels
  559 |  1 asmdemo.s    297 | Code        | 11 |         |    1 | 00/0FBA : 0A          |                  asl                           
  560 |  1 asmdemo.s    298 | Code        | 11 |         |    3 | 00/0FBB : 8D 10 0F    |                  sta      clipr+4              
  561 |  1 asmdemo.s    299 | Code        | 11 |         |    3 | 00/0FBE : AD BA 0E    |                  lda      hdef+1               
  562 |  1 asmdemo.s    300 | Code        | 11 |         |    1 | 00/0FC1 : 2A          |                  rol                           
  563 |  1 asmdemo.s    301 | Code        | 11 |         |    3 | 00/0FC2 : 8D 11 0F    |                  sta      clipr+5              
  564 |  1 asmdemo.s    302 | Empty       | 11 |         |    0 | 00/0FC5               |                                                
  565 |  1 asmdemo.s    303 | Comment     | 11 |         |    0 | 00/0FC5               | ***** process data *****
  566 |  1 asmdemo.s    304 | Comment     | 11 |         |    0 | 00/0FC5               | * outer loop (on all bytes of an image line)
  567 |  1 asmdemo.s    305 | Comment     | 11 |         |    0 | 00/0FC5               | *<sym>   
  568 |  1 asmdemo.s    306 | Empty       | 11 |         |    0 | 00/0FC5               | lineloop                                       ; get a new input byte
  569 |  1 asmdemo.s    307 | Code        | 11 |         |    3 | 00/0FC5 : AD FF FF    |                  lda      $ffff                ; self modified
  570 |  1 asmdemo.s    308 | Code        | 11 |         |    3 | 00/0FC8 : 8D F2 0E    |                  sta      inbyte               ; save it
  571 |  1 asmdemo.s    309 | Code        | 11 |         |    3 | 00/0FCB : EE F3 0E    |                  inc      inputByteCnt         ; update counter
  572 |  1 asmdemo.s    310 | Empty       | 11 |         |    0 | 00/0FCE               |                                                
  573 |  1 asmdemo.s    311 | Empty       | 11 |         |    0 | 00/0FCE               |                                                
  574 |  1 asmdemo.s    312 | Comment     | 11 |         |    0 | 00/0FCE               | * inner loop on pixels (= input bits)
  575 |  1 asmdemo.s    313 | Comment     | 11 |         |    0 | 00/0FCE               | *<sym>
  576 |  1 asmdemo.s    314 | Empty       | 11 |         |    0 | 00/0FCE               | pixelloop                                      
  577 |  1 asmdemo.s    315 | Code        | 11 |         |    3 | 00/0FCE : AD F2 0E    |                  lda      inbyte               ; reload input byte
  578 |  1 asmdemo.s    316 | Code        | 11 |         |    1 | 00/0FD1 : 0A          |                  asl                           ; get a bit
  579 |  1 asmdemo.s    317 | Code        | 11 |         |    3 | 00/0FD2 : 8D F2 0E    |                  sta      inbyte               ; save shifted input byte
  580 |  1 asmdemo.s    318 | Empty       | 11 |         |    0 | 00/0FD5               |                                                
  581 |  1 asmdemo.s    319 | Code        | 11 |         |    3 | 00/0FD5 : EE EF 0E    |                  inc      inputBitCnt          
  582 |  1 asmdemo.s    320 | Code        | 11 |         |    2 | 00/0FD8 : D0 03       |                  bne      getoutbyte           
  583 |  1 asmdemo.s    321 | Code        | 11 |         |    3 | 00/0FDA : EE F0 0E    |                  inc      inputBitCnt+1        
  584 |  1 asmdemo.s    322 | Empty       | 11 |         |    0 | 00/0FDD               |                                                
  585 |  1 asmdemo.s    323 | Comment     | 11 |         |    0 | 00/0FDD               | *<sym>        
  586 |  1 asmdemo.s    324 | Empty       | 11 |         |    0 | 00/0FDD               | getoutbyte                                     
  587 |  1 asmdemo.s    325 | Code        | 11 |         |    3 | 00/0FDD : AD FF FF    |                  lda      $ffff                ; get ouput byte
  588 |  1 asmdemo.s    326 | Code        | 11 |         |    3 | 00/0FE0 : AE F1 0E    |                  ldx      outputBitPos         
  589 |  1 asmdemo.s    327 | Code        | 11 |         |    2 | 00/0FE3 : B0 0B       |                  bcs      pokeOne              ; bit coming from input byte = 1 ?
  590 |  1 asmdemo.s    328 | Comment     | 11 |         |    0 | 00/0FE5               | *<sym>
  591 |  1 asmdemo.s    329 | Empty       | 11 |         |    0 | 00/0FE5               | pokeZero                                       ; no : set this bit to 0 in output bit
  592 |  1 asmdemo.s    330 | Code        | 11 |         |    3 | 00/0FE5 : 3D F4 0E    |                  and      tableZero,x          ; A : ouput byte, and it with table value
  593 |  1 asmdemo.s    331 | Code        | 11 |         |    2 | 00/0FE8 : A0 00       |                  ldy      #0                   
  594 |  1 asmdemo.s    332 | Code        | 11 |         |    3 | 00/0FEA : 8C 64 0F    |                  sty      carryf               
  595 |  1 asmdemo.s    333 | Code        | 11 |         |    3 | 00/0FED : 4C F8 0F    |                  jmp      pokeresult           
  596 |  1 asmdemo.s    334 | Comment     | 11 |         |    0 | 00/0FF0               | *<sym>
  597 |  1 asmdemo.s    335 | Empty       | 11 |         |    0 | 00/0FF0               | pokeOne                                        ; yes : set this bit to 1 in output bit
  598 |  1 asmdemo.s    336 | Code        | 11 |         |    2 | 00/0FF0 : A0 01       |                  ldy      #1                   
  599 |  1 asmdemo.s    337 | Code        | 11 |         |    3 | 00/0FF2 : 8C 64 0F    |                  sty      carryf               
  600 |  1 asmdemo.s    338 | Code        | 11 |         |    3 | 00/0FF5 : 1D FB 0E    |                  ora      tableOne,x           
  601 |  1 asmdemo.s    339 | Empty       | 11 |         |    0 | 00/0FF8               |                                                
  602 |  1 asmdemo.s    340 | Empty       | 11 |         |    0 | 00/0FF8               |                                                
  603 |  1 asmdemo.s    341 | Empty       | 11 |         |    0 | 00/0FF8               |                                                
  604 |  1 asmdemo.s    342 | Comment     | 11 |         |    0 | 00/0FF8               | *<sym>                                
  605 |  1 asmdemo.s    343 | Empty       | 11 |         |    0 | 00/0FF8               | pokeresult                                     ; save output byte
  606 |  1 asmdemo.s    344 | Code        | 11 |         |    3 | 00/0FF8 : AE DE 0F    |                  ldx      getoutbyte+1         ; get output address
  607 |  1 asmdemo.s    345 | Code        | 11 |         |    2 | 00/0FFB : 86 06       |                  stx      {$06}                
  608 |  1 asmdemo.s    346 | Code        | 11 |         |    3 | 00/0FFD : AE DF 0F    |                  ldx      getoutbyte+2         
  609 |  1 asmdemo.s    347 | Code        | 11 |         |    2 | 00/1000 : 86 07       |                  stx      {$06}+1              
  610 |  1 asmdemo.s    348 | Code        | 11 |         |    2 | 00/1002 : A0 00       |                  ldy      #0                   
  611 |  1 asmdemo.s    349 | Code        | 11 |         |    2 | 00/1004 : 91 06       |                  sta      ({$06}),y            ; poke output byte in its original place
  612 |  1 asmdemo.s    350 | Empty       | 11 |         |    0 | 00/1006               |                                                
  613 |  1 asmdemo.s    351 | Comment     | 11 |         |    0 | 00/1006               | *<sym> 
  614 |  1 asmdemo.s    352 | Code        | 11 |         |    3 | 00/1006 : EE F1 0E    | updateoutput     inc      outputBitPos         ; get bit pos (output)
  615 |  1 asmdemo.s    353 | Code        | 11 |         |    3 | 00/1009 : AD F1 0E    |                  lda      outputBitPos         
  616 |  1 asmdemo.s    354 | Code        | 11 |         |    2 | 00/100C : C9 07       |                  cmp      #7                   ; = 7 ?
  617 |  1 asmdemo.s    355 | Code        | 11 |         |    2 | 00/100E : D0 08       |                  bne      ozunid_4             
  618 |  1 asmdemo.s    356 | Code        | 11 |         |    2 | 00/1010 : A9 00       |                  lda      #0                   
  619 |  1 asmdemo.s    357 | Code        | 11 |         |    3 | 00/1012 : 8D F1 0E    |                  sta      outputBitPos         ; yes : reset pos
  620 |  1 asmdemo.s    358 | Code        | 11 |         |    3 | 00/1015 : 20 A6 10    |                  jsr      nextoutput           ; inc pointer
  621 |  1 asmdemo.s    359 | Empty       | 11 |         |    0 | 00/1018               | ozunid_4                                       
  622 |  1 asmdemo.s    360 | Empty       | 11 |         |    0 | 00/1018               |                                                
  623 |  1 asmdemo.s    361 | Code        | 11 |         |    1 | 00/1018 : 18          |                  clc                           
  624 |  1 asmdemo.s    362 | Code        | 11 |         |    3 | 00/1019 : AC 64 0F    |                  ldy      carryf               
  625 |  1 asmdemo.s    363 | Code        | 11 |         |    2 | 00/101C : F0 01       |                  beq      _2                   
  626 |  1 asmdemo.s    364 | Code        | 11 |         |    1 | 00/101E : 38          |                  sec                           
  627 |  1 asmdemo.s    365 | Code        | 11 |         |    3 | 00/101F : AD 03 0F    | _2               lda      flipflop             
  628 |  1 asmdemo.s    366 | Code        | 11 |         |    2 | 00/1022 : 49 01       |                  eor      #1                   
  629 |  1 asmdemo.s    367 | Code        | 11 |         |    3 | 00/1024 : 8D 03 0F    |                  sta      flipflop             
  630 |  1 asmdemo.s    368 | Code        | 11 |         |    2 | 00/1027 : F0 B4       |                  beq      getoutbyte           
  631 |  1 asmdemo.s    369 | Empty       | 11 |         |    0 | 00/1029               |                                                
  632 |  1 asmdemo.s    370 | Empty       | 11 |         |    0 | 00/1029               |                                                
  633 |  1 asmdemo.s    371 | Code        | 11 |         |    3 | 00/1029 : AD EF 0E    |                  lda      inputBitCnt          ; all pixels done for this line ?
  634 |  1 asmdemo.s    372 | Code        | 11 |         |    3 | 00/102C : CD B9 0E    |                  cmp      hdef                 
  635 |  1 asmdemo.s    373 | Code        | 11 |         |    2 | 00/102F : D0 54       |                  bne      nextpixel            
  636 |  1 asmdemo.s    374 | Code        | 11 |         |    3 | 00/1031 : AD F0 0E    |                  lda      inputBitCnt+1        
  637 |  1 asmdemo.s    375 | Code        | 11 |         |    3 | 00/1034 : CD BA 0E    |                  cmp      hdef+1               
  638 |  1 asmdemo.s    376 | Code        | 11 |         |    2 | 00/1037 : D0 4C       |                  bne      nextpixel            
  639 |  1 asmdemo.s    377 | Empty       | 11 |         |    0 | 00/1039               |                                                
  640 |  1 asmdemo.s    378 | Empty       | 11 |         |    0 | 00/1039               |                                                
  641 |  1 asmdemo.s    379 | Comment     | 11 |         |    0 | 00/1039               | *<bp>
  642 |  1 asmdemo.s    380 | Comment     | 11 |         |    0 | 00/1039               | *<sym>  
  643 |  1 asmdemo.s    381 | Empty       | 11 |         |    0 | 00/1039               | nextline                                       ; yes : paint current line and prepare next one
  644 |  1 asmdemo.s    382 | Code        | 11 |         |    3 | 00/1039 : 20 AF 10    |                  jsr      drawImgLine          ; a line has been calcultated, paint it !!!
  645 |  1 asmdemo.s    383 | Empty       | 11 |         |    0 | 00/103C               |                                                
  646 |  1 asmdemo.s    384 | Code        | 11 |         |    2 | 00/103C : A9 14       |                  lda      #<outbuff            ; reset pointer to beginning of output buffer
  647 |  1 asmdemo.s    385 | Code        | 11 |         |    3 | 00/103E : 8D DE 0F    |                  sta      getoutbyte+1         
  648 |  1 asmdemo.s    386 | Code        | 11 |         |    2 | 00/1041 : A9 0F       |                  lda      #>outbuff            
  649 |  1 asmdemo.s    387 | Code        | 11 |         |    3 | 00/1043 : 8D DF 0F    |                  sta      getoutbyte+2         
  650 |  1 asmdemo.s    388 | Empty       | 11 |         |    0 | 00/1046               |                                                
  651 |  1 asmdemo.s    389 | Code        | 11 |         |    3 | 00/1046 : 20 BC 13    |                  jsr      clearbuffer          ; zero ouput buffer
  652 |  1 asmdemo.s    390 | Comment     | 11 |         |    0 | 00/1049               | *<sym> 
  653 |  1 asmdemo.s    391 | Empty       | 11 |         |    0 | 00/1049               | loopadjust                                     ; in an image line, # of bytes must be divisible by 4
  654 |  1 asmdemo.s    392 | Comment     | 11 |         |    0 | 00/1049               |                                         ; if not, padded with zeros to make it divisible by 4
  655 |  1 asmdemo.s    393 | Comment     | 11 |         |    0 | 00/1049               |                                         ; so we need to jump over these useless bytes.
  656 |  1 asmdemo.s    394 | Code        | 11 |         |    3 | 00/1049 : AD F3 0E    |                  lda      inputByteCnt         ; get # of byte done in previous image line
  657 |  1 asmdemo.s    395 | Code        | 11 |         |    2 | 00/104C : 29 03       |                  and      #3                   ; if this number is divisible by 4
  658 |  1 asmdemo.s    396 | Code        | 11 |         |    2 | 00/104E : F0 0B       |                  beq      div4ok               ; go on
  659 |  1 asmdemo.s    397 | Code        | 11 |         |    3 | 00/1050 : 20 9D 10    |                  jsr      nextinput            ; else inc pointer to input data
  660 |  1 asmdemo.s    398 | Code        | 11 |         |    3 | 00/1053 : EE F3 0E    |                  inc      inputByteCnt         ; inc counter
  661 |  1 asmdemo.s    399 | Code        | 11 |         |    3 | 00/1056 : 4C 49 10    |                  jmp      loopadjust           ; and loop until inputByteCnt is divisible by 4
  662 |  1 asmdemo.s    400 | Code        | 11 |         |    2 | 00/1059 : D0 00       |                  bne      div4ok               
  663 |  1 asmdemo.s    401 | Comment     | 11 |         |    0 | 00/105B               | *<sym> 
  664 |  1 asmdemo.s    402 | Empty       | 11 |         |    0 | 00/105B               | div4ok                                         
  665 |  1 asmdemo.s    403 | Code        | 11 |         |    2 | 00/105B : A9 00       |                  lda      #0                   
  666 |  1 asmdemo.s    404 | Code        | 11 |         |    3 | 00/105D : 8D F3 0E    |                  sta      inputByteCnt         
  667 |  1 asmdemo.s    405 | Code        | 11 |         |    3 | 00/1060 : 20 9D 10    |                  jsr      nextinput            ; inc pointer to input byte
  668 |  1 asmdemo.s    406 | Empty       | 11 |         |    0 | 00/1063               |                                                
  669 |  1 asmdemo.s    407 | Code        | 11 |         |    2 | 00/1063 : A9 00       |                  lda      #0                   
  670 |  1 asmdemo.s    408 | Code        | 11 |         |    3 | 00/1065 : 8D EE 0E    |                  sta      inputBitPos          ; reset bit pos for input
  671 |  1 asmdemo.s    409 | Code        | 11 |         |    3 | 00/1068 : 8D EF 0E    |                  sta      inputBitCnt          ; reset input bit counter
  672 |  1 asmdemo.s    410 | Code        | 11 |         |    3 | 00/106B : 8D F0 0E    |                  sta      inputBitCnt+1        
  673 |  1 asmdemo.s    411 | Code        | 11 |         |    3 | 00/106E : 8D F1 0E    |                  sta      outputBitPos         ; reset output byte position
  674 |  1 asmdemo.s    412 | Empty       | 11 |         |    0 | 00/1071               |                                                
  675 |  1 asmdemo.s    413 | Code        | 11 |         |    2 | 00/1071 : A9 01       |                  lda      #1                   
  676 |  1 asmdemo.s    414 | Code        | 11 |         |    3 | 00/1073 : 8D 03 0F    |                  sta      flipflop             
  677 |  1 asmdemo.s    415 | Empty       | 11 |         |    0 | 00/1076               |                                                
  678 |  1 asmdemo.s    416 | Code        | 11 |         |    3 | 00/1076 : EE ED 0E    |                  inc      lineCnt              ; inc line counter
  679 |  1 asmdemo.s    417 | Code        | 11 |         |    3 | 00/1079 : AD ED 0E    |                  lda      lineCnt              
  680 |  1 asmdemo.s    418 | Code        | 11 |         |    3 | 00/107C : CD BB 0E    |                  cmp      vdef                 ; all lines done ?
  681 |  1 asmdemo.s    419 | Code        | 11 |         |    2 | 00/107F : F0 03       |                  beq      endloop              ; yes : end
  682 |  1 asmdemo.s    420 | Code        | 11 |         |    3 | 00/1081 : 4C C5 0F    |                  jmp      lineloop             ; no : loop for another image line
  683 |  1 asmdemo.s    421 | Comment     | 11 |         |    0 | 00/1084               | *<sym>  
  684 |  1 asmdemo.s    422 | Empty       | 11 |         |    0 | 00/1084               | endloop                                        
  685 |  1 asmdemo.s    423 | Code        | 11 |         |    1 | 00/1084 : 60          |                  rts                           ; END !!!
  686 |  1 asmdemo.s    424 | Comment     | 11 |         |    0 | 00/1085               | *<sym>         
  687 |  1 asmdemo.s    425 | Empty       | 11 |         |    0 | 00/1085               | nextpixel                                      ; no : other pixels to go on current line
  688 |  1 asmdemo.s    426 | Code        | 11 |         |    3 | 00/1085 : EE EE 0E    |                  inc      inputBitPos          ; get bit pos (input)
  689 |  1 asmdemo.s    427 | Code        | 11 |         |    3 | 00/1088 : AD EE 0E    |                  lda      inputBitPos          
  690 |  1 asmdemo.s    428 | Code        | 11 |         |    2 | 00/108B : C9 08       |                  cmp      #8                   ; = 8 ?
  691 |  1 asmdemo.s    429 | Code        | 11 |         |    2 | 00/108D : F0 03       |                  beq      nextbyte             
  692 |  1 asmdemo.s    430 | Code        | 11 |         |    3 | 00/108F : 4C CE 0F    |                  jmp      pixelloop            
  693 |  1 asmdemo.s    431 | Comment     | 11 |         |    0 | 00/1092               | *<sym>  
  694 |  1 asmdemo.s    432 | Empty       | 11 |         |    0 | 00/1092               | nextbyte                                       
  695 |  1 asmdemo.s    433 | Code        | 11 |         |    2 | 00/1092 : A9 00       |                  lda      #0                   ; yes : adjust vars
  696 |  1 asmdemo.s    434 | Code        | 11 |         |    3 | 00/1094 : 8D EE 0E    |                  sta      inputBitPos          ; reset input bit position pos to 0
  697 |  1 asmdemo.s    435 | Code        | 11 |         |    3 | 00/1097 : 20 9D 10    |                  jsr      nextinput            ; inc pointer to image data
  698 |  1 asmdemo.s    436 | Code        | 11 |         |    3 | 00/109A : 4C C5 0F    |                  jmp      lineloop             ; loop to get next input byte
  699 |  1 asmdemo.s    437 | Comment     | 11 |         |    0 | 00/109D               | *<sym>                                 
  700 |  1 asmdemo.s    438 | Empty       | 11 |         |    0 | 00/109D               | nextinput                                      
  701 |  1 asmdemo.s    439 | Code        | 11 |         |    3 | 00/109D : EE C6 0F    |                  inc      lineloop+1           
  702 |  1 asmdemo.s    440 | Code        | 11 |         |    2 | 00/10A0 : D0 03       |                  bne      nextinputO           
  703 |  1 asmdemo.s    441 | Code        | 11 |         |    3 | 00/10A2 : EE C7 0F    |                  inc      lineloop+2           
  704 |  1 asmdemo.s    442 | Comment     | 11 |         |    0 | 00/10A5               | *<sym>
  705 |  1 asmdemo.s    443 | Code        | 11 |         |    1 | 00/10A5 : 60          | nextinputO       rts                           
  706 |  1 asmdemo.s    444 | Empty       | 11 |         |    0 | 00/10A6               |                                                
  707 |  1 asmdemo.s    445 | Empty       | 11 |         |    0 | 00/10A6               |                                                
  708 |  1 asmdemo.s    446 | Comment     | 11 |         |    0 | 00/10A6               | *<sym>
  709 |  1 asmdemo.s    447 | Empty       | 11 |         |    0 | 00/10A6               | nextoutput                                     
  710 |  1 asmdemo.s    448 | Code        | 11 |         |    3 | 00/10A6 : EE DE 0F    |                  inc      getoutbyte+1         
  711 |  1 asmdemo.s    449 | Code        | 11 |         |    2 | 00/10A9 : D0 03       |                  bne      nextoutputO          
  712 |  1 asmdemo.s    450 | Code        | 11 |         |    3 | 00/10AB : EE DF 0F    |                  inc      getoutbyte+2         
  713 |  1 asmdemo.s    451 | Comment     | 11 |         |    0 | 00/10AE               | *<sym>
  714 |  1 asmdemo.s    452 | Code        | 11 |         |    1 | 00/10AE : 60          | nextoutputO      rts                           
  715 |  1 asmdemo.s    453 | Empty       | 11 |         |    0 | 00/10AF               |                                                
  716 |  1 asmdemo.s    454 | Empty       | 11 |         |    0 | 00/10AF               |                                                
  717 |  1 asmdemo.s    455 | Comment     | 11 |         |    0 | 00/10AF               | *<sym>
  718 |  1 asmdemo.s    456 | Empty       | 11 |         |    0 | 00/10AF               | drawImgLine                                    
  719 |  1 asmdemo.s    457 | Macro       | 11 |         |    0 | 00/10AF               |                  GP_call  {{{{{{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1};imageLine
  720 |  1 asmdemo.s    457 | Code        | 11 |         |    3 | 00/10AF : 20 00 40    |                  jsr      {$4000}              ; graphic primitives only entry point
  721 |  1 asmdemo.s    457 | Data        | 11 |         |    1 | 00/10B2 : 14          |                  dfb      {{{{{{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}; command ID (1 byte)
  722 |  1 asmdemo.s    457 | Data        | 11 |         |    2 | 00/10B3 : 04 0F       |                  da       imageLine            ; address of parameter(s) (2 bytes), 0 if no paramter
  723 |  1 asmdemo.s    458 | Code        | 11 |         |    3 | 00/10B5 : CE 06 0F    |                  dec      imageLine+2          
  724 |  1 asmdemo.s    459 | Code        | 11 |         |    1 | 00/10B8 : 60          |                  rts                           
  725 |  1 asmdemo.s    460 | Comment     | 11 |         |    0 | 00/10B9               | *<syme>
  726 |  1 asmdemo.s    461 | Equivalence | 11 |         |    0 | 00/10B9               | bmp              equ      $6000                ; image is supposed to be loaded at $6000
  727 |  1 asmdemo.s    462 | Empty       | 11 |         |    0 | 00/10B9               |                                                
  728 |  1 asmdemo.s    463 | Comment     | 11 |         |    0 | 00/10B9               | * DoPaint
  729 |  1 asmdemo.s    464 | Comment     | 11 |         |    0 | 00/10B9               | *
  730 |  1 asmdemo.s    465 | Comment     | 11 |         |    0 | 00/10B9               | *<sym>
  731 |  1 asmdemo.s    466 | Empty       | 11 |         |    0 | 00/10B9               | DoPaint                                        
  732 |  1 asmdemo.s    467 | Macro       | 11 |         |    0 | 00/10B9               |                  GP_call  {{{{{{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1};LineDHGR
  733 |  1 asmdemo.s    467 | Code        | 11 |         |    3 | 00/10B9 : 20 00 40    |                  jsr      {$4000}              ; graphic primitives only entry point
  734 |  1 asmdemo.s    467 | Data        | 11 |         |    1 | 00/10BC : 14          |                  dfb      {{{{{{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}; command ID (1 byte)
  735 |  1 asmdemo.s    467 | Data        | 11 |         |    2 | 00/10BD : C0 10       |                  da       LineDHGR             ; address of parameter(s) (2 bytes), 0 if no paramter
  736 |  1 asmdemo.s    468 | Code        | 11 |         |    1 | 00/10BF : 60          |                  rts                           
  737 |  1 asmdemo.s    469 | Empty       | 11 |         |    0 | 00/10C0               |                                                
  738 |  1 asmdemo.s    470 | Data        | 11 |         |    4 | 00/10C0 : 00 00 0A 00 | LineDHGR         dw       0,10                 ; view location on current port
  739 |  1 asmdemo.s    471 | Data        | 11 |         |    2 | 00/10C4 : D0 10       |                  dw       LineBits             ; bitmap pointer
  740 |  1 asmdemo.s    472 | Data        | 11 |         |    2 | 00/10C6 : 50 00       |                  dw       80                   ; width of bitmap
  741 |  1 asmdemo.s    473 | Data        | 11 |         |    8 | 00/10C8 : 00 00 00 00 |                  dw       0,0,560,0            ; clip rectangle
      |                     |             |    |         |      |           30 02 00 00 |
  742 |  1 asmdemo.s    474 | Empty       | 11 |         |    0 | 00/10D0               |                                                
  743 |  1 asmdemo.s    475 | Empty       | 11 |         |    0 | 00/10D0               | LineBits                                       
  744 |  1 asmdemo.s    476 | Data        | 11 |         |   80 | 00/10D0 : FF FF FF FF |                  ds       80,$FF               
      |                     |             |    |         |      |           FF FF FF FF |
      |                     |             |    |         |      |           FF FF FF FF |
      |                     |             |    |         |      |           FF FF FF FF |
      |                     |             |    |         |      |           FF FF FF FF |
      |                     |             |    |         |      |           FF FF FF FF |
      |                     |             |    |         |      |           FF FF FF FF |
      |                     |             |    |         |      |           FF FF FF FF |
      |                     |             |    |         |      |           FF FF FF FF |
      |                     |             |    |         |      |           FF FF FF FF |
      |                     |             |    |         |      |           FF FF FF FF |
      |                     |             |    |         |      |           FF FF FF FF |
      |                     |             |    |         |      |           FF FF FF FF |
      |                     |             |    |         |      |           FF FF FF FF |
      |                     |             |    |         |      |           FF FF FF FF |
      |                     |             |    |         |      |           FF FF FF FF |
      |                     |             |    |         |      |           FF FF FF FF |
      |                     |             |    |         |      |           FF FF FF FF |
      |                     |             |    |         |      |           FF FF FF FF |
      |                     |             |    |         |      |           FF FF FF FF |
  745 |  1 asmdemo.s    477 | Empty       | 11 |         |    0 | 00/1120               |                                                
  746 |  1 asmdemo.s    478 | Comment     | 11 |         |    0 | 00/1120               | *<sym>
  747 |  1 asmdemo.s    479 | Empty       | 11 |         |    0 | 00/1120               | DoPaint2                                       
  748 |  1 asmdemo.s    480 | Code        | 11 |         |    2 | 00/1120 : A0 00       |                  ldy      #0                   
  749 |  1 asmdemo.s    481 | Empty       | 11 |         |    0 | 00/1122               | outter                                         
  750 |  1 asmdemo.s    482 | Code        | 11 |         |    1 | 00/1122 : 5A          |                  phy                           
  751 |  1 asmdemo.s    483 | Code        | 11 |         |    2 | 00/1123 : A2 00       |                  ldx      #0                   
  752 |  1 asmdemo.s    484 | Empty       | 11 |         |    0 | 00/1125               | godraw                                         
  753 |  1 asmdemo.s    485 | Code        | 11 |         |    1 | 00/1125 : DA          |                  phx                           
  754 |  1 asmdemo.s    486 | Macro       | 11 |         |    0 | 00/1126               |                  GP_call  {{{{{{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1};TestBits2
  755 |  1 asmdemo.s    486 | Code        | 11 |         |    3 | 00/1126 : 20 00 40    |                  jsr      {$4000}              ; graphic primitives only entry point
  756 |  1 asmdemo.s    486 | Data        | 11 |         |    1 | 00/1129 : 14          |                  dfb      {{{{{{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}; command ID (1 byte)
  757 |  1 asmdemo.s    486 | Data        | 11 |         |    2 | 00/112A : 41 11       |                  da       TestBits2            ; address of parameter(s) (2 bytes), 0 if no paramter
  758 |  1 asmdemo.s    487 | Empty       | 11 |         |    0 | 00/112C               |                                                
  759 |  1 asmdemo.s    488 | Code        | 11 |         |    1 | 00/112C : FA          |                  plx                           
  760 |  1 asmdemo.s    489 | Code        | 11 |         |    3 | 00/112D : BD 51 11    |                  lda      DataBits,x           
  761 |  1 asmdemo.s    490 | Code        | 11 |         |    1 | 00/1130 : 38          |                  sec                           
  762 |  1 asmdemo.s    491 | Code        | 11 |         |    1 | 00/1131 : 2A          |                  rol                           
  763 |  1 asmdemo.s    492 | Code        | 11 |         |    3 | 00/1132 : 9D 51 11    |                  sta      DataBits,x           
  764 |  1 asmdemo.s    493 | Code        | 11 |         |    1 | 00/1135 : E8          |                  inx                           
  765 |  1 asmdemo.s    494 | Code        | 11 |         |    2 | 00/1136 : E0 1E       |                  cpx      #30                  
  766 |  1 asmdemo.s    495 | Code        | 11 |         |    2 | 00/1138 : D0 EB       |                  bne      godraw               
  767 |  1 asmdemo.s    496 | Code        | 11 |         |    1 | 00/113A : 7A          |                  ply                           
  768 |  1 asmdemo.s    497 | Code        | 11 |         |    1 | 00/113B : C8          |                  iny                           
  769 |  1 asmdemo.s    498 | Code        | 11 |         |    2 | 00/113C : C0 07       |                  cpy      #7                   
  770 |  1 asmdemo.s    499 | Code        | 11 |         |    2 | 00/113E : D0 E2       |                  bne      outter               
  771 |  1 asmdemo.s    500 | Code        | 11 |         |    1 | 00/1140 : 60          |                  rts                           
  772 |  1 asmdemo.s    501 | Empty       | 11 |         |    0 | 00/1141               |                                                
  773 |  1 asmdemo.s    502 | Data        | 11 |         |    4 | 00/1141 : 32 00 32 00 | TestBits2        dw       50,50                ; view location on current port
  774 |  1 asmdemo.s    503 | Data        | 11 |         |    2 | 00/1145 : 51 11       |                  dw       DataBits             ; bitmap pointer
  775 |  1 asmdemo.s    504 | Data        | 11 |         |    2 | 00/1147 : 03 00       |                  dw       3                    ; width of bitmap
  776 |  1 asmdemo.s    505 | Data        | 11 |         |    8 | 00/1149 : 00 00 00 00 |                  dw       0,0,17,9             ; clip rectangle
      |                     |             |    |         |      |           11 00 09 00 |
  777 |  1 asmdemo.s    506 | Empty       | 11 |         |    0 | 00/1151               |                                                
  778 |  1 asmdemo.s    507 | Data        | 11 |         |    3 | 00/1151 : 00 00 00    | DataBits         dfb      $00,$00,$00          ; bitmap data
  779 |  1 asmdemo.s    508 | Data        | 11 |         |    3 | 00/1154 : 00 00 00    |                  dfb      $00,$00,$00          
  780 |  1 asmdemo.s    509 | Data        | 11 |         |    3 | 00/1157 : 00 00 00    |                  dfb      $00,$00,$00          
  781 |  1 asmdemo.s    510 | Data        | 11 |         |    3 | 00/115A : 00 00 00    |                  dfb      $00,$00,$00          
  782 |  1 asmdemo.s    511 | Data        | 11 |         |    3 | 00/115D : 00 00 00    |                  dfb      $00,$00,$00          
  783 |  1 asmdemo.s    512 | Data        | 11 |         |    3 | 00/1160 : 00 00 00    |                  dfb      $00,$00,$00          
  784 |  1 asmdemo.s    513 | Data        | 11 |         |    3 | 00/1163 : 00 00 00    |                  dfb      $00,$00,$00          
  785 |  1 asmdemo.s    514 | Data        | 11 |         |    3 | 00/1166 : 00 00 00    |                  dfb      $00,$00,$00          
  786 |  1 asmdemo.s    515 | Data        | 11 |         |    3 | 00/1169 : 00 00 00    |                  dfb      $00,$00,$00          
  787 |  1 asmdemo.s    516 | Data        | 11 |         |    3 | 00/116C : 00 00 00    |                  dfb      $00,$00,$00          
  788 |  1 asmdemo.s    517 | Empty       | 11 |         |    0 | 00/116F               |                                                
  789 |  1 asmdemo.s    518 | Comment     | 11 |         |    0 | 00/116F               | * Wait for keypress
  790 |  1 asmdemo.s    519 | Comment     | 11 |         |    0 | 00/116F               | *
  791 |  1 asmdemo.s    520 | Empty       | 11 |         |    0 | 00/116F               | WaitForKeyPress                                
  792 |  1 asmdemo.s    521 | Code        | 11 |         |    3 | 00/116F : AD 00 C0    |                  lda      {$C000}              
  793 |  1 asmdemo.s    522 | Code        | 11 |         |    2 | 00/1172 : 10 FB       |                  bpl      WaitForKeyPress      
  794 |  1 asmdemo.s    523 | Code        | 11 |         |    3 | 00/1174 : 8D 10 C0    |                  sta      {$C010}              
  795 |  1 asmdemo.s    524 | Code        | 11 |         |    1 | 00/1177 : 60          |                  rts                           
  796 |  1 asmdemo.s    525 | Comment     | 11 |         |    0 | 00/1178               | *
  797 |  1 asmdemo.s    526 | Comment     | 11 |         |    0 | 00/1178               | * ClearIt
  798 |  1 asmdemo.s    527 | Comment     | 11 |         |    0 | 00/1178               | *
  799 |  1 asmdemo.s    528 | Empty       | 11 |         |    0 | 00/1178               | ozunid_6                                       
  800 |  1 asmdemo.s    528 | Equivalence | 11 |         |    0 | 00/1178               | ClearIt          equ      ozunid_6             ; fill port with black
  801 |  1 asmdemo.s    529 | Macro       | 11 |         |    0 | 00/1178               |                  GP_call  {{{{{{{1}+1}+1}+1}+1}+1}+1};ModeCopy; pen + destination = pen
  802 |  1 asmdemo.s    529 | Code        | 11 |         |    3 | 00/1178 : 20 00 40    |                  jsr      {$4000}              ; graphic primitives only entry point
  803 |  1 asmdemo.s    529 | Data        | 11 |         |    1 | 00/117B : 07          |                  dfb      {{{{{{{1}+1}+1}+1}+1}+1}+1}; command ID (1 byte)
  804 |  1 asmdemo.s    529 | Data        | 11 |         |    2 | 00/117C : F6 11       |                  da       ModeCopy             ; address of parameter(s) (2 bytes), 0 if no paramter
  805 |  1 asmdemo.s    530 | Macro       | 11 |         |    0 | 00/117E               |                  GP_call  {{{{{{{{1}+1}+1}+1}+1}+1}+1}+1};Black; black (0,0,...)
  806 |  1 asmdemo.s    530 | Code        | 11 |         |    3 | 00/117E : 20 00 40    |                  jsr      {$4000}              ; graphic primitives only entry point
  807 |  1 asmdemo.s    530 | Data        | 11 |         |    1 | 00/1181 : 08          |                  dfb      {{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}; command ID (1 byte)
  808 |  1 asmdemo.s    530 | Data        | 11 |         |    2 | 00/1182 : 1B 12       |                  da       Black                ; address of parameter(s) (2 bytes), 0 if no paramter
  809 |  1 asmdemo.s    531 | Macro       | 11 |         |    0 | 00/1184               |                  GP_call  {{{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1};WowRect; paint very large rectangle in black
  810 |  1 asmdemo.s    531 | Code        | 11 |         |    3 | 00/1184 : 20 00 40    |                  jsr      {$4000}              ; graphic primitives only entry point
  811 |  1 asmdemo.s    531 | Data        | 11 |         |    1 | 00/1187 : 11          |                  dfb      {{{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}; command ID (1 byte)
  812 |  1 asmdemo.s    531 | Data        | 11 |         |    2 | 00/1188 : 91 11       |                  da       WowRect              ; address of parameter(s) (2 bytes), 0 if no paramter
  813 |  1 asmdemo.s    532 | Macro       | 11 |         |    0 | 00/118A               |                  GP_call  {{{{{{{{1}+1}+1}+1}+1}+1}+1}+1};White; restore pattern to white (1,1,...)
  814 |  1 asmdemo.s    532 | Code        | 11 |         |    3 | 00/118A : 20 00 40    |                  jsr      {$4000}              ; graphic primitives only entry point
  815 |  1 asmdemo.s    532 | Data        | 11 |         |    1 | 00/118D : 08          |                  dfb      {{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}; command ID (1 byte)
  816 |  1 asmdemo.s    532 | Data        | 11 |         |    2 | 00/118E : 24 12       |                  da       White                ; address of parameter(s) (2 bytes), 0 if no paramter
  817 |  1 asmdemo.s    533 | Code        | 11 |         |    1 | 00/1190 : 60          |                  rts                           
  818 |  1 asmdemo.s    534 | Data        | 11 |         |    8 | 00/1191 : 00 00 00 00 | WowRect          dw       0,0,10000,10000      ; very large rectangle
      |                     |             |    |         |      |           10 27 10 27 |
  819 |  1 asmdemo.s    535 | Empty       | 11 |         |    0 | 00/1199               |                                                
  820 |  1 asmdemo.s    536 | Comment     | 11 |         |    0 | 00/1199               | *
  821 |  1 asmdemo.s    537 | Comment     | 11 |         |    0 | 00/1199               | * Data for rects., polygons, bitmap, and text
  822 |  1 asmdemo.s    538 | Comment     | 11 |         |    0 | 00/1199               | *
  823 |  1 asmdemo.s    539 | Data        | 11 |         |   36 | 00/1199 : 00 00 00 00 | TestPort         ds       {{{{{{{{{{{0}+4}+2}+2}+8}+10}+4}+2}+1}+1}+2}; space for TestPort (= standard grafport = screen grafport)
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
  824 |  1 asmdemo.s    540 | Comment     | 11 |         |    0 | 00/11BD               | *
  825 |  1 asmdemo.s    541 | Data        | 11 |         |    8 | 00/11BD : 1E 00 1E 00 | testrect1        dw       30,30,95,150         ; a ractangle
      |                     |             |    |         |      |           5F 00 96 00 |
  826 |  1 asmdemo.s    542 | Data        | 11 |         |    8 | 00/11C5 : C8 00 32 00 | testrect2        dw       200,50,520,140       ; a ractangle
      |                     |             |    |         |      |           08 02 8C 00 |
  827 |  1 asmdemo.s    543 | Comment     | 11 |         |    0 | 00/11CD               | *
  828 |  1 asmdemo.s    544 | Data        | 11 |         |    4 | 00/11CD : 00 00 00 00 | Point1           dw       0,0                  ; upper left corner
  829 |  1 asmdemo.s    545 | Data        | 11 |         |    4 | 00/11D1 : 2F 02 00 00 | Point2           dw       559,0                ; bottom right corner
  830 |  1 asmdemo.s    546 | Comment     | 11 |         |    0 | 00/11D5               | *
  831 |  1 asmdemo.s    547 | Data        | 11 |         |    8 | 00/11D5 : 0A 00 0A 00 | R1               dw       10,10,30,30          ; a rect (x,y)
      |                     |             |    |         |      |           1E 00 1E 00 |
  832 |  1 asmdemo.s    548 | Data        | 11 |         |    8 | 00/11DD : 1C 00 1C 00 | R2               dw       28,28,70,70          ; a rect (x,y)
      |                     |             |    |         |      |           46 00 46 00 |
  833 |  1 asmdemo.s    549 | Data        | 11 |         |    8 | 00/11E5 : 28 00 28 00 | R3               dw       40,40,90,90          ; a rect (x,y)
      |                     |             |    |         |      |           5A 00 5A 00 |
  834 |  1 asmdemo.s    550 | Data        | 11 |         |    8 | 00/11ED : 64 00 1E 00 | R4               dw       100,30,180,60        ; a rect (x,y)
      |                     |             |    |         |      |           B4 00 3C 00 |
  835 |  1 asmdemo.s    551 | Comment     | 11 |         |    0 | 00/11F5               | *
  836 |  1 asmdemo.s    552 | Data        | 11 |         |    1 | 00/11F5 : 05          | ModeNotOr        dfb      5                    
  837 |  1 asmdemo.s    553 | Data        | 11 |         |    1 | 00/11F6 : 00          | ModeCopy         dfb      0                    
  838 |  1 asmdemo.s    554 | Comment     | 11 |         |    0 | 00/11F7               | *
  839 |  1 asmdemo.s    555 | Data        | 11 |         |    9 | 00/11F7 : 66 66 66 66 | Color1           dfb      $66,$66,$66,$66,$66,$66,$66,$66,0; green pattern
      |                     |             |    |         |      |           66 66 66 66 |
      |                     |             |    |         |      |           00          |
  840 |  1 asmdemo.s    556 | Data        | 11 |         |    9 | 00/1200 : 11 11 11 11 | Color2           dfb      $11,$11,$11,$11,$11,$11,$11,$11,0; blue pattern
      |                     |             |    |         |      |           11 11 11 11 |
      |                     |             |    |         |      |           00          |
  841 |  1 asmdemo.s    557 | Data        | 11 |         |    9 | 00/1209 : CC CC CC CC | Color3           dfb      $CC,$CC,$CC,$CC,$CC,$CC,$CC,$CC,0; orange pattern
      |                     |             |    |         |      |           CC CC CC CC |
      |                     |             |    |         |      |           00          |
  842 |  1 asmdemo.s    558 | Data        | 11 |         |    9 | 00/1212 : 38 74 EE 47 | weave            dfb      $38,$74,$EE,$47,$83,$C5,$EE,$5C,0; nice pattern ! (yellow weave)
      |                     |             |    |         |      |           83 C5 EE 5C |
      |                     |             |    |         |      |           00          |
  843 |  1 asmdemo.s    559 | Empty       | 11 |         |    0 | 00/121B               |                                                
  844 |  1 asmdemo.s    560 | Data        | 11 |         |    9 | 00/121B : 00 00 00 00 | Black            dfb      0,0,0,0,0,0,0,0,0    ; black pattern
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00          |
  845 |  1 asmdemo.s    561 | Data        | 11 |         |    8 | 00/1224 : FF FF FF FF | White            ds       8,$FF                ; white pattern
      |                     |             |    |         |      |           FF FF FF FF |
  846 |  1 asmdemo.s    562 | Data        | 11 |         |    1 | 00/122C : 00          |                  dfb      0                    
  847 |  1 asmdemo.s    563 | Comment     | 11 |         |    0 | 00/122D               | *
  848 |  1 asmdemo.s    564 | Comment     | 11 |         |    0 | 00/122D               |                                                         ; A shape
  849 |  1 asmdemo.s    565 | Data        | 11 |         |    2 | 00/122D : 08 80       | TestPoly         dfb      8,$80                ; 8 vertices, $80 : there is anather poly in this list
  850 |  1 asmdemo.s    566 | Data        | 11 |         |   32 | 00/122F : 40 00 A8 00 |                  dw       64,168,192,168,224,120,288,120,320,168,448,168,320,40,192,40
      |                     |             |    |         |      |           C0 00 A8 00 |
      |                     |             |    |         |      |           E0 00 78 00 |
      |                     |             |    |         |      |           20 01 78 00 |
      |                     |             |    |         |      |           40 01 A8 00 |
      |                     |             |    |         |      |           C0 01 A8 00 |
      |                     |             |    |         |      |           40 01 28 00 |
      |                     |             |    |         |      |           C0 00 28 00 |
  851 |  1 asmdemo.s    567 | Comment     | 11 |         |    0 | 00/124F               |                 ; dw 3                                  ; replaced by more readable :
  852 |  1 asmdemo.s    568 | Data        | 11 |         |    1 | 00/124F : 03          |                  db       3                    ; second poly of the list, 3 vertices
  853 |  1 asmdemo.s    569 | Comment     | 11 |         |    0 | 00/1250               |                                                         ; makes a hole in first poly.
  854 |  1 asmdemo.s    570 | Data        | 11 |         |    1 | 00/1250 : 00          |                  db       0                    ; $80 : last poly
  855 |  1 asmdemo.s    571 | Data        | 11 |         |   12 | 00/1251 : E0 00 60 00 |                  dw       224,96,288,96,256,56 
      |                     |             |    |         |      |           20 01 60 00 |
      |                     |             |    |         |      |           00 01 38 00 |
  856 |  1 asmdemo.s    572 | Comment     | 11 |         |    0 | 00/125D               | *
  857 |  1 asmdemo.s    573 | Data        | 11 |         |    4 | 00/125D : 32 00 32 00 | TestBits         dw       50,50                ; view location on current port
  858 |  1 asmdemo.s    574 | Data        | 11 |         |    2 | 00/1261 : 6D 12       |                  dw       Handbits             ; bitmap pointer
  859 |  1 asmdemo.s    575 | Data        | 11 |         |    2 | 00/1263 : 03 00       |                  dw       3                    ; width of bitmap
  860 |  1 asmdemo.s    576 | Data        | 11 |         |    8 | 00/1265 : 00 00 00 00 |                  dw       0,0,17,9             ; clip rectangle
      |                     |             |    |         |      |           11 00 09 00 |
  861 |  1 asmdemo.s    577 | Data        | 11 |         |   12 | 00/126D : 00 00 00 20 | Handbits         dfb      $00,$00,$00,$20,$00,$00,$30,$00,$00,$38,$00,$00; bitmap data
      |                     |             |    |         |      |           00 00 30 00 |
      |                     |             |    |         |      |           00 38 00 00 |
  862 |  1 asmdemo.s    578 | Data        | 11 |         |   12 | 00/1279 : 5E 7F 07 7E |                  dfb      $5E,$7F,$07,$7E,$00,$00,$3E,$1F,$00,$7E,$00,$00
      |                     |             |    |         |      |           00 00 3E 1F |
      |                     |             |    |         |      |           00 7E 00 00 |
  863 |  1 asmdemo.s    579 | Data        | 11 |         |    6 | 00/1285 : 3C 0F 00 00 |                  dfb      $3C,$0F,$00,$00,$00,$00
      |                     |             |    |         |      |           00 00       |
  864 |  1 asmdemo.s    580 | Comment     | 11 |         |    0 | 00/128B               | *
  865 |  1 asmdemo.s    581 | Data        | 11 |         |    4 | 00/128B : 04 00 32 00 | Point3           dw       4,50                 
  866 |  1 asmdemo.s    582 | Comment     | 11 |         |    0 | 00/128F               | *
  867 |  1 asmdemo.s    583 | Comment     | 11 |         |    0 | 00/128F               | *
  868 |  1 asmdemo.s    584 | Data        | 11 |         |    2 | 00/128F : 92 12       | TestText         dw       message              
  869 |  1 asmdemo.s    585 | Data        | 11 |         |    1 | 00/1291 : 2F          |                  dfb      {ozunid_7-message}   
  870 |  1 asmdemo.s    586 | Data        | 11 |         |   47 | 00/1292 : 54 68 69 73 | message          asc      'This is a test of the emergency graphics system'
      |                     |             |    |         |      |           20 69 73 20 |
      |                     |             |    |         |      |           61 20 74 65 |
      |                     |             |    |         |      |           73 74 20 6F |
      |                     |             |    |         |      |           66 20 74 68 |
      |                     |             |    |         |      |           65 20 65 6D |
      |                     |             |    |         |      |           65 72 67 65 |
      |                     |             |    |         |      |           6E 63 79 20 |
      |                     |             |    |         |      |           67 72 61 70 |
      |                     |             |    |         |      |           68 69 63 73 |
      |                     |             |    |         |      |           20 73 79 73 |
      |                     |             |    |         |      |           74 65 6D    |
  871 |  1 asmdemo.s    587 | Empty       | 11 |         |    0 | 00/12C1               | ozunid_7                                       
  872 |  1 asmdemo.s    587 | Equivalence | 11 |         |    0 | 00/12C1               | msglength        equ      ozunid_7-message     
  873 |  1 asmdemo.s    588 | Comment     | 11 |         |    0 | 00/12C1               | *
  874 |  1 asmdemo.s    589 | Comment     | 11 |         |    0 | 00/12C1               | *
  875 |  1 asmdemo.s    590 | Comment     | 11 |         |    0 | 00/12C1               | * MyPort          ds 50,0    
  876 |  1 asmdemo.s    591 | Comment     | 11 |         |    0 | 00/12C1               | *<sym>                             
  877 |  1 asmdemo.s    592 | Data        | 11 |         |   36 | 00/12C1 : 00 00 00 00 | MyPort           ds       {{{{{{{{{{{0}+4}+2}+2}+8}+10}+4}+2}+1}+1}+2}; space for a grafport stucture
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
  878 |  1 asmdemo.s    593 | Comment     | 11 |         |    0 | 00/12E5               |                                                         ; this is better than original line above.
  879 |  1 asmdemo.s    594 | Data        | 11 |         |    4 | 00/12E5 : 00 00 00 00 | MyBits           dw       0,0                  ; viewloc
  880 |  1 asmdemo.s    595 | Data        | 11 |         |    2 | 00/12E9 : 00 80       |                  dw       {$8000}              
  881 |  1 asmdemo.s    596 | Data        | 11 |         |    2 | 00/12EB : 28 00       |                  dw       40                   
  882 |  1 asmdemo.s    597 | Data        | 11 |         |    8 | 00/12ED : 00 00 00 00 |                  dw       0,0,200,100          
      |                     |             |    |         |      |           C8 00 64 00 |
  883 |  1 asmdemo.s    598 | Empty       | 11 |         |    0 | 00/12F5               |                                                
  884 |  1 asmdemo.s    599 | Data        | 11 |         |    4 | 00/12F5 : 32 00 1E 00 | MyDestBits       dw       50,30                
  885 |  1 asmdemo.s    600 | Data        | 11 |         |    2 | 00/12F9 : 00 80       |                  dw       {$8000}              
  886 |  1 asmdemo.s    601 | Data        | 11 |         |    2 | 00/12FB : 28 00       |                  dw       40                   
  887 |  1 asmdemo.s    602 | Data        | 11 |         |    8 | 00/12FD : 00 00 00 00 |                  dw       0,0,200,100          
      |                     |             |    |         |      |           C8 00 64 00 |
  888 |  1 asmdemo.s    603 | Comment     | 11 |         |    0 | 00/1305               | *
  889 |  1 asmdemo.s    604 | Data        | 11 |         |    2 | 00/1305 : 08 13       | ContText         dw       message1             
  890 |  1 asmdemo.s    605 | Data        | 11 |         |    1 | 00/1307 : 22          |                  dfb      {ozunid_8-message1}  
  891 |  1 asmdemo.s    606 | Data        | 11 |         |   34 | 00/1308 : 20 50 6C 65 | message1         asc      ' Please press RETURN to continue. '
      |                     |             |    |         |      |           61 73 65 20 |
      |                     |             |    |         |      |           70 72 65 73 |
      |                     |             |    |         |      |           73 20 52 45 |
      |                     |             |    |         |      |           54 55 52 4E |
      |                     |             |    |         |      |           20 74 6F 20 |
      |                     |             |    |         |      |           63 6F 6E 74 |
      |                     |             |    |         |      |           69 6E 75 65 |
      |                     |             |    |         |      |           2E 20       |
  892 |  1 asmdemo.s    607 | Empty       | 11 |         |    0 | 00/132A               | ozunid_8                                       
  893 |  1 asmdemo.s    607 | Equivalence | 11 |         |    0 | 00/132A               | msglgth          equ      ozunid_8-message1    
  894 |  1 asmdemo.s    608 | Data        | 11 |         |    4 | 00/132A : 1E 00 BE 00 | Point4           dw       30,190               
  895 |  1 asmdemo.s    609 | Data        | 11 |         |    1 | 00/132E : 08          | Switch           dfb      8                    
  896 |  1 asmdemo.s    610 | Comment     | 11 |         |    0 | 00/132F               | *
  897 |  1 asmdemo.s    611 | Data        | 11 |         |    2 | 00/132F : 32 13       | QuitText         dw       message2             
  898 |  1 asmdemo.s    612 | Data        | 11 |         |    1 | 00/1331 : 3C          |                  dfb      {ozunid_9-message2}  
  899 |  1 asmdemo.s    613 | Data        | 11 |         |   60 | 00/1332 : 20 20 20 20 | message2         asc      '      Please press RETURN to Quit..........                 '
      |                     |             |    |         |      |           20 20 50 6C |
      |                     |             |    |         |      |           65 61 73 65 |
      |                     |             |    |         |      |           20 70 72 65 |
      |                     |             |    |         |      |           73 73 20 52 |
      |                     |             |    |         |      |           45 54 55 52 |
      |                     |             |    |         |      |           4E 20 74 6F |
      |                     |             |    |         |      |           20 51 75 69 |
      |                     |             |    |         |      |           74 2E 2E 2E |
      |                     |             |    |         |      |           2E 2E 2E 2E |
      |                     |             |    |         |      |           2E 2E 2E 20 |
      |                     |             |    |         |      |           20 20 20 20 |
      |                     |             |    |         |      |           20 20 20 20 |
      |                     |             |    |         |      |           20 20 20 20 |
      |                     |             |    |         |      |           20 20 20 20 |
  900 |  1 asmdemo.s    614 | Empty       | 11 |         |    0 | 00/136E               | ozunid_9                                       
  901 |  1 asmdemo.s    614 | Equivalence | 11 |         |    0 | 00/136E               | msglgth1         equ      ozunid_9-message2    
  902 |  1 asmdemo.s    615 | Comment     | 11 |         |    0 | 00/136E               | *
  903 |  1 asmdemo.s    616 | Data        | 11 |         |    2 | 00/136E : 71 13       | BufText          dw       message3             
  904 |  1 asmdemo.s    617 | Data        | 11 |         |    1 | 00/1370 : 29          |                  dfb      {ozunid_10-message3} 
  905 |  1 asmdemo.s    618 | Data        | 11 |         |   41 | 00/1371 : 20 20 20 20 | message3         asc      '      Now drawing into buffer............'
      |                     |             |    |         |      |           20 20 4E 6F |
      |                     |             |    |         |      |           77 20 64 72 |
      |                     |             |    |         |      |           61 77 69 6E |
      |                     |             |    |         |      |           67 20 69 6E |
      |                     |             |    |         |      |           74 6F 20 62 |
      |                     |             |    |         |      |           75 66 66 65 |
      |                     |             |    |         |      |           72 2E 2E 2E |
      |                     |             |    |         |      |           2E 2E 2E 2E |
      |                     |             |    |         |      |           2E 2E 2E 2E |
      |                     |             |    |         |      |           2E          |
  906 |  1 asmdemo.s    619 | Empty       | 11 |         |    0 | 00/139A               | ozunid_10                                      
  907 |  1 asmdemo.s    619 | Equivalence | 11 |         |    0 | 00/139A               | msglgth2         equ      ozunid_10-message3   
  908 |  1 asmdemo.s    620 | Empty       | 11 |         |    0 | 00/139A               |                                                
  909 |  1 asmdemo.s    621 | Empty       | 11 |         |    0 | 00/139A               |                                                
  910 |  1 asmdemo.s    622 | Comment     | 11 |         |    0 | 00/139A               | * ------------------ utils ------------------
  911 |  1 asmdemo.s    623 | Comment     | 11 |         |    0 | 00/139A               | *<sym>
  912 |  1 asmdemo.s    624 | Empty       | 11 |         |    0 | 00/139A               | DoTextScreen                                   
  913 |  1 asmdemo.s    625 | Empty       | 11 |         |    0 | 00/139A               |                                                
  914 |  1 asmdemo.s    626 | Code        | 11 |         |    3 | 00/139A : 8D 00 C0    |                  sta      $c000                ;80store off
  915 |  1 asmdemo.s    627 | Code        | 11 |         |    3 | 00/139D : 8D 02 C0    |                  sta      $c002                ;RAMRD main
  916 |  1 asmdemo.s    628 | Code        | 11 |         |    3 | 00/13A0 : 8D 04 C0    |                  sta      $c004                ;RAMWRT main
  917 |  1 asmdemo.s    629 | Code        | 11 |         |    3 | 00/13A3 : 8D 0C C0    |                  sta      $c00c                ;80col off
  918 |  1 asmdemo.s    630 | Code        | 11 |         |    3 | 00/13A6 : 8D 0E C0    |                  sta      $c00e                ;Altcharset off
  919 |  1 asmdemo.s    631 | Code        | 11 |         |    3 | 00/13A9 : 8D 81 C0    |                  sta      $c081                ;write RAM, read ROM (2nd 4k bank)
  920 |  1 asmdemo.s    632 | Code        | 11 |         |    3 | 00/13AC : 20 2F FB    |                  jsr      {$FB2F}              
  921 |  1 asmdemo.s    633 | Code        | 11 |         |    3 | 00/13AF : 20 58 FC    |                  jsr      {$FC58}              
  922 |  1 asmdemo.s    634 | Code        | 11 |         |    3 | 00/13B2 : 20 84 FE    |                  jsr      {$FE84}              
  923 |  1 asmdemo.s    635 | Code        | 11 |         |    3 | 00/13B5 : 20 93 FE    |                  jsr      {$fe93}              
  924 |  1 asmdemo.s    636 | Code        | 11 |         |    3 | 00/13B8 : 20 89 FE    |                  jsr      {$fe89}              
  925 |  1 asmdemo.s    637 | Code        | 11 |         |    1 | 00/13BB : 60          |                  rts                           
  926 |  1 asmdemo.s    638 | Empty       | 11 |         |    0 | 00/13BC               |                                                
  927 |  1 asmdemo.s    639 | Comment     | 11 |         |    0 | 00/13BC               | *<sym>
  928 |  1 asmdemo.s    640 | Empty       | 11 |         |    0 | 00/13BC               | clearbuffer                                    
  929 |  1 asmdemo.s    641 | Comment     | 11 |         |    0 | 00/13BC               | * clear memory 
  930 |  1 asmdemo.s    642 | Code        | 11 |         |    2 | 00/13BC : A9 14       |                  lda      #<outbuff            
  931 |  1 asmdemo.s    643 | Code        | 11 |         |    2 | 00/13BE : 85 06       |                  sta      {$06}                
  932 |  1 asmdemo.s    644 | Code        | 11 |         |    2 | 00/13C0 : A9 0F       |                  lda      #>outbuff            
  933 |  1 asmdemo.s    645 | Code        | 11 |         |    2 | 00/13C2 : 85 07       |                  sta      {$06}+1              
  934 |  1 asmdemo.s    646 | Empty       | 11 |         |    0 | 00/13C4               |                                                
  935 |  1 asmdemo.s    647 | Code        | 11 |         |    2 | 00/13C4 : A9 00       |                  lda      #0                   
  936 |  1 asmdemo.s    648 | Code        | 11 |         |    2 | 00/13C6 : A0 00       |                  ldy      #0                   
  937 |  1 asmdemo.s    649 | Comment     | 11 |         |    0 | 00/13C8               | *<sym>
  938 |  1 asmdemo.s    650 | Code        | 11 |         |    2 | 00/13C8 : 91 06       | pokeZ            sta      ({$06}),y            
  939 |  1 asmdemo.s    651 | Code        | 11 |         |    1 | 00/13CA : C8          |                  iny                           
  940 |  1 asmdemo.s    652 | Code        | 11 |         |    2 | 00/13CB : C0 50       |                  cpy      #80                  
  941 |  1 asmdemo.s    653 | Code        | 11 |         |    2 | 00/13CD : D0 F9       |                  bne      pokeZ                
  942 |  1 asmdemo.s    654 | Code        | 11 |         |    1 | 00/13CF : 60          |                  rts                           
  943 |  1 asmdemo.s    655 | Empty       | 11 |         |    0 | 00/13D0               |                                                
  944 |  1 asmdemo.s    656 | Empty       | 11 |         |    0 | 00/13D0               |                                                
  945 |  1 asmdemo.s    657 | Comment     | 11 |         |    0 | 00/13D0               | *<sym>
  946 |  1 asmdemo.s    658 | Empty       | 11 |         |    0 | 00/13D0               | ProDOSQuit                                     
  947 |  1 asmdemo.s    659 | Code        | 11 |         |    3 | 00/13D0 : 20 00 BF    |                  jsr      $BF00                ; ProDOS Quit
  948 |  1 asmdemo.s    660 | Data        | 11 |         |    1 | 00/13D3 : 65          |                  dfb      $65                  
  949 |  1 asmdemo.s    661 | Data        | 11 |         |    2 | 00/13D4 : D7 13       |                  dw       QuitParams           
  950 |  1 asmdemo.s    662 | Code        | 11 |         |    1 | 00/13D6 : 60          |                  rts                           
  951 |  1 asmdemo.s    663 | Comment     | 11 |         |    0 | 00/13D7               | *<sym>
  952 |  1 asmdemo.s    664 | Data        | 11 |         |    1 | 00/13D7 : 04          | QuitParams       dfb      4                    
  953 |  1 asmdemo.s    665 | Data        | 11 |         |    8 | 00/13D8 : 00 00 00 00 |                  dw       0,0,0,0              ; standard parameters for Quit call
      |                     |             |    |         |      |           00 00 00 00 |
  954 |  1 asmdemo.s    666 | Empty       | 11 |         |    0 | 00/13E0               |                                                
  955 |  1 asmdemo.s    667 | Comment     | 11 |         |    0 | 00/13E0               | *<sym>
  956 |  1 asmdemo.s    668 | Empty       | 11 |         |    0 | 00/13E0               | computeBytes                                   
  957 |  1 asmdemo.s    669 | Comment     | 11 |         |    0 | 00/13E0               | * given the # of bits in A,X (lo,hp) compute the # of bytes to hold these bits.             
  958 |  1 asmdemo.s    670 | Code        | 11 |         |    3 | 00/13E0 : 8D 08 14    |                  sta      mybyte               ; number of bits (16 bits integer)
  959 |  1 asmdemo.s    671 | Code        | 11 |         |    3 | 00/13E3 : 8E 09 14    |                  stx      mybyte+1             
  960 |  1 asmdemo.s    672 | Code        | 11 |         |    2 | 00/13E6 : A2 01       |                  ldx      #1                   ; x = number of needed bytes
  961 |  1 asmdemo.s    673 | Comment     | 11 |         |    0 | 00/13E8               | *<sym>
  962 |  1 asmdemo.s    674 | Empty       | 11 |         |    0 | 00/13E8               | loopbyte                                       
  963 |  1 asmdemo.s    675 | Code        | 11 |         |    3 | 00/13E8 : AD 08 14    |                  lda      mybyte               
  964 |  1 asmdemo.s    676 | Code        | 11 |         |    1 | 00/13EB : 38          |                  sec                           
  965 |  1 asmdemo.s    677 | Code        | 11 |         |    2 | 00/13EC : E9 07       |                  sbc      #7                   
  966 |  1 asmdemo.s    678 | Code        | 11 |         |    3 | 00/13EE : 8D 08 14    |                  sta      mybyte               
  967 |  1 asmdemo.s    679 | Code        | 11 |         |    3 | 00/13F1 : AD 09 14    |                  lda      mybyte+1             
  968 |  1 asmdemo.s    680 | Code        | 11 |         |    2 | 00/13F4 : E9 00       |                  sbc      #0                   
  969 |  1 asmdemo.s    681 | Code        | 11 |         |    3 | 00/13F6 : 8D 09 14    |                  sta      mybyte+1             
  970 |  1 asmdemo.s    682 | Empty       | 11 |         |    0 | 00/13F9               |                                                
  971 |  1 asmdemo.s    683 | Code        | 11 |         |    3 | 00/13F9 : 0D 08 14    |                  ora      mybyte               
  972 |  1 asmdemo.s    684 | Code        | 11 |         |    2 | 00/13FC : F0 09       |                  beq      ozunid_5             ; = 0 : exit, nb_byte is correct
  973 |  1 asmdemo.s    685 | Code        | 11 |         |    3 | 00/13FE : AD 09 14    |                  lda      mybyte+1             
  974 |  1 asmdemo.s    686 | Code        | 11 |         |    2 | 00/1401 : 30 04       |                  bmi      ozunid_5             ; < 0 : exit, nb_byte is correct
  975 |  1 asmdemo.s    687 | Comment     | 11 |         |    0 | 00/1403               |                                         ; > 0 : loop
  976 |  1 asmdemo.s    688 | Code        | 11 |         |    1 | 00/1403 : E8          |                  inx                           
  977 |  1 asmdemo.s    689 | Code        | 11 |         |    3 | 00/1404 : 4C E8 13    |                  jmp      loopbyte             
  978 |  1 asmdemo.s    690 | Empty       | 11 |         |    0 | 00/1407               |                                                
  979 |  1 asmdemo.s    691 | Code        | 11 |         |    1 | 00/1407 : 60          | ozunid_5         rts                           
  980 |  1 asmdemo.s    692 | Comment     | 11 |         |    0 | 00/1408               | *<sym>
  981 |  1 asmdemo.s    693 | Empty       | 11 |         |    0 | 00/1408               | mybyte                                         
  982 |  1 asmdemo.s    694 | Data        | 11 |         |    2 | 00/1408 : 00 00       |                  ds       2                    
  983 |  1 asmdemo.s    695 | Empty       | 11 |         |    0 | 00/140A               |                                                
  984 |  1 asmdemo.s    696 | Empty       | 11 |         |    0 | 00/140A               |                                                
------+---------------------+-------------+----+---------+------+-----------------------+-------------------------------------------------------------------
