------+---------------------+-------------+----+---------+------+-----------------------+-------------------------------------------------------------------
 Line | # File         Line | Line Type   | MX |  Reloc  | Size | Address   Object Code |  Source Code                                                      
------+---------------------+-------------+----+---------+------+-----------------------+-------------------------------------------------------------------
    1 |  1 asmdemo.s      1 | Comment     | 11 |         |    0 | 00/8000               | * * * * * * * * * * * * * * * * * * * * * * * * * * * 
    2 |  1 asmdemo.s      2 | Comment     | 11 |         |    0 | 00/8000               | *                                                   *
    3 |  1 asmdemo.s      3 | Comment     | 11 |         |    0 | 00/8000               | *   Diplay a BMP image using Graphics Primitives    *      
    4 |  1 asmdemo.s      4 | Comment     | 11 |         |    0 | 00/8000               | *                                                   *  
    5 |  1 asmdemo.s      5 | Comment     | 11 |         |    0 | 00/8000               | * * * * * * * * * * * * * * * * * * * * * * * * * * *  
    6 |  1 asmdemo.s      6 | Comment     | 11 |         |    0 | 00/8000               | *
    7 |  1 asmdemo.s      7 | Comment     | 11 |         |    0 | 00/8000               | * BMP file must be loaded before this program is called.
    8 |  1 asmdemo.s      8 | Comment     | 11 |         |    0 | 00/8000               | * Typically by STARTUP Basic program (ProDOS)
    9 |  1 asmdemo.s      9 | Comment     | 11 |         |    0 | 00/8000               | * BMP image must have 1 bit per pixel
   10 |  1 asmdemo.s     10 | Comment     | 11 |         |    0 | 00/8000               | * Dimension must not exceed 280 x 192
   11 |  1 asmdemo.s     11 | Comment     | 11 |         |    0 | 00/8000               | * Every bit (= pixel) in BMP file is doubled horizontally 
   12 |  1 asmdemo.s     12 | Comment     | 11 |         |    0 | 00/8000               | * to respect image aspect ratio (more or less)
   13 |  1 asmdemo.s     13 | Comment     | 11 |         |    0 | 00/8000               | * The image is drawn line by line, using PaintBits function of Graphics Primitives package
   14 |  1 asmdemo.s     14 | Comment     | 11 |         |    0 | 00/8000               | *
   15 |  1 asmdemo.s     15 | Comment     | 11 |         |    0 | 00/8000               | *
   16 |  1 asmdemo.s     16 | Comment     | 11 |         |    0 | 00/8000               | *<sym>
   17 |  1 asmdemo.s     17 | Directive   | 11 |         |    0 | 00/8000               | GP_call          MAC                           ; call to graphic primitives (macro)
   18 |  1 asmdemo.s     18 | Directive   | 11 |         |    0 | 00/8000               |                  jsr      {$4000}              ; graphic primitives only entry point
   19 |  1 asmdemo.s     19 | Directive   | 11 |         |    0 | 00/8000               |                  dfb      ]1                   ; command ID (1 byte)
   20 |  1 asmdemo.s     20 | Directive   | 11 |         |    0 | 00/8000               |                  da       ]2                   ; address of parameter(s) (2 bytes), 0 if no paramter
   21 |  1 asmdemo.s     21 | Directive   | 11 |         |    0 | 00/8000               |                  EOM                           
   22 |  1 asmdemo.s     22 | Empty       | 11 |         |    0 | 00/8000               |                                                
   23 |  1 asmdemo.s     23 | Directive   | 11 |         |    0 | 00/8000               |                  put      equates              
   24 |  2 equates.s      1 | Comment     | 11 |         |    0 | 00/8000               | ;
   25 |  2 equates.s      2 | Comment     | 11 |         |    0 | 00/8000               | ; equate file for interfacing to toolkit/graphics
   26 |  2 equates.s      3 | Comment     | 11 |         |    0 | 00/8000               | ;
   27 |  2 equates.s      4 | Equivalence | 11 |         |    0 | 00/8000               | ToolMLI          equ      $4000                
   28 |  2 equates.s      5 | Equivalence | 11 |         |    0 | 00/8000               | GrafMLI          equ      $4000                
   29 |  2 equates.s      6 | Comment     | 11 |         |    0 | 00/8000               | ;
   30 |  2 equates.s      7 | Comment     | 11 |         |    0 | 00/8000               | ; constants
   31 |  2 equates.s      8 | Comment     | 11 |         |    0 | 00/8000               | ;
   32 |  2 equates.s      9 | Equivalence | 11 |         |    0 | 00/8000               | SrcCopy          equ      0                    
   33 |  2 equates.s     10 | Equivalence | 11 |         |    0 | 00/8000               | SrcOr            equ      1                    
   34 |  2 equates.s     11 | Equivalence | 11 |         |    0 | 00/8000               | SrcXor           equ      2                    
   35 |  2 equates.s     12 | Equivalence | 11 |         |    0 | 00/8000               | SrcBic           equ      3                    
   36 |  2 equates.s     13 | Equivalence | 11 |         |    0 | 00/8000               | SrcNotCopy       equ      4                    
   37 |  2 equates.s     14 | Equivalence | 11 |         |    0 | 00/8000               | SrcNotOr         equ      5                    
   38 |  2 equates.s     15 | Equivalence | 11 |         |    0 | 00/8000               | SrcNotXor        equ      6                    
   39 |  2 equates.s     16 | Equivalence | 11 |         |    0 | 00/8000               | SrcNotBic        equ      7                    
   40 |  2 equates.s     17 | Comment     | 11 |         |    0 | 00/8000               | ;
   41 |  2 equates.s     18 | Comment     | 11 |         |    0 | 00/8000               | ; grafport structure
   42 |  2 equates.s     19 | Comment     | 11 |         |    0 | 00/8000               | ;
   43 |  2 equates.s     20 | Equivalence | 11 |         |    0 | 00/8000               | viewloc          equ      0                    
   44 |  2 equates.s     21 | Equivalence | 11 |         |    0 | 00/8000               | portbits         equ      {0}+4                
   45 |  2 equates.s     22 | Equivalence | 11 |         |    0 | 00/8000               | portwidth        equ      {{0}+4}+2            ; 1 byte for width, the other is reserved.
   46 |  2 equates.s     23 | Equivalence | 11 |         |    0 | 00/8000               | portrect         equ      {{{0}+4}+2}+2        
   47 |  2 equates.s     24 | Equivalence | 11 |         |    0 | 00/8000               | penpat           equ      {{{{0}+4}+2}+2}+8    
   48 |  2 equates.s     25 | Equivalence | 11 |         |    0 | 00/8000               | penloc           equ      {{{{{0}+4}+2}+2}+8}+10
   49 |  2 equates.s     26 | Equivalence | 11 |         |    0 | 00/8000               | pensize          equ      {{{{{{0}+4}+2}+2}+8}+10}+4
   50 |  2 equates.s     27 | Equivalence | 11 |         |    0 | 00/8000               | penmode          equ      {{{{{{{0}+4}+2}+2}+8}+10}+4}+2
   51 |  2 equates.s     28 | Equivalence | 11 |         |    0 | 00/8000               | txback           equ      {{{{{{{{0}+4}+2}+2}+8}+10}+4}+2}+1
   52 |  2 equates.s     29 | Equivalence | 11 |         |    0 | 00/8000               | txfont           equ      {{{{{{{{{0}+4}+2}+2}+8}+10}+4}+2}+1}+1
   53 |  2 equates.s     30 | Comment     | 11 |         |    0 | 00/8000               | ;
   54 |  2 equates.s     31 | Equivalence | 11 |         |    0 | 00/8000               | portlength       equ      {{{{{{{{{{0}+4}+2}+2}+8}+10}+4}+2}+1}+1}+2
   55 |  2 equates.s     32 | Comment     | 11 |         |    0 | 00/8000               | ;
   56 |  2 equates.s     33 | Comment     | 11 |         |    0 | 00/8000               | ;
   57 |  2 equates.s     34 | Comment     | 11 |         |    0 | 00/8000               | ; command numbers
   58 |  2 equates.s     35 | Comment     | 11 |         |    0 | 00/8000               | ;
   59 |  2 equates.s     36 | Equivalence | 11 |         |    0 | 00/8000               | InitGraf         equ      1                    
   60 |  2 equates.s     37 | Equivalence | 11 |         |    0 | 00/8000               | SetSwitches      equ      {1}+1                
   61 |  2 equates.s     38 | Comment     | 11 |         |    0 | 00/8000               | ;
   62 |  2 equates.s     39 | Equivalence | 11 |         |    0 | 00/8000               | InitPort         equ      {{1}+1}+1            
   63 |  2 equates.s     40 | Equivalence | 11 |         |    0 | 00/8000               | SetPort          equ      {{{1}+1}+1}+1        
   64 |  2 equates.s     41 | Equivalence | 11 |         |    0 | 00/8000               | GetPort          equ      {{{{1}+1}+1}+1}+1    
   65 |  2 equates.s     42 | Equivalence | 11 |         |    0 | 00/8000               | SetPortBits      equ      {{{{{1}+1}+1}+1}+1}+1
   66 |  2 equates.s     43 | Equivalence | 11 |         |    0 | 00/8000               | SetPenMode       equ      {{{{{{1}+1}+1}+1}+1}+1}+1
   67 |  2 equates.s     44 | Equivalence | 11 |         |    0 | 00/8000               | SetPattern       equ      {{{{{{{1}+1}+1}+1}+1}+1}+1}+1
   68 |  2 equates.s     45 | Equivalence | 11 |         |    0 | 00/8000               | SetColorFlags    equ      {{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1
   69 |  2 equates.s     46 | Equivalence | 11 |         |    0 | 00/8000               | SetPenSize       equ      {{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   70 |  2 equates.s     47 | Equivalence | 11 |         |    0 | 00/8000               | SetFont          equ      {{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   71 |  2 equates.s     48 | Equivalence | 11 |         |    0 | 00/8000               | SetTextBG        equ      {{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   72 |  2 equates.s     49 | Comment     | 11 |         |    0 | 00/8000               | ;
   73 |  2 equates.s     50 | Equivalence | 11 |         |    0 | 00/8000               | Move             equ      {{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   74 |  2 equates.s     51 | Equivalence | 11 |         |    0 | 00/8000               | MoveTo           equ      {{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   75 |  2 equates.s     52 | Equivalence | 11 |         |    0 | 00/8000               | Line             equ      {{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   76 |  2 equates.s     53 | Equivalence | 11 |         |    0 | 00/8000               | LineTo           equ      {{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   77 |  2 equates.s     54 | Equivalence | 11 |         |    0 | 00/8000               | PaintRect        equ      {{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   78 |  2 equates.s     55 | Equivalence | 11 |         |    0 | 00/8000               | FrameRect        equ      {{{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   79 |  2 equates.s     56 | Equivalence | 11 |         |    0 | 00/8000               | InRect           equ      {{{{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   80 |  2 equates.s     57 | Equivalence | 11 |         |    0 | 00/8000               | PaintBits        equ      {{{{{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   81 |  2 equates.s     58 | Equivalence | 11 |         |    0 | 00/8000               | PaintPoly        equ      {{{{{{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   82 |  2 equates.s     59 | Equivalence | 11 |         |    0 | 00/8000               | FramePoly        equ      {{{{{{{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   83 |  2 equates.s     60 | Equivalence | 11 |         |    0 | 00/8000               | InPoly           equ      {{{{{{{{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   84 |  2 equates.s     61 | Comment     | 11 |         |    0 | 00/8000               | ;
   85 |  2 equates.s     62 | Equivalence | 11 |         |    0 | 00/8000               | TextWidth        equ      {{{{{{{{{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   86 |  2 equates.s     63 | Equivalence | 11 |         |    0 | 00/8000               | DrawText         equ      {{{{{{{{{{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   87 |  2 equates.s     64 | Comment     | 11 |         |    0 | 00/8000               | ;
   88 |  2 equates.s     65 | Equivalence | 11 |         |    0 | 00/8000               | SetZP1           equ      {{{{{{{{{{{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   89 |  2 equates.s     66 | Equivalence | 11 |         |    0 | 00/8000               | SetZP2           equ      {{{{{{{{{{{{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   90 |  2 equates.s     67 | Equivalence | 11 |         |    0 | 00/8000               | GetVersion       equ      {{{{{{{{{{{{{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   91 |  2 equates.s     68 | Empty       | 11 |         |    0 | 00/8000               |                                                
   92 |  2 equates.s     69 | Comment     | 11 |         |    0 | 00/8000               | ; DATA STRUCTURES
   93 |  2 equates.s     70 | Comment     | 11 |         |    0 | 00/8000               | ;
   94 |  2 equates.s     71 | Comment     | 11 |         |    0 | 00/8000               | ; The following data structures are defined as types (Pascal format):
   95 |  2 equates.s     72 | Comment     | 11 |         |    0 | 00/8000               |     ; byte = 0..255;
   96 |  2 equates.s     73 | Empty       | 11 |         |    0 | 00/8000               |                                                
   97 |  2 equates.s     74 | Comment     | 11 |         |    0 | 00/8000               |     ; bits = packed array (0..7) of boolean;
   98 |  2 equates.s     75 | Empty       | 11 |         |    0 | 00/8000               |                                                
   99 |  2 equates.s     76 | Comment     | 11 |         |    0 | 00/8000               |     ; pmode = (penCopy, penOr, penXor, penBic, notpenCopy, notpenOr, notpenXor, notpenBic);
  100 |  2 equates.s     77 | Empty       | 11 |         |    0 | 00/8000               |                                                
  101 |  2 equates.s     78 | Comment     | 11 |         |    0 | 00/8000               |     ; point = record
  102 |  2 equates.s     79 | Comment     | 11 |         |    0 | 00/8000               |         ; x: integer;
  103 |  2 equates.s     80 | Comment     | 11 |         |    0 | 00/8000               |         ; y: integer;
  104 |  2 equates.s     81 | Comment     | 11 |         |    0 | 00/8000               |     ; end;
  105 |  2 equates.s     82 | Empty       | 11 |         |    0 | 00/8000               |                                                
  106 |  2 equates.s     83 | Comment     | 11 |         |    0 | 00/8000               |     ; rect = record
  107 |  2 equates.s     84 | Comment     | 11 |         |    0 | 00/8000               |         ; case integer of
  108 |  2 equates.s     85 | Comment     | 11 |         |    0 | 00/8000               |         ; 0: (left: integer; top: integer; right: integer; bottom: integer);
  109 |  2 equates.s     86 | Comment     | 11 |         |    0 | 00/8000               |         ; 1: (topleft: point; botright: point);
  110 |  2 equates.s     87 | Empty       | 11 |         |    0 | 00/8000               |                                                
  111 |  2 equates.s     88 | Comment     | 11 |         |    0 | 00/8000               |     ; maplnfo = packed record
  112 |  2 equates.s     89 | Comment     | 11 |         |    0 | 00/8000               |         ; viewloc: point;
  113 |  2 equates.s     90 | Comment     | 11 |         |    0 | 00/8000               |         ; mspbits: pointer;
  114 |  2 equates.s     91 | Comment     | 11 |         |    0 | 00/8000               |         ; mspwidth: byte;
  115 |  2 equates.s     92 | Comment     | 11 |         |    0 | 00/8000               |         ; reserved: byte;
  116 |  2 equates.s     93 | Comment     | 11 |         |    0 | 00/8000               |         ; maprect: rect;
  117 |  2 equates.s     94 | Comment     | 11 |         |    0 | 00/8000               |     ; end;
  118 |  2 equates.s     95 | Empty       | 11 |         |    0 | 00/8000               |                                                
  119 |  2 equates.s     96 | Comment     | 11 |         |    0 | 00/8000               |     ; pattern = packed array [1..9] of byte;                ; 1..8 ???
  120 |  2 equates.s     97 | Empty       | 11 |         |    0 | 00/8000               |                                                
  121 |  2 equates.s     98 | Comment     | 11 |         |    0 | 00/8000               |     ; maskinfo = packed record
  122 |  2 equates.s     99 | Comment     | 11 |         |    0 | 00/8000               |         ; ANDmask: byte;
  123 |  2 equates.s    100 | Comment     | 11 |         |    0 | 00/8000               |         ; ORmask: byte;
  124 |  2 equates.s    101 | Comment     | 11 |         |    0 | 00/8000               |     ; end;
  125 |  2 equates.s    102 | Empty       | 11 |         |    0 | 00/8000               |                                                
  126 |  2 equates.s    103 | Comment     | 11 |         |    0 | 00/8000               |     ; GrafPort = packed record
  127 |  2 equates.s    104 | Comment     | 11 |         |    0 | 00/8000               |         ; portmap: maplnfo;
  128 |  2 equates.s    105 | Comment     | 11 |         |    0 | 00/8000               |         ; penpattern: pattern;
  129 |  2 equates.s    106 | Comment     | 11 |         |    0 | 00/8000               |         ; colormasks: maskinfo;
  130 |  2 equates.s    107 | Comment     | 11 |         |    0 | 00/8000               |         ; penloc: point;
  131 |  2 equates.s    108 | Comment     | 11 |         |    0 | 00/8000               |         ; penwidth: byte;
  132 |  2 equates.s    109 | Comment     | 11 |         |    0 | 00/8000               |         ; penheight: byte;
  133 |  2 equates.s    110 | Comment     | 11 |         |    0 | 00/8000               |         ; penmode: pmode;
  134 |  2 equates.s    111 | Comment     | 11 |         |    0 | 00/8000               |         ; reserved: 0..31;
  135 |  2 equates.s    112 | Comment     | 11 |         |    0 | 00/8000               |         ; textback: byte;
  136 |  2 equates.s    113 | Comment     | 11 |         |    0 | 00/8000               |         ; textfont: integer;
  137 |  2 equates.s    114 | Comment     | 11 |         |    0 | 00/8000               |     ; end;
  138 |  2 equates.s    115 | Empty       | 11 |         |    0 | 00/8000               |                                                
  139 |  1 asmdemo.s     24 | Directive   | 11 |         |    0 | 00/8000               |                  put      equ                  
  140 |  3     equ.s      1 | Comment     | 11 |         |    0 | 00/8000               | ************ ROM routines ************ 
  141 |  3     equ.s      2 | Equivalence | 11 |         |    0 | 00/8000               | home             equ      $FC58                ; clear text screen, reset margins
  142 |  3     equ.s      3 | Equivalence | 11 |         |    0 | 00/8000               | text             equ      $FB2F                ; text mode
  143 |  3     equ.s      4 | Equivalence | 11 |         |    0 | 00/8000               | Bell             equ      $FBDD                ; play a sound
  144 |  3     equ.s      5 | Equivalence | 11 |         |    0 | 00/8000               | cout             equ      $FDED                ; print char in A
  145 |  3     equ.s      6 | Equivalence | 11 |         |    0 | 00/8000               | vtab             equ      $FC22                ; vert. tab, value must be in CV ($25)
  146 |  3     equ.s      7 | Equivalence | 11 |         |    0 | 00/8000               | getln            equ      $FD6A                ; read line of input (=> X = length, buffer = $200)
  147 |  3     equ.s      8 | Equivalence | 11 |         |    0 | 00/8000               | getlnz           equ      $FD67                ; = return + getln
  148 |  3     equ.s      9 | Equivalence | 11 |         |    0 | 00/8000               | getln1           equ      $FD6F                ; = getln without prompt
  149 |  3     equ.s     10 | Equivalence | 11 |         |    0 | 00/8000               | bascalc          equ      $FBC1                ; calc. address of line in A, put address in $28/$29
  150 |  3     equ.s     11 | Equivalence | 11 |         |    0 | 00/8000               | crout            equ      $FD8E                ; print carriage return
  151 |  3     equ.s     12 | Equivalence | 11 |         |    0 | 00/8000               | clreop           equ      $FC42                ; clear from cursor to end of page
  152 |  3     equ.s     13 | Equivalence | 11 |         |    0 | 00/8000               | clreol           equ      $FC9C                ; clear from cursor to end of line
  153 |  3     equ.s     14 | Equivalence | 11 |         |    0 | 00/8000               | prntx            equ      $F944                ; prints X in hex (2 digits)
  154 |  3     equ.s     15 | Equivalence | 11 |         |    0 | 00/8000               | prbyte           equ      $FDDA                ; prints A in hex (2 digits)
  155 |  3     equ.s     16 | Equivalence | 11 |         |    0 | 00/8000               | printax          equ      $F941                ; Prints current contents of the A and X in hex
  156 |  3     equ.s     17 | Equivalence | 11 |         |    0 | 00/8000               | prntyx           equ      $F940                ; Prints current contents of the Y and X in hex
  157 |  3     equ.s     18 | Equivalence | 11 |         |    0 | 00/8000               | rdkey            equ      $FD0C                ; wait for keypress
  158 |  3     equ.s     19 | Equivalence | 11 |         |    0 | 00/8000               | wait             equ      $FCA8                ; monitor delay
  159 |  3     equ.s     20 | Equivalence | 11 |         |    0 | 00/8000               | AUXMOV           equ      $C311                
  160 |  3     equ.s     21 | Equivalence | 11 |         |    0 | 00/8000               | OUTPORT          equ      $FE95                
  161 |  3     equ.s     22 | Equivalence | 11 |         |    0 | 00/8000               | prnxy            equ      $F940                
  162 |  3     equ.s     23 | Equivalence | 11 |         |    0 | 00/8000               | normal           equ      $FE84                ; Set normal video mode (white on black)
  163 |  3     equ.s     24 | Equivalence | 11 |         |    0 | 00/8000               | pr0              equ      $fe93                ; SETVID (= PR#0)
  164 |  3     equ.s     25 | Equivalence | 11 |         |    0 | 00/8000               | in0              equ      $fe89                ; SETKBD (= IN#0)
  165 |  3     equ.s     26 | Empty       | 11 |         |    0 | 00/8000               |                                                
  166 |  3     equ.s     27 | Comment     | 11 |         |    0 | 00/8000               | *
  167 |  3     equ.s     28 | Comment     | 11 |         |    0 | 00/8000               | ************ ROM switches ************  
  168 |  3     equ.s     29 | Equivalence | 11 |         |    0 | 00/8000               | STORE80OFF       equ      $C000                ; disable 80-column store
  169 |  3     equ.s     30 | Equivalence | 11 |         |    0 | 00/8000               | STORE80ON        equ      $C001                ; enable 80-column store
  170 |  3     equ.s     31 | Equivalence | 11 |         |    0 | 00/8000               | RAMRDOFF         equ      $C002                ; read main
  171 |  3     equ.s     32 | Equivalence | 11 |         |    0 | 00/8000               | RAMRDON          equ      $C003                ; read aux
  172 |  3     equ.s     33 | Equivalence | 11 |         |    0 | 00/8000               | RAMWRTOFF        equ      $C004                ; write to main
  173 |  3     equ.s     34 | Equivalence | 11 |         |    0 | 00/8000               | RAMWRTON         equ      $C005                ; write to aux
  174 |  3     equ.s     35 | Equivalence | 11 |         |    0 | 00/8000               | ALTCHARSET0FF    equ      $C00E                
  175 |  3     equ.s     36 | Equivalence | 11 |         |    0 | 00/8000               | ALTCHARSET0N     equ      $C00F                
  176 |  3     equ.s     37 | Equivalence | 11 |         |    0 | 00/8000               | kbd              equ      $C000                ; ascii code of last key pressed (+ 128 if strobe not cleared)
  177 |  3     equ.s     38 | Equivalence | 11 |         |    0 | 00/8000               | kbdstrb          equ      $C010                
  178 |  3     equ.s     39 | Equivalence | 11 |         |    0 | 00/8000               | col80off         equ      $C00C                
  179 |  3     equ.s     40 | Equivalence | 11 |         |    0 | 00/8000               | col80on          equ      $C00D                
  180 |  3     equ.s     41 | Equivalence | 11 |         |    0 | 00/8000               | 80col            equ      $C01F                
  181 |  3     equ.s     42 | Comment     | 11 |         |    0 | 00/8000               | *
  182 |  3     equ.s     43 | Comment     | 11 |         |    0 | 00/8000               | ************ page 0 ************  
  183 |  3     equ.s     44 | Equivalence | 11 |         |    0 | 00/8000               | cv               equ      $25                  
  184 |  3     equ.s     45 | Equivalence | 11 |         |    0 | 00/8000               | ch               equ      $24                  
  185 |  3     equ.s     46 | Equivalence | 11 |         |    0 | 00/8000               | basl             equ      $28                  
  186 |  3     equ.s     47 | Equivalence | 11 |         |    0 | 00/8000               | wndlft           equ      $20                  
  187 |  3     equ.s     48 | Equivalence | 11 |         |    0 | 00/8000               | wndwdth          equ      $21                  
  188 |  3     equ.s     49 | Equivalence | 11 |         |    0 | 00/8000               | wndtop           equ      $22                  ; Top Margin (0 - 23, 0 is default, 20 in graphics mode)
  189 |  3     equ.s     50 | Equivalence | 11 |         |    0 | 00/8000               | wndbtm           equ      $23                  
  190 |  3     equ.s     51 | Equivalence | 11 |         |    0 | 00/8000               | prompt           equ      $33                  
  191 |  3     equ.s     52 | Comment     | 11 |         |    0 | 00/8000               | *
  192 |  3     equ.s     53 | Equivalence | 11 |         |    0 | 00/8000               | ourch            equ      $57B                 ; Cursor's column position minus 1 (HTAB's place) in 80-column mode
  193 |  3     equ.s     54 | Equivalence | 11 |         |    0 | 00/8000               | ourcv            equ      $5FB                 ; 80 col vertical pos
  194 |  3     equ.s     55 | Comment     | 11 |         |    0 | 00/8000               | *
  195 |  3     equ.s     56 | Comment     | 11 |         |    0 | 00/8000               | ************ ProDOS ************ 
  196 |  3     equ.s     57 | Equivalence | 11 |         |    0 | 00/8000               | GETBUFR          equ      $bef5                
  197 |  3     equ.s     58 | Equivalence | 11 |         |    0 | 00/8000               | FREEBUFR         equ      $BEF8                
  198 |  3     equ.s     59 | Equivalence | 11 |         |    0 | 00/8000               | devnum           equ      $BF30                ; last used device here, format : DSSS0000
  199 |  3     equ.s     60 | Equivalence | 11 |         |    0 | 00/8000               | RSHIMEM          equ      $BEFB                
  200 |  3     equ.s     61 | Comment     | 11 |         |    0 | 00/8000               | *
  201 |  3     equ.s     62 | Comment     | 11 |         |    0 | 00/8000               | ************ MLI calls (ProDOS) ************
  202 |  3     equ.s     63 | Equivalence | 11 |         |    0 | 00/8000               | MLI              equ      $BF00                
  203 |  3     equ.s     64 | Equivalence | 11 |         |    0 | 00/8000               | create           equ      $C0                  
  204 |  3     equ.s     65 | Equivalence | 11 |         |    0 | 00/8000               | destroy          equ      $C1                  
  205 |  3     equ.s     66 | Equivalence | 11 |         |    0 | 00/8000               | online           equ      $C5                  
  206 |  3     equ.s     67 | Equivalence | 11 |         |    0 | 00/8000               | getprefix        equ      $c7                  
  207 |  3     equ.s     68 | Equivalence | 11 |         |    0 | 00/8000               | setprefix        equ      $c6                  
  208 |  3     equ.s     69 | Equivalence | 11 |         |    0 | 00/8000               | open             equ      $C8                  
  209 |  3     equ.s     70 | Equivalence | 11 |         |    0 | 00/8000               | close            equ      $CC                  
  210 |  3     equ.s     71 | Equivalence | 11 |         |    0 | 00/8000               | read             equ      $CA                  
  211 |  3     equ.s     72 | Equivalence | 11 |         |    0 | 00/8000               | write            equ      $CB                  
  212 |  3     equ.s     73 | Equivalence | 11 |         |    0 | 00/8000               | setmark          equ      $ce                  
  213 |  3     equ.s     74 | Equivalence | 11 |         |    0 | 00/8000               | geteof           equ      $d1                  
  214 |  3     equ.s     75 | Equivalence | 11 |         |    0 | 00/8000               | quit             equ      $65                  
  215 |  3     equ.s     76 | Comment     | 11 |         |    0 | 00/8000               | *
  216 |  3     equ.s     77 | Comment     | 11 |         |    0 | 00/8000               | ************ FP routines ************
  217 |  3     equ.s     78 | Equivalence | 11 |         |    0 | 00/8000               | float            equ      $E2F2                ; Converts SIGNED integer in A/Y (high/lo) into FAC
  218 |  3     equ.s     79 | Equivalence | 11 |         |    0 | 00/8000               | GIVAYF           equ      $E2F2                ; idem
  219 |  3     equ.s     80 | Equivalence | 11 |         |    0 | 00/8000               | FLOAT2           equ      $EBA0                ; "Float2" entry point (https://6502disassembly.com/a2-rom/Applesoft.html#SymLDAB7)
  220 |  3     equ.s     81 | Comment     | 11 |         |    0 | 00/8000               |                                 ; Float UNSIGNED value in FAC+1,2 (hi,low)
  221 |  3     equ.s     82 | Comment     | 11 |         |    0 | 00/8000               |                                 ; X-reg = exponent ; C=0 to make value negative, C=1 to make value positive
  222 |  3     equ.s     83 | Empty       | 11 |         |    0 | 00/8000               |                                                
  223 |  3     equ.s     84 | Equivalence | 11 |         |    0 | 00/8000               | PRNTFAC          equ      $ED2E                ; Prints number in FAC (in decimal format). FAC is destroyed
  224 |  3     equ.s     85 | Equivalence | 11 |         |    0 | 00/8000               | FIN              equ      $EC4A                ; FAC = expression pointed TXTPTR
  225 |  3     equ.s     86 | Equivalence | 11 |         |    0 | 00/8000               | FNEG             equ      $EED0                ; FAC = - FAC
  226 |  3     equ.s     87 | Equivalence | 11 |         |    0 | 00/8000               | FABS             equ      $EBAF                ; FAC = ABS(FAC)
  227 |  3     equ.s     88 | Equivalence | 11 |         |    0 | 00/8000               | F2INT16          equ      $E752                ; FAC to 16 bits int in A/Y and $50/51 (low/high)
  228 |  3     equ.s     89 | Equivalence | 11 |         |    0 | 00/8000               | FADD             equ      $E7BE                ; FAC = FAC + ARG
  229 |  3     equ.s     90 | Equivalence | 11 |         |    0 | 00/8000               | FSUBT            equ      $E7AA                ; FAC = FAC - ARG
  230 |  3     equ.s     91 | Equivalence | 11 |         |    0 | 00/8000               | FMULT            equ      $E97F                ; Move the number pointed by Y,A into ARG and fall into FMULTT
  231 |  3     equ.s     92 | Equivalence | 11 |         |    0 | 00/8000               | FMULTT           equ      $E982                ; FAC = FAC x ARG
  232 |  3     equ.s     93 | Equivalence | 11 |         |    0 | 00/8000               | FDIVT            equ      $EA69                ; FAC = FAC / ARG
  233 |  3     equ.s     94 | Equivalence | 11 |         |    0 | 00/8000               | RND              equ      $EFAE                ; FAC = random number
  234 |  3     equ.s     95 | Equivalence | 11 |         |    0 | 00/8000               | FOUT             equ      $ED34                ; Create a string at the start of the stack ($100−$110)
  235 |  3     equ.s     96 | Equivalence | 11 |         |    0 | 00/8000               | MOVAF            equ      $EB63                ; Move FAC into ARG. On exit A=FACEXP and Z is set
  236 |  3     equ.s     97 | Equivalence | 11 |         |    0 | 00/8000               | CONINT           equ      $E6FB                ; Convert FAC into a single byte number in X and FACLO
  237 |  3     equ.s     98 | Equivalence | 11 |         |    0 | 00/8000               | YTOFAC           equ      $E301                ; Float y
  238 |  3     equ.s     99 | Equivalence | 11 |         |    0 | 00/8000               | MOVMF            equ      $EB2B                ; Routine to pack FP number. Address of destination must be in Y
  239 |  3     equ.s    100 | Comment     | 11 |         |    0 | 00/8000               |                                 ; (high) and X (low). Result is packed from FAC                             
  240 |  3     equ.s    101 | Equivalence | 11 |         |    0 | 00/8000               | QUINT            equ      $EBF2                ; convert fac to 16bit INT at $A0 and $A1 (fac+3/fac+4)
  241 |  3     equ.s    102 | Equivalence | 11 |         |    0 | 00/8000               | STROUT           equ      $DB3A                ;
  242 |  3     equ.s    103 | Equivalence | 11 |         |    0 | 00/8000               | LINPRT           equ      $ED24                ; Converts the unsigned hexadecimal number in X (low) and A (high) into a decimal number and displays it.
  243 |  3     equ.s    104 | Empty       | 11 |         |    0 | 00/8000               |                                                
  244 |  3     equ.s    105 | Comment     | 11 |         |    0 | 00/8000               | * A intégrer :
  245 |  3     equ.s    106 | Comment     | 11 |         |    0 | 00/8000               | *FSUB = $E7A7    OVERFLOW = $E8D5        ONE = $E913        FLOG = $E941    CONUPK = $E9E3  MUL10 = $EA39 
  246 |  3     equ.s    107 | Comment     | 11 |         |    0 | 00/8000               | * FDIV = $EA66        DIVERR = $EAE1        MOVFM = $EAF9    FLOAT = $EB93        FCOMP = $EBB2      
  247 |  3     equ.s    108 | Comment     | 11 |         |    0 | 00/8000               | * FINT = $EC23   SQR = $EE8D        FPWRT = $EE9    FEXP = $EF09      FCOS = $EFEA    FSIN = $EFF1  FTAN = $F03A 
  248 |  3     equ.s    109 | Comment     | 11 |         |    0 | 00/8000               | * PIHALF = $F066   FATN = $F09E        
  249 |  3     equ.s    110 | Comment     | 11 |         |    0 | 00/8000               | *
  250 |  3     equ.s    111 | Comment     | 11 |         |    0 | 00/8000               | ************ Applesoft BASIC ************
  251 |  3     equ.s    112 | Equivalence | 11 |         |    0 | 00/8000               | TXTTAB           equ      $67                  ; $67/$68 address of beginning of BASIC Program ($0801 is default)
  252 |  3     equ.s    113 | Equivalence | 11 |         |    0 | 00/8000               | PRGEND           equ      $AF                  ; $AF/$B0 address of end of Applesoft program plus 1 or 2 of BASIC
  253 |  3     equ.s    114 | Equivalence | 11 |         |    0 | 00/8000               | VARTAB           equ      $69                  ; $69/$6A address of beginning of simple variables, just after Basic prog. (unless modified by LOMEN)
  254 |  3     equ.s    115 | Equivalence | 11 |         |    0 | 00/8000               | ARYTAB           equ      $6B                  ; $6B/$6C addresse of beginning of array variables, just after simple variables
  255 |  3     equ.s    116 | Equivalence | 11 |         |    0 | 00/8000               | STREND           equ      $6D                  ; $6D/$6E addresse of end of array variables
  256 |  3     equ.s    117 | Equivalence | 11 |         |    0 | 00/8000               | MEMSIZ           equ      $73                  ; $73/$74 : top of string data, set by HIMEM: (usually $9600),
  257 |  3     equ.s    118 | Equivalence | 11 |         |    0 | 00/8000               | FRETOP           equ      $6F                  ; $6F/$70 bottom of string data, growing downwards
  258 |  3     equ.s    119 | Equivalence | 11 |         |    0 | 00/8000               | CHRGOT           equ      $B7                  ; get char pointed by TXTPTR in A
  259 |  3     equ.s    120 | Equivalence | 11 |         |    0 | 00/8000               | CHRGET           equ      $B1                  ; advance TXTPRT and read char
  260 |  3     equ.s    121 | Equivalence | 11 |         |    0 | 00/8000               | TXTPTR           equ      $B8                  ; pointer $B8/$B9 used in chrget and chrgot
  261 |  3     equ.s    122 | Equivalence | 11 |         |    0 | 00/8000               | CHKCOM           equ      $DEBE                ; check for comma and move TXTPTR forward
  262 |  3     equ.s    123 | Equivalence | 11 |         |    0 | 00/8000               | FRMNUM           equ      $DD67                ; eval num. value, variable, expression pointed by TXTPTR, advance TXTPTR
  263 |  3     equ.s    124 | Equivalence | 11 |         |    0 | 00/8000               | GETADR           equ      $E752                ; convert FAC to integer (to Y,A)
  264 |  3     equ.s    125 | Equivalence | 11 |         |    0 | 00/8000               | FRMEVL           equ      $DD7B                ; evaluate any expression, result in FAC.
  265 |  3     equ.s    126 | Equivalence | 11 |         |    0 | 00/8000               | FRESTR           equ      $E5FD                ; check if epression is a string. A = length, pointer in $5E/$5F
  266 |  3     equ.s    127 | Equivalence | 11 |         |    0 | 00/8000               | ERRDIR           equ      $E306                ; illegal direct if not running
  267 |  3     equ.s    128 | Empty       | 11 |         |    0 | 00/8000               |                                                
  268 |  3     equ.s    129 | Equivalence | 11 |         |    0 | 00/8000               | PTRGET           equ      $DFE3                ; On entry, TXTPTR must be pointing to the first character of the variable's name.
  269 |  3     equ.s    130 | Comment     | 11 |         |    0 | 00/8000               | * finds an Applesoft variable's memory address and puts a pointer to it in VARPNT ($83-$84) and in A/Y (low/hi). 
  270 |  3     equ.s    131 | Comment     | 11 |         |    0 | 00/8000               | * The variable's name is left in VARNAM ($81-$82). It will work with any type of variable (integer, array element, string..)
  271 |  3     equ.s    132 | Comment     | 11 |         |    0 | 00/8000               | * If the variable does not already exist, PTRGET will create it for you
  272 |  3     equ.s    133 | Comment     | 11 |         |    0 | 00/8000               | * Advances TXTPTR.
  273 |  3     equ.s    134 | Comment     | 11 |         |    0 | 00/8000               | * Set : vartype equ $11 ; str$=$ff, num=$00 
  274 |  3     equ.s    135 | Comment     | 11 |         |    0 | 00/8000               | * set : numtype equ $12 ; int =$80, real = $00
  275 |  3     equ.s    136 | Empty       | 11 |         |    0 | 00/8000               |                                                
  276 |  3     equ.s    137 | Equivalence | 11 |         |    0 | 00/8000               | CHKNUM           equ      $DD6A                ; verifies that the most recent var found by PTRGET was numeric.
  277 |  3     equ.s    138 | Comment     | 11 |         |    0 | 00/8000               |  *  https://www.brutaldeluxe.fr/documentation/thesourcerorsapprentice/thesourcerorsapprentice_v1n1.pdf
  278 |  3     equ.s    139 | Comment     | 11 |         |    0 | 00/8000               |  * Type mismatch error if var not numeric
  279 |  3     equ.s    140 | Empty       | 11 |         |    0 | 00/8000               |                                                
  280 |  1 asmdemo.s     25 | Comment     | 11 |         |    0 | 00/8000               | *<sym>
  281 |  1 asmdemo.s     26 | Equivalence | 11 |         |    0 | 00/8000               | MyBuffer         equ      $8000                ; starting address of storage for MyPort grafport
  282 |  1 asmdemo.s     27 | Comment     | 11 |         |    0 | 00/8000               | *<sym>
  283 |  1 asmdemo.s     28 | Equivalence | 11 |         |    0 | 00/8000               | TestFont         equ      $800                 ; loading address of "TEST.FONT" file
  284 |  1 asmdemo.s     29 | Comment     | 11 |         |    0 | 00/8000               | *<sym>
  285 |  1 asmdemo.s     30 | Equivalence | 11 |         |    0 | 00/8000               | ptr              equ      $06                  
  286 |  1 asmdemo.s     31 | Comment     | 11 |         |    0 | 00/8000               | *
  287 |  1 asmdemo.s     32 | Comment     | 11 |         |    0 | 00/8000               | **************************** MAIN PROGRAM ****************************
  288 |  1 asmdemo.s     33 | Comment     | 11 |         |    0 | 00/8000               | *
  289 |  1 asmdemo.s     34 | Directive   | 11 |         |    0 | 00/8000               |                  org      $E00                 
  290 |  1 asmdemo.s     35 | Code        | 11 |         |    3 | 00/0E00 : 20 2F 0E    |                  jsr      DoHeader             
  291 |  1 asmdemo.s     36 | Code        | 11 |         |    2 | 00/0E03 : 90 01       |                  bcc      okheader             ; exit on error if carry set
  292 |  1 asmdemo.s     37 | Code        | 11 |         |    1 | 00/0E05 : 60          |                  rts                           
  293 |  1 asmdemo.s     38 | Comment     | 11 |         |    0 | 00/0E06               | *<sym>
  294 |  1 asmdemo.s     39 | Empty       | 11 |         |    0 | 00/0E06               | okheader                                       
  295 |  1 asmdemo.s     40 | Macro       | 11 |         |    0 | 00/0E06               |                  GP_call  {1};0                
  296 |  1 asmdemo.s     40 | Code        | 11 |         |    3 | 00/0E06 : 20 00 40    |                  jsr      {$4000}              ; graphic primitives only entry point
  297 |  1 asmdemo.s     40 | Data        | 11 |         |    1 | 00/0E09 : 01          |                  dfb      {1}                  ; command ID (1 byte)
  298 |  1 asmdemo.s     40 | Data        | 11 |         |    2 | 00/0E0A : 00 00       |                  da       0                    ; address of parameter(s) (2 bytes), 0 if no paramter
  299 |  1 asmdemo.s     41 | Macro       | 11 |         |    0 | 00/0E0C               |                  GP_call  {{{1}+1}+1};MyPort   
  300 |  1 asmdemo.s     41 | Code        | 11 |         |    3 | 00/0E0C : 20 00 40    |                  jsr      {$4000}              ; graphic primitives only entry point
  301 |  1 asmdemo.s     41 | Data        | 11 |         |    1 | 00/0E0F : 03          |                  dfb      {{{1}+1}+1}          ; command ID (1 byte)
  302 |  1 asmdemo.s     41 | Data        | 11 |         |    2 | 00/0E10 : 13 13       |                  da       MyPort               ; address of parameter(s) (2 bytes), 0 if no paramter
  303 |  1 asmdemo.s     42 | Macro       | 11 |         |    0 | 00/0E12               |                  GP_call  {{{{1}+1}+1}+1};MyPort
  304 |  1 asmdemo.s     42 | Code        | 11 |         |    3 | 00/0E12 : 20 00 40    |                  jsr      {$4000}              ; graphic primitives only entry point
  305 |  1 asmdemo.s     42 | Data        | 11 |         |    1 | 00/0E15 : 04          |                  dfb      {{{{1}+1}+1}+1}      ; command ID (1 byte)
  306 |  1 asmdemo.s     42 | Data        | 11 |         |    2 | 00/0E16 : 13 13       |                  da       MyPort               ; address of parameter(s) (2 bytes), 0 if no paramter
  307 |  1 asmdemo.s     43 | Comment     | 11 |         |    0 | 00/0E18               | *<sym>
  308 |  1 asmdemo.s     44 | Empty       | 11 |         |    0 | 00/0E18               | startimage                                     
  309 |  1 asmdemo.s     45 | Code        | 11 |         |    3 | 00/0E18 : 20 80 0F    |                  jsr      Doimg                
  310 |  1 asmdemo.s     46 | Comment     | 11 |         |    0 | 00/0E1B               |                 ;jsr DoPaint
  311 |  1 asmdemo.s     47 | Code        | 11 |         |    2 | 00/0E1B : A9 00       |                  lda      #0                   
  312 |  1 asmdemo.s     48 | Code        | 11 |         |    3 | 00/0E1D : 8D 1D 0F    |                  sta      quitflag             
  313 |  1 asmdemo.s     49 | Code        | 11 |         |    3 | 00/0E20 : 20 C1 11    |                  jsr      WaitForKeyPress      
  314 |  1 asmdemo.s     50 | Code        | 11 |         |    3 | 00/0E23 : 20 E1 10    |                  jsr      DoKey                
  315 |  1 asmdemo.s     51 | Code        | 11 |         |    3 | 00/0E26 : AD 1D 0F    |                  lda      quitflag             
  316 |  1 asmdemo.s     52 | Code        | 11 |         |    2 | 00/0E29 : F0 ED       |                  beq      startimage           
  317 |  1 asmdemo.s     53 | Code        | 11 |         |    3 | 00/0E2B : 20 1A 14    |                  jsr      DoTextScreen         
  318 |  1 asmdemo.s     54 | Code        | 11 |         |    1 | 00/0E2E : 60          |                  rts                           
  319 |  1 asmdemo.s     55 | Comment     | 11 |         |    0 | 00/0E2F               | *
  320 |  1 asmdemo.s     56 | Comment     | 11 |         |    0 | 00/0E2F               | *********************************************************************
  321 |  1 asmdemo.s     57 | Comment     | 11 |         |    0 | 00/0E2F               | *
  322 |  1 asmdemo.s     58 | Comment     | 11 |         |    0 | 00/0E2F               | *<sym>
  323 |  1 asmdemo.s     59 | Empty       | 11 |         |    0 | 00/0E2F               | DoHeader                                       
  324 |  1 asmdemo.s     60 | Code        | 11 |         |    3 | 00/0E2F : 20 DA 0E    |                  jsr      TestSignature        ; test BMP signature
  325 |  1 asmdemo.s     61 | Code        | 11 |         |    2 | 00/0E32 : 90 01       |                  bcc      oksign               ; exit on error if carry set
  326 |  1 asmdemo.s     62 | Code        | 11 |         |    1 | 00/0E34 : 60          |                  rts                           
  327 |  1 asmdemo.s     63 | Comment     | 11 |         |    0 | 00/0E35               | *<sym>
  328 |  1 asmdemo.s     64 | Empty       | 11 |         |    0 | 00/0E35               | oksign                                         
  329 |  1 asmdemo.s     65 | Comment     | 11 |         |    0 | 00/0E35               | * get file length
  330 |  1 asmdemo.s     66 | Code        | 11 |         |    2 | 00/0E35 : A2 02       |                  ldx      #2                   ; offset to file length in BMP header
  331 |  1 asmdemo.s     67 | Code        | 11 |         |    3 | 00/0E37 : BD 00 60    |                  lda      {$6000},x            
  332 |  1 asmdemo.s     68 | Code        | 11 |         |    3 | 00/0E3A : 8D D0 0E    |                  sta      filelen              
  333 |  1 asmdemo.s     69 | Code        | 11 |         |    1 | 00/0E3D : E8          |                  inx                           
  334 |  1 asmdemo.s     70 | Code        | 11 |         |    3 | 00/0E3E : BD 00 60    |                  lda      {$6000},x            
  335 |  1 asmdemo.s     71 | Code        | 11 |         |    3 | 00/0E41 : 8D D1 0E    |                  sta      filelen+1            
  336 |  1 asmdemo.s     72 | Comment     | 11 |         |    0 | 00/0E44               | * check file length
  337 |  1 asmdemo.s     73 | Code        | 11 |         |    3 | 00/0E44 : AD D1 0E    |                  lda      filelen+1            
  338 |  1 asmdemo.s     74 | Code        | 11 |         |    2 | 00/0E47 : C9 20       |                  cmp      #>{$2000}            
  339 |  1 asmdemo.s     75 | Code        | 11 |         |    2 | 00/0E49 : D0 05       |                  bne      ozunid_1             
  340 |  1 asmdemo.s     76 | Code        | 11 |         |    3 | 00/0E4B : AD D0 0E    |                  lda      filelen              
  341 |  1 asmdemo.s     77 | Code        | 11 |         |    2 | 00/0E4E : C9 00       |                  cmp      #<{$2000}            
  342 |  1 asmdemo.s     78 | Code        | 11 |         |    2 | 00/0E50 : 90 09       | ozunid_1         bcc      lower                
  343 |  1 asmdemo.s     79 | Code        | 11 |         |    2 | 00/0E52 : D0 02       |                  bne      higher               
  344 |  1 asmdemo.s     80 | Code        | 11 |         |    2 | 00/0E54 : F0 05       |                  beq      samelength           
  345 |  1 asmdemo.s     81 | Comment     | 11 |         |    0 | 00/0E56               | *<sym>
  346 |  1 asmdemo.s     82 | Code        | 11 |         |    3 | 00/0E56 : 4C E8 0E    | higher           jmp      dataerr              ; size is too big
  347 |  1 asmdemo.s     83 | Code        | 11 |         |    1 | 00/0E59 : 38          |                  sec                           
  348 |  1 asmdemo.s     84 | Code        | 11 |         |    1 | 00/0E5A : 60          |                  rts                           
  349 |  1 asmdemo.s     85 | Comment     | 11 |         |    0 | 00/0E5B               | *<sym>
  350 |  1 asmdemo.s     86 | Empty       | 11 |         |    0 | 00/0E5B               | samelength                                     ; file length = max : OK
  351 |  1 asmdemo.s     87 | Comment     | 11 |         |    0 | 00/0E5B               | *<sym>
  352 |  1 asmdemo.s     88 | Empty       | 11 |         |    0 | 00/0E5B               | lower                                          ; file length < max : OK
  353 |  1 asmdemo.s     89 | Code        | 11 |         |    2 | 00/0E5B : A2 12       |                  ldx      #$12                 ; get image width in BMP header
  354 |  1 asmdemo.s     90 | Code        | 11 |         |    3 | 00/0E5D : BD 00 60    |                  lda      {$6000},x            
  355 |  1 asmdemo.s     91 | Code        | 11 |         |    3 | 00/0E60 : 8D D2 0E    |                  sta      hdef                 
  356 |  1 asmdemo.s     92 | Code        | 11 |         |    1 | 00/0E63 : E8          |                  inx                           
  357 |  1 asmdemo.s     93 | Code        | 11 |         |    3 | 00/0E64 : BD 00 60    |                  lda      {$6000},x            
  358 |  1 asmdemo.s     94 | Code        | 11 |         |    3 | 00/0E67 : 8D D3 0E    |                  sta      hdef+1               
  359 |  1 asmdemo.s     95 | Code        | 11 |         |    2 | 00/0E6A : A2 16       |                  ldx      #$16                 ; get image height in BMP header
  360 |  1 asmdemo.s     96 | Code        | 11 |         |    3 | 00/0E6C : BD 00 60    |                  lda      {$6000},x            
  361 |  1 asmdemo.s     97 | Code        | 11 |         |    3 | 00/0E6F : 8D D4 0E    |                  sta      vdef                 
  362 |  1 asmdemo.s     98 | Code        | 11 |         |    1 | 00/0E72 : E8          |                  inx                           
  363 |  1 asmdemo.s     99 | Code        | 11 |         |    3 | 00/0E73 : BD 00 60    |                  lda      {$6000},x            
  364 |  1 asmdemo.s    100 | Code        | 11 |         |    3 | 00/0E76 : 8D D5 0E    |                  sta      vdef+1               
  365 |  1 asmdemo.s    101 | Empty       | 11 |         |    0 | 00/0E79               |                                                
  366 |  1 asmdemo.s    102 | Code        | 11 |         |    3 | 00/0E79 : AD D3 0E    |                  lda      hdef+1               ; width must be <= maxwidth
  367 |  1 asmdemo.s    103 | Empty       | 11 |         |    0 | 00/0E7C               |                                                
  368 |  1 asmdemo.s    104 | Code        | 11 |         |    2 | 00/0E7C : C9 01       |                  cmp      #>{280}              
  369 |  1 asmdemo.s    105 | Code        | 11 |         |    2 | 00/0E7E : D0 05       |                  bne      ozunid_2             
  370 |  1 asmdemo.s    106 | Code        | 11 |         |    3 | 00/0E80 : AD D2 0E    |                  lda      hdef                 
  371 |  1 asmdemo.s    107 | Code        | 11 |         |    2 | 00/0E83 : C9 18       |                  cmp      #<{280}              
  372 |  1 asmdemo.s    108 | Code        | 11 |         |    2 | 00/0E85 : 90 09       | ozunid_2         bcc      goodw                
  373 |  1 asmdemo.s    109 | Code        | 11 |         |    2 | 00/0E87 : D0 02       |                  bne      badw                 
  374 |  1 asmdemo.s    110 | Code        | 11 |         |    2 | 00/0E89 : F0 05       |                  beq      goodw                
  375 |  1 asmdemo.s    111 | Comment     | 11 |         |    0 | 00/0E8B               | *<sym>
  376 |  1 asmdemo.s    112 | Code        | 11 |         |    3 | 00/0E8B : 4C E8 0E    | badw             jmp      dataerr              
  377 |  1 asmdemo.s    113 | Code        | 11 |         |    1 | 00/0E8E : 38          |                  sec                           
  378 |  1 asmdemo.s    114 | Code        | 11 |         |    1 | 00/0E8F : 60          |                  rts                           
  379 |  1 asmdemo.s    115 | Comment     | 11 |         |    0 | 00/0E90               | *<sym>
  380 |  1 asmdemo.s    116 | Empty       | 11 |         |    0 | 00/0E90               | goodw                                          
  381 |  1 asmdemo.s    117 | Code        | 11 |         |    3 | 00/0E90 : AD D5 0E    |                  lda      vdef+1               ; height must be <= maxheight
  382 |  1 asmdemo.s    118 | Code        | 11 |         |    2 | 00/0E93 : C9 00       |                  cmp      #>{192}              
  383 |  1 asmdemo.s    119 | Code        | 11 |         |    2 | 00/0E95 : D0 05       |                  bne      ozunid_3             
  384 |  1 asmdemo.s    120 | Code        | 11 |         |    3 | 00/0E97 : AD D4 0E    |                  lda      vdef                 
  385 |  1 asmdemo.s    121 | Code        | 11 |         |    2 | 00/0E9A : C9 C0       |                  cmp      #<{192}              
  386 |  1 asmdemo.s    122 | Code        | 11 |         |    2 | 00/0E9C : 90 04       | ozunid_3         bcc      goodh                
  387 |  1 asmdemo.s    123 | Code        | 11 |         |    2 | 00/0E9E : D0 EB       |                  bne      badw                 
  388 |  1 asmdemo.s    124 | Code        | 11 |         |    2 | 00/0EA0 : F0 00       |                  beq      goodh                
  389 |  1 asmdemo.s    125 | Comment     | 11 |         |    0 | 00/0EA2               | *<sym>
  390 |  1 asmdemo.s    126 | Empty       | 11 |         |    0 | 00/0EA2               | goodh                                          
  391 |  1 asmdemo.s    127 | Empty       | 11 |         |    0 | 00/0EA2               |                                                
  392 |  1 asmdemo.s    128 | Code        | 11 |         |    2 | 00/0EA2 : A2 1C       |                  ldx      #$1C                 ; offset to image depth (# of bits per pixel)
  393 |  1 asmdemo.s    129 | Code        | 11 |         |    3 | 00/0EA4 : BD 00 60    |                  lda      {$6000},x            ; get value
  394 |  1 asmdemo.s    130 | Code        | 11 |         |    2 | 00/0EA7 : C9 01       |                  cmp      #1                   ; must be 1
  395 |  1 asmdemo.s    131 | Code        | 11 |         |    2 | 00/0EA9 : F0 03       |                  beq      gooddepth            
  396 |  1 asmdemo.s    132 | Code        | 11 |         |    3 | 00/0EAB : 4C E8 0E    |                  jmp      dataerr              
  397 |  1 asmdemo.s    133 | Comment     | 11 |         |    0 | 00/0EAE               | *<sym>
  398 |  1 asmdemo.s    134 | Empty       | 11 |         |    0 | 00/0EAE               | gooddepth                                      
  399 |  1 asmdemo.s    135 | Code        | 11 |         |    2 | 00/0EAE : A2 0A       |                  ldx      #$A                  ; get image offset in BMP header
  400 |  1 asmdemo.s    136 | Comment     | 11 |         |    0 | 00/0EB0               |                                         ; image data start @ bmp+imgoffset
  401 |  1 asmdemo.s    137 | Code        | 11 |         |    3 | 00/0EB0 : BD 00 60    |                  lda      {$6000},x            
  402 |  1 asmdemo.s    138 | Code        | 11 |         |    3 | 00/0EB3 : 8D D6 0E    |                  sta      imgoffset            
  403 |  1 asmdemo.s    139 | Code        | 11 |         |    1 | 00/0EB6 : E8          |                  inx                           
  404 |  1 asmdemo.s    140 | Code        | 11 |         |    3 | 00/0EB7 : BD 00 60    |                  lda      {$6000},x            
  405 |  1 asmdemo.s    141 | Code        | 11 |         |    3 | 00/0EBA : 8D D7 0E    |                  sta      imgoffset+1          
  406 |  1 asmdemo.s    142 | Empty       | 11 |         |    0 | 00/0EBD               |                                                
  407 |  1 asmdemo.s    143 | Code        | 11 |         |    2 | 00/0EBD : A9 00       |                  lda      #<{$6000}            ; set pointer to beginning of image data
  408 |  1 asmdemo.s    144 | Code        | 11 |         |    1 | 00/0EBF : 18          |                  clc                           
  409 |  1 asmdemo.s    145 | Code        | 11 |         |    3 | 00/0EC0 : 6D D6 0E    |                  adc      imgoffset            
  410 |  1 asmdemo.s    146 | Code        | 11 |         |    3 | 00/0EC3 : 8D D8 0E    |                  sta      imgdata              
  411 |  1 asmdemo.s    147 | Code        | 11 |         |    2 | 00/0EC6 : A9 60       |                  lda      #>{$6000}            
  412 |  1 asmdemo.s    148 | Code        | 11 |         |    3 | 00/0EC8 : 6D D7 0E    |                  adc      imgoffset+1          
  413 |  1 asmdemo.s    149 | Code        | 11 |         |    3 | 00/0ECB : 8D D9 0E    |                  sta      imgdata+1            
  414 |  1 asmdemo.s    150 | Code        | 11 |         |    1 | 00/0ECE : 18          |                  clc                           
  415 |  1 asmdemo.s    151 | Code        | 11 |         |    1 | 00/0ECF : 60          |                  rts                           
  416 |  1 asmdemo.s    152 | Comment     | 11 |         |    0 | 00/0ED0               | *<sym>
  417 |  1 asmdemo.s    153 | Data        | 11 |         |    2 | 00/0ED0 : 00 00       | filelen          ds       2                    
  418 |  1 asmdemo.s    154 | Comment     | 11 |         |    0 | 00/0ED2               | *<syme>
  419 |  1 asmdemo.s    155 | Equivalence | 11 |         |    0 | 00/0ED2               | maxlen           equ      $2000                ; 8 k for image (between $6000 and $7FFF)
  420 |  1 asmdemo.s    156 | Comment     | 11 |         |    0 | 00/0ED2               | *<syme>
  421 |  1 asmdemo.s    157 | Equivalence | 11 |         |    0 | 00/0ED2               | maxwidth         equ      280                  ; = 560 / 2 (each pixel is doubled in width)
  422 |  1 asmdemo.s    158 | Comment     | 11 |         |    0 | 00/0ED2               | *<syme>
  423 |  1 asmdemo.s    159 | Equivalence | 11 |         |    0 | 00/0ED2               | maxheight        equ      192                  ; screen height in pixels
  424 |  1 asmdemo.s    160 | Comment     | 11 |         |    0 | 00/0ED2               | *<sym>
  425 |  1 asmdemo.s    161 | Data        | 11 |         |    2 | 00/0ED2 : 00 00       | hdef             ds       2                    ; image width
  426 |  1 asmdemo.s    162 | Comment     | 11 |         |    0 | 00/0ED4               | *<sym>
  427 |  1 asmdemo.s    163 | Data        | 11 |         |    2 | 00/0ED4 : 00 00       | vdef             ds       2                    ; image height
  428 |  1 asmdemo.s    164 | Comment     | 11 |         |    0 | 00/0ED6               | *<sym>
  429 |  1 asmdemo.s    165 | Data        | 11 |         |    2 | 00/0ED6 : 00 00       | imgoffset        ds       2                    ; offset to image data (over BMP header)
  430 |  1 asmdemo.s    166 | Comment     | 11 |         |    0 | 00/0ED8               | *<sym>
  431 |  1 asmdemo.s    167 | Empty       | 11 |         |    0 | 00/0ED8               | imgdata                                        
  432 |  1 asmdemo.s    168 | Data        | 11 |         |    2 | 00/0ED8 : 00 00       |                  ds       2                    ; address of image data
  433 |  1 asmdemo.s    169 | Comment     | 11 |         |    0 | 00/0EDA               | *
  434 |  1 asmdemo.s    170 | Comment     | 11 |         |    0 | 00/0EDA               | *
  435 |  1 asmdemo.s    171 | Comment     | 11 |         |    0 | 00/0EDA               | *<sym>
  436 |  1 asmdemo.s    172 | Empty       | 11 |         |    0 | 00/0EDA               | TestSignature                                  
  437 |  1 asmdemo.s    173 | Code        | 11 |         |    3 | 00/0EDA : AD 00 60    |                  lda      {$6000}              ; test signature
  438 |  1 asmdemo.s    174 | Code        | 11 |         |    2 | 00/0EDD : C9 42       |                  cmp      #'B'                 
  439 |  1 asmdemo.s    175 | Code        | 11 |         |    2 | 00/0EDF : D0 07       |                  bne      dataerr              
  440 |  1 asmdemo.s    176 | Code        | 11 |         |    3 | 00/0EE1 : AD 01 60    |                  lda      {$6000}+1            
  441 |  1 asmdemo.s    177 | Code        | 11 |         |    2 | 00/0EE4 : C9 4D       |                  cmp      #'M'                 
  442 |  1 asmdemo.s    178 | Code        | 11 |         |    2 | 00/0EE6 : F0 16       |                  beq      bmpOK                
  443 |  1 asmdemo.s    179 | Comment     | 11 |         |    0 | 00/0EE8               | *<sym>
  444 |  1 asmdemo.s    180 | Code        | 11 |         |    3 | 00/0EE8 : 20 1A 14    | dataerr          jsr      DoTextScreen         ; bad signature
  445 |  1 asmdemo.s    181 | Code        | 11 |         |    2 | 00/0EEB : A2 00       |                  ldx      #0                   
  446 |  1 asmdemo.s    182 | Comment     | 11 |         |    0 | 00/0EED               | *<sym>
  447 |  1 asmdemo.s    183 | Code        | 11 |         |    3 | 00/0EED : BD 00 0F    | printchar        lda      errmsg,x             
  448 |  1 asmdemo.s    184 | Code        | 11 |         |    2 | 00/0EF0 : F0 07       |                  beq      errend               
  449 |  1 asmdemo.s    185 | Code        | 11 |         |    3 | 00/0EF2 : 20 ED FD    |                  jsr      {$FDED}              
  450 |  1 asmdemo.s    186 | Code        | 11 |         |    1 | 00/0EF5 : E8          |                  inx                           
  451 |  1 asmdemo.s    187 | Code        | 11 |         |    3 | 00/0EF6 : 4C ED 0E    |                  jmp      printchar            
  452 |  1 asmdemo.s    188 | Comment     | 11 |         |    0 | 00/0EF9               | *<sym>
  453 |  1 asmdemo.s    189 | Code        | 11 |         |    3 | 00/0EF9 : 20 8E FD    | errend           jsr      {$FD8E}              
  454 |  1 asmdemo.s    190 | Code        | 11 |         |    1 | 00/0EFC : 38          |                  sec                           
  455 |  1 asmdemo.s    191 | Code        | 11 |         |    1 | 00/0EFD : 60          |                  rts                           
  456 |  1 asmdemo.s    192 | Comment     | 11 |         |    0 | 00/0EFE               | *<sym>
  457 |  1 asmdemo.s    193 | Code        | 11 |         |    1 | 00/0EFE : 18          | bmpOK            clc                           
  458 |  1 asmdemo.s    194 | Code        | 11 |         |    1 | 00/0EFF : 60          |                  rts                           
  459 |  1 asmdemo.s    195 | Comment     | 11 |         |    0 | 00/0F00               | *<sym>
  460 |  1 asmdemo.s    196 | Data        | 11 |         |    5 | 00/0F00 : C5 F2 F2 EF | errmsg           asc      "Error"              
      |                     |             |    |         |      |           F2          |
  461 |  1 asmdemo.s    197 | Data        | 11 |         |    1 | 00/0F05 : 00          |                  dfb      0                    
  462 |  1 asmdemo.s    198 | Comment     | 11 |         |    0 | 00/0F06               | *
  463 |  1 asmdemo.s    199 | Comment     | 11 |         |    0 | 00/0F06               | * Doimg
  464 |  1 asmdemo.s    200 | Comment     | 11 |         |    0 | 00/0F06               | * lopp on each line
  465 |  1 asmdemo.s    201 | Comment     | 11 |         |    0 | 00/0F06               | * loop on a line (lopp length = hdef bytes / 8) => calculte loop length 
  466 |  1 asmdemo.s    202 | Comment     | 11 |         |    0 | 00/0F06               | * needs : pointer to inputbyte
  467 |  1 asmdemo.s    203 | Comment     | 11 |         |    0 | 00/0F06               | * init pointer to imgdata
  468 |  1 asmdemo.s    204 | Empty       | 11 |         |    0 | 00/0F06               |                                                
  469 |  1 asmdemo.s    205 | Comment     | 11 |         |    0 | 00/0F06               | * for i = 1 to loop length
  470 |  1 asmdemo.s    206 | Comment     | 11 |         |    0 | 00/0F06               | * for each byte :
  471 |  1 asmdemo.s    207 | Comment     | 11 |         |    0 | 00/0F06               | * loop 8 time (or less if end of line occurs before 8)
  472 |  1 asmdemo.s    208 | Comment     | 11 |         |    0 | 00/0F06               | * get next bit by shifting left in C
  473 |  1 asmdemo.s    209 | Comment     | 11 |         |    0 | 00/0F06               | * poke bit in output byte : need bitcounter
  474 |  1 asmdemo.s    210 | Comment     | 11 |         |    0 | 00/0F06               | * if C = 0 : x = bitcounter; lda output byte ; and tableZero ; sta output byte
  475 |  1 asmdemo.s    211 | Comment     | 11 |         |    0 | 00/0F06               | * if C = 1 : x = bitcounter; lda tableZero,x ; eor $ff ; and output byte ; sta output byte
  476 |  1 asmdemo.s    212 | Comment     | 11 |         |    0 | 00/0F06               | * inc bitcounter ; cmp #7 ; bne loop else { next output byte, bitcounter = 0}
  477 |  1 asmdemo.s    213 | Comment     | 11 |         |    0 | 00/0F06               | * Draw line using PaintBits function in graphic primitives package
  478 |  1 asmdemo.s    214 | Comment     | 11 |         |    0 | 00/0F06               | * next line
  479 |  1 asmdemo.s    215 | Comment     | 11 |         |    0 | 00/0F06               | * check for last line
  480 |  1 asmdemo.s    216 | Comment     | 11 |         |    0 | 00/0F06               | *
  481 |  1 asmdemo.s    217 | Comment     | 11 |         |    0 | 00/0F06               | * vars :
  482 |  1 asmdemo.s    218 | Comment     | 11 |         |    0 | 00/0F06               | *<sym>
  483 |  1 asmdemo.s    219 | Data        | 11 |         |    1 | 00/0F06 : 00          | lineCnt          ds       1                    ; current # of lines
  484 |  1 asmdemo.s    220 | Comment     | 11 |         |    0 | 00/0F07               | *<sym>
  485 |  1 asmdemo.s    221 | Data        | 11 |         |    1 | 00/0F07 : 00          | inputBitPos      ds       1                    ; current position in input byte (0 to 7)
  486 |  1 asmdemo.s    222 | Comment     | 11 |         |    0 | 00/0F08               | *<sym>
  487 |  1 asmdemo.s    223 | Data        | 11 |         |    2 | 00/0F08 : 00 00       | inputBitCnt      ds       2                    ; current # of input byte (0 to hdef - 1)
  488 |  1 asmdemo.s    224 | Comment     | 11 |         |    0 | 00/0F0A               | *<sym>
  489 |  1 asmdemo.s    225 | Data        | 11 |         |    1 | 00/0F0A : 00          | outputBitPos     ds       1                    ; current position in ouput byte (0 to 6)
  490 |  1 asmdemo.s    226 | Comment     | 11 |         |    0 | 00/0F0B               | *<sym>
  491 |  1 asmdemo.s    227 | Data        | 11 |         |    1 | 00/0F0B : 00          | inbyte           ds       1                    ; save input byte
  492 |  1 asmdemo.s    228 | Comment     | 11 |         |    0 | 00/0F0C               | *<sym>
  493 |  1 asmdemo.s    229 | Data        | 11 |         |    1 | 00/0F0C : 00          | inputByteCnt     ds       1                    ; counts # of input byte in a line
  494 |  1 asmdemo.s    230 | Comment     | 11 |         |    0 | 00/0F0D               | *<sym>
  495 |  1 asmdemo.s    231 | Empty       | 11 |         |    0 | 00/0F0D               | tableZero                                      
  496 |  1 asmdemo.s    232 | Data        | 11 |         |    1 | 00/0F0D : FE          |                  db       %11111110            
  497 |  1 asmdemo.s    233 | Data        | 11 |         |    1 | 00/0F0E : FD          |                  db       %11111101            
  498 |  1 asmdemo.s    234 | Data        | 11 |         |    1 | 00/0F0F : FB          |                  db       %11111011            
  499 |  1 asmdemo.s    235 | Data        | 11 |         |    1 | 00/0F10 : F7          |                  db       %11110111            
  500 |  1 asmdemo.s    236 | Data        | 11 |         |    1 | 00/0F11 : EF          |                  db       %11101111            
  501 |  1 asmdemo.s    237 | Data        | 11 |         |    1 | 00/0F12 : DF          |                  db       %11011111            
  502 |  1 asmdemo.s    238 | Data        | 11 |         |    1 | 00/0F13 : BF          |                  db       %10111111            
  503 |  1 asmdemo.s    239 | Comment     | 11 |         |    0 | 00/0F14               | *<sym>
  504 |  1 asmdemo.s    240 | Data        | 11 |         |    7 | 00/0F14 : 00 00 00 00 | tableOne         ds       7                    
      |                     |             |    |         |      |           00 00 00    |
  505 |  1 asmdemo.s    241 | Comment     | 11 |         |    0 | 00/0F1B               | *<sym>
  506 |  1 asmdemo.s    242 | Data        | 11 |         |    1 | 00/0F1B : 00          | bitmapwidth      ds       1                    
  507 |  1 asmdemo.s    243 | Comment     | 11 |         |    0 | 00/0F1C               | *<sym>
  508 |  1 asmdemo.s    244 | Data        | 11 |         |    1 | 00/0F1C : 01          | flipflop         db       1                    ; used to double pixels horizontally
  509 |  1 asmdemo.s    245 | Comment     | 11 |         |    0 | 00/0F1D               | *<sym>
  510 |  1 asmdemo.s    246 | Data        | 11 |         |    1 | 00/0F1D : 00          | quitflag         ds       1                    ; to ckeck if user press escape key
  511 |  1 asmdemo.s    247 | Empty       | 11 |         |    0 | 00/0F1E               |                                                
  512 |  1 asmdemo.s    248 | Comment     | 11 |         |    0 | 00/0F1E               | ******** line grafport ********
  513 |  1 asmdemo.s    249 | Comment     | 11 |         |    0 | 00/0F1E               | *<m2>
  514 |  1 asmdemo.s    250 | Comment     | 11 |         |    0 | 00/0F1E               | *<sym>
  515 |  1 asmdemo.s    251 | Data        | 11 |         |    4 | 00/0F1E : 00 00 00 00 | imageLine        dw       0,0                  ; view location on current port
  516 |  1 asmdemo.s    252 | Comment     | 11 |         |    0 | 00/0F22               | *<sym>
  517 |  1 asmdemo.s    253 | Data        | 11 |         |    2 | 00/0F22 : 2E 0F       | imfbits          dw       outbuff              ; bitmap pointer
  518 |  1 asmdemo.s    254 | Comment     | 11 |         |    0 | 00/0F24               | *<sym>
  519 |  1 asmdemo.s    255 | Data        | 11 |         |    2 | 00/0F24 : 00 00       | imgw             dw       0                    ; width of bitmap
  520 |  1 asmdemo.s    256 | Comment     | 11 |         |    0 | 00/0F26               | *<sym>
  521 |  1 asmdemo.s    257 | Data        | 11 |         |    8 | 00/0F26 : 00 00 00 00 | clipr            dw       0,0,0,0              ; clip rectangle
      |                     |             |    |         |      |           00 00 00 00 |
  522 |  1 asmdemo.s    258 | Comment     | 11 |         |    0 | 00/0F2E               | *<m1>
  523 |  1 asmdemo.s    259 | Comment     | 11 |         |    0 | 00/0F2E               | *<sym>
  524 |  1 asmdemo.s    260 | Data        | 11 |         |   80 | 00/0F2E : 00 00 00 00 | outbuff          ds       80                   
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
  525 |  1 asmdemo.s    261 | Comment     | 11 |         |    0 | 00/0F7E               | *<sym>
  526 |  1 asmdemo.s    262 | Data        | 11 |         |    1 | 00/0F7E : 01          | carryf           db       1                    
  527 |  1 asmdemo.s    263 | Comment     | 11 |         |    0 | 00/0F7F               | *<sym>
  528 |  1 asmdemo.s    264 | Data        | 11 |         |    1 | 00/0F7F : 01          | inverse          db       1                    
  529 |  1 asmdemo.s    265 | Empty       | 11 |         |    0 | 00/0F80               |                                                
  530 |  1 asmdemo.s    266 | Comment     | 11 |         |    0 | 00/0F80               | *<sym>
  531 |  1 asmdemo.s    267 | Empty       | 11 |         |    0 | 00/0F80               | Doimg                                          
  532 |  1 asmdemo.s    268 | Comment     | 11 |         |    0 | 00/0F80               | ***** init *****
  533 |  1 asmdemo.s    269 | Empty       | 11 |         |    0 | 00/0F80               |                                                
  534 |  1 asmdemo.s    270 | Code        | 11 |         |    3 | 00/0F80 : 20 3C 14    |                  jsr      clearbuffer          ; clear line buffer
  535 |  1 asmdemo.s    271 | Empty       | 11 |         |    0 | 00/0F83               |                                                
  536 |  1 asmdemo.s    272 | Code        | 11 |         |    2 | 00/0F83 : A9 00       |                  lda      #0                   ; init input line counter
  537 |  1 asmdemo.s    273 | Code        | 11 |         |    3 | 00/0F85 : 8D 06 0F    |                  sta      lineCnt              
  538 |  1 asmdemo.s    274 | Code        | 11 |         |    3 | 00/0F88 : 8D 08 0F    |                  sta      inputBitCnt          ; init input bit counter
  539 |  1 asmdemo.s    275 | Code        | 11 |         |    3 | 00/0F8B : 8D 09 0F    |                  sta      inputBitCnt+1        
  540 |  1 asmdemo.s    276 | Code        | 11 |         |    3 | 00/0F8E : 8D 0C 0F    |                  sta      inputByteCnt         ; init # of byte in a row
  541 |  1 asmdemo.s    277 | Empty       | 11 |         |    0 | 00/0F91               |                                                
  542 |  1 asmdemo.s    278 | Code        | 11 |         |    3 | 00/0F91 : 8D 0A 0F    |                  sta      outputBitPos         ; init output bit counter
  543 |  1 asmdemo.s    279 | Empty       | 11 |         |    0 | 00/0F94               |                                                
  544 |  1 asmdemo.s    280 | Code        | 11 |         |    3 | 00/0F94 : AD D8 0E    |                  lda      imgdata              ; init pointer to image data (input)
  545 |  1 asmdemo.s    281 | Code        | 11 |         |    3 | 00/0F97 : 8D E1 0F    |                  sta      lineloop+1           
  546 |  1 asmdemo.s    282 | Code        | 11 |         |    3 | 00/0F9A : AD D9 0E    |                  lda      imgdata+1            
  547 |  1 asmdemo.s    283 | Code        | 11 |         |    3 | 00/0F9D : 8D E2 0F    |                  sta      lineloop+2           
  548 |  1 asmdemo.s    284 | Empty       | 11 |         |    0 | 00/0FA0               |                                                
  549 |  1 asmdemo.s    285 | Code        | 11 |         |    2 | 00/0FA0 : A9 2E       |                  lda      #<outbuff            ; init pointer to ouput (buffer)
  550 |  1 asmdemo.s    286 | Code        | 11 |         |    3 | 00/0FA2 : 8D 06 10    |                  sta      getoutbyte+1         
  551 |  1 asmdemo.s    287 | Code        | 11 |         |    2 | 00/0FA5 : A9 0F       |                  lda      #>outbuff            
  552 |  1 asmdemo.s    288 | Code        | 11 |         |    3 | 00/0FA7 : 8D 07 10    |                  sta      getoutbyte+2         
  553 |  1 asmdemo.s    289 | Empty       | 11 |         |    0 | 00/0FAA               |                                                
  554 |  1 asmdemo.s    290 | Code        | 11 |         |    2 | 00/0FAA : A2 00       |                  ldx      #0                   ; init tableOne (= eor table Zero)
  555 |  1 asmdemo.s    291 | Comment     | 11 |         |    0 | 00/0FAC               | *<sym> 
  556 |  1 asmdemo.s    292 | Code        | 11 |         |    3 | 00/0FAC : BD 0D 0F    | tabloop          lda      tableZero,x          
  557 |  1 asmdemo.s    293 | Code        | 11 |         |    2 | 00/0FAF : 49 FF       |                  eor      #$FF                 
  558 |  1 asmdemo.s    294 | Code        | 11 |         |    3 | 00/0FB1 : 9D 14 0F    |                  sta      tableOne,x           
  559 |  1 asmdemo.s    295 | Code        | 11 |         |    1 | 00/0FB4 : E8          |                  inx                           
  560 |  1 asmdemo.s    296 | Code        | 11 |         |    2 | 00/0FB5 : E0 07       |                  cpx      #7                   
  561 |  1 asmdemo.s    297 | Code        | 11 |         |    2 | 00/0FB7 : D0 F3       |                  bne      tabloop              
  562 |  1 asmdemo.s    298 | Comment     | 11 |         |    0 | 00/0FB9               | *<sym>
  563 |  1 asmdemo.s    299 | Empty       | 11 |         |    0 | 00/0FB9               | getwidth                                       
  564 |  1 asmdemo.s    300 | Code        | 11 |         |    3 | 00/0FB9 : AD D2 0E    |                  lda      hdef                 
  565 |  1 asmdemo.s    301 | Code        | 11 |         |    3 | 00/0FBC : AE D3 0E    |                  ldx      hdef+1               
  566 |  1 asmdemo.s    302 | Code        | 11 |         |    3 | 00/0FBF : 20 60 14    |                  jsr      computeBytes         
  567 |  1 asmdemo.s    303 | Code        | 11 |         |    3 | 00/0FC2 : 8E 1B 0F    |                  stx      bitmapwidth          
  568 |  1 asmdemo.s    304 | Comment     | 11 |         |    0 | 00/0FC5               | *<sym>
  569 |  1 asmdemo.s    305 | Empty       | 11 |         |    0 | 00/0FC5               | setline                                        
  570 |  1 asmdemo.s    306 | Code        | 11 |         |    3 | 00/0FC5 : AD D4 0E    |                  lda      vdef                 
  571 |  1 asmdemo.s    307 | Code        | 11 |         |    3 | 00/0FC8 : 8D 20 0F    |                  sta      imageLine+2          ; set vertical position of lower image line
  572 |  1 asmdemo.s    308 | Empty       | 11 |         |    0 | 00/0FCB               |                                                
  573 |  1 asmdemo.s    309 | Code        | 11 |         |    3 | 00/0FCB : AD 1B 0F    |                  lda      bitmapwidth          
  574 |  1 asmdemo.s    310 | Code        | 11 |         |    1 | 00/0FCE : 0A          |                  asl                           
  575 |  1 asmdemo.s    311 | Code        | 11 |         |    3 | 00/0FCF : 8D 24 0F    |                  sta      imgw                 ; set image width in byte
  576 |  1 asmdemo.s    312 | Empty       | 11 |         |    0 | 00/0FD2               |                                                
  577 |  1 asmdemo.s    313 | Code        | 11 |         |    3 | 00/0FD2 : AD D2 0E    |                  lda      hdef                 ; set clip rectangle in pixels
  578 |  1 asmdemo.s    314 | Code        | 11 |         |    1 | 00/0FD5 : 0A          |                  asl                           
  579 |  1 asmdemo.s    315 | Code        | 11 |         |    3 | 00/0FD6 : 8D 2A 0F    |                  sta      clipr+4              
  580 |  1 asmdemo.s    316 | Code        | 11 |         |    3 | 00/0FD9 : AD D3 0E    |                  lda      hdef+1               
  581 |  1 asmdemo.s    317 | Code        | 11 |         |    1 | 00/0FDC : 2A          |                  rol                           
  582 |  1 asmdemo.s    318 | Code        | 11 |         |    3 | 00/0FDD : 8D 2B 0F    |                  sta      clipr+5              
  583 |  1 asmdemo.s    319 | Empty       | 11 |         |    0 | 00/0FE0               |                                                
  584 |  1 asmdemo.s    320 | Comment     | 11 |         |    0 | 00/0FE0               | ***** process data *****
  585 |  1 asmdemo.s    321 | Comment     | 11 |         |    0 | 00/0FE0               | * outer loop (on all bytes of an image line)
  586 |  1 asmdemo.s    322 | Comment     | 11 |         |    0 | 00/0FE0               | *<sym>   
  587 |  1 asmdemo.s    323 | Empty       | 11 |         |    0 | 00/0FE0               | lineloop                                       ; get a new input byte
  588 |  1 asmdemo.s    324 | Code        | 11 |         |    3 | 00/0FE0 : AD FF FF    |                  lda      $ffff                ; self modified
  589 |  1 asmdemo.s    325 | Code        | 11 |         |    1 | 00/0FE3 : 48          |                  pha                           
  590 |  1 asmdemo.s    326 | Code        | 11 |         |    3 | 00/0FE4 : AD 7F 0F    |                  lda      inverse              
  591 |  1 asmdemo.s    327 | Code        | 11 |         |    2 | 00/0FE7 : F0 06       |                  beq      normalvideo          
  592 |  1 asmdemo.s    328 | Code        | 11 |         |    1 | 00/0FE9 : 68          |                  pla                           
  593 |  1 asmdemo.s    329 | Code        | 11 |         |    2 | 00/0FEA : 49 FF       |                  eor      #$ff                 
  594 |  1 asmdemo.s    330 | Code        | 11 |         |    3 | 00/0FEC : 4C F0 0F    |                  jmp      inversevideo         
  595 |  1 asmdemo.s    331 | Comment     | 11 |         |    0 | 00/0FEF               | *<sym>
  596 |  1 asmdemo.s    332 | Empty       | 11 |         |    0 | 00/0FEF               | normalvideo                                    
  597 |  1 asmdemo.s    333 | Code        | 11 |         |    1 | 00/0FEF : 68          |                  pla                           
  598 |  1 asmdemo.s    334 | Comment     | 11 |         |    0 | 00/0FF0               | *<sym>
  599 |  1 asmdemo.s    335 | Empty       | 11 |         |    0 | 00/0FF0               | inversevideo                                   
  600 |  1 asmdemo.s    336 | Code        | 11 |         |    3 | 00/0FF0 : 8D 0B 0F    |                  sta      inbyte               ; save it
  601 |  1 asmdemo.s    337 | Code        | 11 |         |    3 | 00/0FF3 : EE 0C 0F    |                  inc      inputByteCnt         ; update counter
  602 |  1 asmdemo.s    338 | Empty       | 11 |         |    0 | 00/0FF6               |                                                
  603 |  1 asmdemo.s    339 | Comment     | 11 |         |    0 | 00/0FF6               | * inner loop on pixels (= input bits)
  604 |  1 asmdemo.s    340 | Comment     | 11 |         |    0 | 00/0FF6               | *<sym>
  605 |  1 asmdemo.s    341 | Empty       | 11 |         |    0 | 00/0FF6               | pixelloop                                      
  606 |  1 asmdemo.s    342 | Code        | 11 |         |    3 | 00/0FF6 : AD 0B 0F    |                  lda      inbyte               ; reload input byte
  607 |  1 asmdemo.s    343 | Code        | 11 |         |    1 | 00/0FF9 : 0A          |                  asl                           ; get a bit
  608 |  1 asmdemo.s    344 | Code        | 11 |         |    3 | 00/0FFA : 8D 0B 0F    |                  sta      inbyte               ; save shifted input byte
  609 |  1 asmdemo.s    345 | Empty       | 11 |         |    0 | 00/0FFD               |                                                
  610 |  1 asmdemo.s    346 | Code        | 11 |         |    3 | 00/0FFD : EE 08 0F    |                  inc      inputBitCnt          
  611 |  1 asmdemo.s    347 | Code        | 11 |         |    2 | 00/1000 : D0 03       |                  bne      getoutbyte           
  612 |  1 asmdemo.s    348 | Code        | 11 |         |    3 | 00/1002 : EE 09 0F    |                  inc      inputBitCnt+1        
  613 |  1 asmdemo.s    349 | Comment     | 11 |         |    0 | 00/1005               | *<sym>        
  614 |  1 asmdemo.s    350 | Empty       | 11 |         |    0 | 00/1005               | getoutbyte                                     
  615 |  1 asmdemo.s    351 | Code        | 11 |         |    3 | 00/1005 : AD FF FF    |                  lda      $ffff                ; get ouput byte
  616 |  1 asmdemo.s    352 | Code        | 11 |         |    3 | 00/1008 : AE 0A 0F    |                  ldx      outputBitPos         
  617 |  1 asmdemo.s    353 | Code        | 11 |         |    2 | 00/100B : B0 0B       |                  bcs      pokeOne              ; bit coming from input byte = 1 ?
  618 |  1 asmdemo.s    354 | Comment     | 11 |         |    0 | 00/100D               | *<sym>
  619 |  1 asmdemo.s    355 | Empty       | 11 |         |    0 | 00/100D               | pokeZero                                       ; no : set this bit to 0 in output bit
  620 |  1 asmdemo.s    356 | Code        | 11 |         |    3 | 00/100D : 3D 0D 0F    |                  and      tableZero,x          ; A : ouput byte, and it with table value
  621 |  1 asmdemo.s    357 | Code        | 11 |         |    2 | 00/1010 : A0 00       |                  ldy      #0                   
  622 |  1 asmdemo.s    358 | Code        | 11 |         |    3 | 00/1012 : 8C 7E 0F    |                  sty      carryf               ; save carry value in carryf var
  623 |  1 asmdemo.s    359 | Code        | 11 |         |    3 | 00/1015 : 4C 20 10    |                  jmp      pokeresult           
  624 |  1 asmdemo.s    360 | Comment     | 11 |         |    0 | 00/1018               | *<sym>
  625 |  1 asmdemo.s    361 | Empty       | 11 |         |    0 | 00/1018               | pokeOne                                        ; yes : set this bit to 1 in output bit
  626 |  1 asmdemo.s    362 | Code        | 11 |         |    2 | 00/1018 : A0 01       |                  ldy      #1                   
  627 |  1 asmdemo.s    363 | Code        | 11 |         |    3 | 00/101A : 8C 7E 0F    |                  sty      carryf               ; save carry value in carryf var
  628 |  1 asmdemo.s    364 | Code        | 11 |         |    3 | 00/101D : 1D 14 0F    |                  ora      tableOne,x           
  629 |  1 asmdemo.s    365 | Comment     | 11 |         |    0 | 00/1020               | *<sym>                                
  630 |  1 asmdemo.s    366 | Empty       | 11 |         |    0 | 00/1020               | pokeresult                                     ; save output byte
  631 |  1 asmdemo.s    367 | Code        | 11 |         |    3 | 00/1020 : AE 06 10    |                  ldx      getoutbyte+1         ; get output address
  632 |  1 asmdemo.s    368 | Code        | 11 |         |    2 | 00/1023 : 86 06       |                  stx      {$06}                
  633 |  1 asmdemo.s    369 | Code        | 11 |         |    3 | 00/1025 : AE 07 10    |                  ldx      getoutbyte+2         
  634 |  1 asmdemo.s    370 | Code        | 11 |         |    2 | 00/1028 : 86 07       |                  stx      {$06}+1              
  635 |  1 asmdemo.s    371 | Code        | 11 |         |    2 | 00/102A : A0 00       |                  ldy      #0                   
  636 |  1 asmdemo.s    372 | Code        | 11 |         |    2 | 00/102C : 91 06       |                  sta      ({$06}),y            ; poke output byte in its original place
  637 |  1 asmdemo.s    373 | Comment     | 11 |         |    0 | 00/102E               | *<sym> 
  638 |  1 asmdemo.s    374 | Code        | 11 |         |    3 | 00/102E : EE 0A 0F    | updateoutput     inc      outputBitPos         ; get bit pos (output)
  639 |  1 asmdemo.s    375 | Code        | 11 |         |    3 | 00/1031 : AD 0A 0F    |                  lda      outputBitPos         
  640 |  1 asmdemo.s    376 | Code        | 11 |         |    2 | 00/1034 : C9 07       |                  cmp      #7                   ; = 7 ?
  641 |  1 asmdemo.s    377 | Code        | 11 |         |    2 | 00/1036 : D0 08       |                  bne      ozunid_4             
  642 |  1 asmdemo.s    378 | Code        | 11 |         |    2 | 00/1038 : A9 00       |                  lda      #0                   
  643 |  1 asmdemo.s    379 | Code        | 11 |         |    3 | 00/103A : 8D 0A 0F    |                  sta      outputBitPos         ; yes : reset pos
  644 |  1 asmdemo.s    380 | Code        | 11 |         |    3 | 00/103D : 20 CE 10    |                  jsr      nextoutput           ; inc pointer
  645 |  1 asmdemo.s    381 | Empty       | 11 |         |    0 | 00/1040               | ozunid_4                                       
  646 |  1 asmdemo.s    382 | Code        | 11 |         |    1 | 00/1040 : 18          |                  clc                           
  647 |  1 asmdemo.s    383 | Code        | 11 |         |    3 | 00/1041 : AC 7E 0F    |                  ldy      carryf               
  648 |  1 asmdemo.s    384 | Code        | 11 |         |    2 | 00/1044 : F0 01       |                  beq      _2                   
  649 |  1 asmdemo.s    385 | Code        | 11 |         |    1 | 00/1046 : 38          |                  sec                           
  650 |  1 asmdemo.s    386 | Code        | 11 |         |    3 | 00/1047 : AD 1C 0F    | _2               lda      flipflop             ; each pixel horizontally must be draw twice (and only twice)
  651 |  1 asmdemo.s    387 | Code        | 11 |         |    2 | 00/104A : 49 01       |                  eor      #1                   ; test flipflop
  652 |  1 asmdemo.s    388 | Code        | 11 |         |    3 | 00/104C : 8D 1C 0F    |                  sta      flipflop             ; invvert it
  653 |  1 asmdemo.s    389 | Code        | 11 |         |    2 | 00/104F : F0 B4       |                  beq      getoutbyte           ; if 0 : draw same pixel once again
  654 |  1 asmdemo.s    390 | Empty       | 11 |         |    0 | 00/1051               |                                                
  655 |  1 asmdemo.s    391 | Code        | 11 |         |    3 | 00/1051 : AD 08 0F    |                  lda      inputBitCnt          ; all pixels done for this line ?
  656 |  1 asmdemo.s    392 | Code        | 11 |         |    3 | 00/1054 : CD D2 0E    |                  cmp      hdef                 ;
  657 |  1 asmdemo.s    393 | Code        | 11 |         |    2 | 00/1057 : D0 54       |                  bne      nextpixel            ; no : loop to process next pixel
  658 |  1 asmdemo.s    394 | Code        | 11 |         |    3 | 00/1059 : AD 09 0F    |                  lda      inputBitCnt+1        
  659 |  1 asmdemo.s    395 | Code        | 11 |         |    3 | 00/105C : CD D3 0E    |                  cmp      hdef+1               
  660 |  1 asmdemo.s    396 | Code        | 11 |         |    2 | 00/105F : D0 4C       |                  bne      nextpixel            
  661 |  1 asmdemo.s    397 | Empty       | 11 |         |    0 | 00/1061               |                                                
  662 |  1 asmdemo.s    398 | Comment     | 11 |         |    0 | 00/1061               | *<sym>  
  663 |  1 asmdemo.s    399 | Empty       | 11 |         |    0 | 00/1061               | nextline                                       ; yes : paint current line and prepare next one
  664 |  1 asmdemo.s    400 | Code        | 11 |         |    3 | 00/1061 : 20 D7 10    |                  jsr      drawImgLine          ; a line has been calcultated, paint it !!!
  665 |  1 asmdemo.s    401 | Empty       | 11 |         |    0 | 00/1064               |                                                
  666 |  1 asmdemo.s    402 | Code        | 11 |         |    2 | 00/1064 : A9 2E       |                  lda      #<outbuff            ; reset pointer to beginning of output buffer
  667 |  1 asmdemo.s    403 | Code        | 11 |         |    3 | 00/1066 : 8D 06 10    |                  sta      getoutbyte+1         
  668 |  1 asmdemo.s    404 | Code        | 11 |         |    2 | 00/1069 : A9 0F       |                  lda      #>outbuff            
  669 |  1 asmdemo.s    405 | Code        | 11 |         |    3 | 00/106B : 8D 07 10    |                  sta      getoutbyte+2         
  670 |  1 asmdemo.s    406 | Code        | 11 |         |    3 | 00/106E : 20 3C 14    |                  jsr      clearbuffer          ; zero ouput buffer
  671 |  1 asmdemo.s    407 | Comment     | 11 |         |    0 | 00/1071               | *<sym> 
  672 |  1 asmdemo.s    408 | Empty       | 11 |         |    0 | 00/1071               | loopadjust                                     ; in an image line, # of bytes must be divisible by 4
  673 |  1 asmdemo.s    409 | Comment     | 11 |         |    0 | 00/1071               |                                         ; if not, padded with zeros to make it divisible by 4
  674 |  1 asmdemo.s    410 | Comment     | 11 |         |    0 | 00/1071               |                                         ; so we need to jump over these useless bytes.
  675 |  1 asmdemo.s    411 | Code        | 11 |         |    3 | 00/1071 : AD 0C 0F    |                  lda      inputByteCnt         ; get # of byte done in previous image line
  676 |  1 asmdemo.s    412 | Code        | 11 |         |    2 | 00/1074 : 29 03       |                  and      #3                   ; if this number is divisible by 4
  677 |  1 asmdemo.s    413 | Code        | 11 |         |    2 | 00/1076 : F0 0B       |                  beq      div4ok               ; go on
  678 |  1 asmdemo.s    414 | Code        | 11 |         |    3 | 00/1078 : 20 C5 10    |                  jsr      nextinput            ; else inc pointer to input data
  679 |  1 asmdemo.s    415 | Code        | 11 |         |    3 | 00/107B : EE 0C 0F    |                  inc      inputByteCnt         ; inc counter
  680 |  1 asmdemo.s    416 | Code        | 11 |         |    3 | 00/107E : 4C 71 10    |                  jmp      loopadjust           ; and loop until inputByteCnt is divisible by 4
  681 |  1 asmdemo.s    417 | Code        | 11 |         |    2 | 00/1081 : D0 00       |                  bne      div4ok               
  682 |  1 asmdemo.s    418 | Comment     | 11 |         |    0 | 00/1083               | *<sym> 
  683 |  1 asmdemo.s    419 | Empty       | 11 |         |    0 | 00/1083               | div4ok                                         
  684 |  1 asmdemo.s    420 | Code        | 11 |         |    2 | 00/1083 : A9 00       |                  lda      #0                   
  685 |  1 asmdemo.s    421 | Code        | 11 |         |    3 | 00/1085 : 8D 0C 0F    |                  sta      inputByteCnt         ; init byte counter for a line
  686 |  1 asmdemo.s    422 | Code        | 11 |         |    3 | 00/1088 : 20 C5 10    |                  jsr      nextinput            ; inc pointer to input byte
  687 |  1 asmdemo.s    423 | Code        | 11 |         |    2 | 00/108B : A9 00       |                  lda      #0                   
  688 |  1 asmdemo.s    424 | Code        | 11 |         |    3 | 00/108D : 8D 07 0F    |                  sta      inputBitPos          ; reset bit pos for input
  689 |  1 asmdemo.s    425 | Code        | 11 |         |    3 | 00/1090 : 8D 08 0F    |                  sta      inputBitCnt          ; reset input bit counter
  690 |  1 asmdemo.s    426 | Code        | 11 |         |    3 | 00/1093 : 8D 09 0F    |                  sta      inputBitCnt+1        
  691 |  1 asmdemo.s    427 | Code        | 11 |         |    3 | 00/1096 : 8D 0A 0F    |                  sta      outputBitPos         ; reset output byte position
  692 |  1 asmdemo.s    428 | Empty       | 11 |         |    0 | 00/1099               |                                                
  693 |  1 asmdemo.s    429 | Code        | 11 |         |    2 | 00/1099 : A9 01       |                  lda      #1                   
  694 |  1 asmdemo.s    430 | Code        | 11 |         |    3 | 00/109B : 8D 1C 0F    |                  sta      flipflop             ; reset toggle to double pixel width
  695 |  1 asmdemo.s    431 | Empty       | 11 |         |    0 | 00/109E               |                                                
  696 |  1 asmdemo.s    432 | Code        | 11 |         |    3 | 00/109E : EE 06 0F    |                  inc      lineCnt              ; inc line counter
  697 |  1 asmdemo.s    433 | Code        | 11 |         |    3 | 00/10A1 : AD 06 0F    |                  lda      lineCnt              
  698 |  1 asmdemo.s    434 | Code        | 11 |         |    3 | 00/10A4 : CD D4 0E    |                  cmp      vdef                 ; all lines done ?
  699 |  1 asmdemo.s    435 | Code        | 11 |         |    2 | 00/10A7 : F0 03       |                  beq      endimage             ; yes : the image is finished !
  700 |  1 asmdemo.s    436 | Code        | 11 |         |    3 | 00/10A9 : 4C E0 0F    |                  jmp      lineloop             ; no : loop for another image line
  701 |  1 asmdemo.s    437 | Comment     | 11 |         |    0 | 00/10AC               | *<sym>  
  702 |  1 asmdemo.s    438 | Empty       | 11 |         |    0 | 00/10AC               | endimage                                       
  703 |  1 asmdemo.s    439 | Code        | 11 |         |    1 | 00/10AC : 60          |                  rts                           ; END !!!
  704 |  1 asmdemo.s    440 | Comment     | 11 |         |    0 | 00/10AD               | *<sym>         
  705 |  1 asmdemo.s    441 | Empty       | 11 |         |    0 | 00/10AD               | nextpixel                                      ; no : other pixels to go on current line
  706 |  1 asmdemo.s    442 | Code        | 11 |         |    3 | 00/10AD : EE 07 0F    |                  inc      inputBitPos          ; get bit pos (input)
  707 |  1 asmdemo.s    443 | Code        | 11 |         |    3 | 00/10B0 : AD 07 0F    |                  lda      inputBitPos          
  708 |  1 asmdemo.s    444 | Code        | 11 |         |    2 | 00/10B3 : C9 08       |                  cmp      #8                   ; = 8 ?
  709 |  1 asmdemo.s    445 | Code        | 11 |         |    2 | 00/10B5 : F0 03       |                  beq      nextbyte             
  710 |  1 asmdemo.s    446 | Code        | 11 |         |    3 | 00/10B7 : 4C F6 0F    |                  jmp      pixelloop            
  711 |  1 asmdemo.s    447 | Comment     | 11 |         |    0 | 00/10BA               | *<sym>  
  712 |  1 asmdemo.s    448 | Empty       | 11 |         |    0 | 00/10BA               | nextbyte                                       
  713 |  1 asmdemo.s    449 | Code        | 11 |         |    2 | 00/10BA : A9 00       |                  lda      #0                   ; yes : adjust vars
  714 |  1 asmdemo.s    450 | Code        | 11 |         |    3 | 00/10BC : 8D 07 0F    |                  sta      inputBitPos          ; reset input bit position pos to 0
  715 |  1 asmdemo.s    451 | Code        | 11 |         |    3 | 00/10BF : 20 C5 10    |                  jsr      nextinput            ; inc pointer to image data
  716 |  1 asmdemo.s    452 | Code        | 11 |         |    3 | 00/10C2 : 4C E0 0F    |                  jmp      lineloop             ; loop to get next input byte
  717 |  1 asmdemo.s    453 | Comment     | 11 |         |    0 | 00/10C5               | *<sym>                                 
  718 |  1 asmdemo.s    454 | Empty       | 11 |         |    0 | 00/10C5               | nextinput                                      
  719 |  1 asmdemo.s    455 | Code        | 11 |         |    3 | 00/10C5 : EE E1 0F    |                  inc      lineloop+1           
  720 |  1 asmdemo.s    456 | Code        | 11 |         |    2 | 00/10C8 : D0 03       |                  bne      nextinputO           
  721 |  1 asmdemo.s    457 | Code        | 11 |         |    3 | 00/10CA : EE E2 0F    |                  inc      lineloop+2           
  722 |  1 asmdemo.s    458 | Comment     | 11 |         |    0 | 00/10CD               | *<sym>
  723 |  1 asmdemo.s    459 | Code        | 11 |         |    1 | 00/10CD : 60          | nextinputO       rts                           
  724 |  1 asmdemo.s    460 | Empty       | 11 |         |    0 | 00/10CE               |                                                
  725 |  1 asmdemo.s    461 | Comment     | 11 |         |    0 | 00/10CE               | *<sym>
  726 |  1 asmdemo.s    462 | Empty       | 11 |         |    0 | 00/10CE               | nextoutput                                     
  727 |  1 asmdemo.s    463 | Code        | 11 |         |    3 | 00/10CE : EE 06 10    |                  inc      getoutbyte+1         
  728 |  1 asmdemo.s    464 | Code        | 11 |         |    2 | 00/10D1 : D0 03       |                  bne      nextoutputO          
  729 |  1 asmdemo.s    465 | Code        | 11 |         |    3 | 00/10D3 : EE 07 10    |                  inc      getoutbyte+2         
  730 |  1 asmdemo.s    466 | Comment     | 11 |         |    0 | 00/10D6               | *<sym>
  731 |  1 asmdemo.s    467 | Code        | 11 |         |    1 | 00/10D6 : 60          | nextoutputO      rts                           
  732 |  1 asmdemo.s    468 | Empty       | 11 |         |    0 | 00/10D7               |                                                
  733 |  1 asmdemo.s    469 | Comment     | 11 |         |    0 | 00/10D7               | *<sym>
  734 |  1 asmdemo.s    470 | Empty       | 11 |         |    0 | 00/10D7               | drawImgLine                                    
  735 |  1 asmdemo.s    471 | Macro       | 11 |         |    0 | 00/10D7               |                  GP_call  {{{{{{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1};imageLine; dram a line of the image
  736 |  1 asmdemo.s    471 | Code        | 11 |         |    3 | 00/10D7 : 20 00 40    |                  jsr      {$4000}              ; graphic primitives only entry point
  737 |  1 asmdemo.s    471 | Data        | 11 |         |    1 | 00/10DA : 14          |                  dfb      {{{{{{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}; command ID (1 byte)
  738 |  1 asmdemo.s    471 | Data        | 11 |         |    2 | 00/10DB : 1E 0F       |                  da       imageLine            ; address of parameter(s) (2 bytes), 0 if no paramter
  739 |  1 asmdemo.s    472 | Code        | 11 |         |    3 | 00/10DD : CE 20 0F    |                  dec      imageLine+2          
  740 |  1 asmdemo.s    473 | Code        | 11 |         |    1 | 00/10E0 : 60          |                  rts                           
  741 |  1 asmdemo.s    474 | Comment     | 11 |         |    0 | 00/10E1               | *<syme>
  742 |  1 asmdemo.s    475 | Equivalence | 11 |         |    0 | 00/10E1               | bmp              equ      $6000                ; image is supposed to be loaded at $6000
  743 |  1 asmdemo.s    476 | Empty       | 11 |         |    0 | 00/10E1               |                                                
  744 |  1 asmdemo.s    477 | Comment     | 11 |         |    0 | 00/10E1               | *<bp>
  745 |  1 asmdemo.s    478 | Comment     | 11 |         |    0 | 00/10E1               | *<sym>
  746 |  1 asmdemo.s    479 | Empty       | 11 |         |    0 | 00/10E1               | DoKey                                          ; test keys
  747 |  1 asmdemo.s    480 | Code        | 11 |         |    2 | 00/10E1 : C9 E9       |                  cmp      #"i"                 ; if i ou I : negate image
  748 |  1 asmdemo.s    481 | Code        | 11 |         |    2 | 00/10E3 : F0 1B       |                  beq      doInverse            
  749 |  1 asmdemo.s    482 | Code        | 11 |         |    2 | 00/10E5 : C9 C9       |                  cmp      #"I"                 
  750 |  1 asmdemo.s    483 | Code        | 11 |         |    2 | 00/10E7 : F0 17       |                  beq      doInverse            
  751 |  1 asmdemo.s    484 | Comment     | 11 |         |    0 | 00/10E9               | *<sym>
  752 |  1 asmdemo.s    485 | Code        | 11 |         |    2 | 00/10E9 : C9 9B       | nextkey          cmp      #$9B                 ; escape : exit
  753 |  1 asmdemo.s    486 | Code        | 11 |         |    2 | 00/10EB : F0 0D       |                  beq      exitDK               
  754 |  1 asmdemo.s    487 | Comment     | 11 |         |    0 | 00/10ED               |                 ;jsr clerscr
  755 |  1 asmdemo.s    488 | Empty       | 11 |         |    0 | 00/10ED               |                                                
  756 |  1 asmdemo.s    489 | Code        | 11 |         |    2 | 00/10ED : C9 E3       |                  cmp      #"c"                 ; c for clear
  757 |  1 asmdemo.s    490 | Code        | 11 |         |    2 | 00/10EF : F0 05       |                  beq      doclear              
  758 |  1 asmdemo.s    491 | Code        | 11 |         |    2 | 00/10F1 : C9 C3       |                  cmp      #"C"                 
  759 |  1 asmdemo.s    492 | Code        | 11 |         |    2 | 00/10F3 : F0 01       |                  beq      doclear              
  760 |  1 asmdemo.s    493 | Code        | 11 |         |    1 | 00/10F5 : 60          |                  rts                           ; none of these keys : do nothing
  761 |  1 asmdemo.s    494 | Comment     | 11 |         |    0 | 00/10F6               | *<sym>
  762 |  1 asmdemo.s    495 | Empty       | 11 |         |    0 | 00/10F6               | doclear                                        
  763 |  1 asmdemo.s    496 | Code        | 11 |         |    3 | 00/10F6 : 20 EC 13    |                  jsr      clerscr              ; call clear screen proc.
  764 |  1 asmdemo.s    497 | Code        | 11 |         |    1 | 00/10F9 : 60          |                  rts                           
  765 |  1 asmdemo.s    498 | Comment     | 11 |         |    0 | 00/10FA               | *<sym>
  766 |  1 asmdemo.s    499 | Code        | 11 |         |    2 | 00/10FA : A9 01       | exitDK           lda      #1                   ; escape : set quit flag
  767 |  1 asmdemo.s    500 | Code        | 11 |         |    3 | 00/10FC : 8D 1D 0F    |                  sta      quitflag             
  768 |  1 asmdemo.s    501 | Code        | 11 |         |    1 | 00/10FF : 60          |                  rts                           
  769 |  1 asmdemo.s    502 | Empty       | 11 |         |    0 | 00/1100               |                                                
  770 |  1 asmdemo.s    503 | Comment     | 11 |         |    0 | 00/1100               | *<sym>
  771 |  1 asmdemo.s    504 | Empty       | 11 |         |    0 | 00/1100               | doInverse                                      
  772 |  1 asmdemo.s    505 | Code        | 11 |         |    3 | 00/1100 : AD 7F 0F    |                  lda      inverse              
  773 |  1 asmdemo.s    506 | Code        | 11 |         |    2 | 00/1103 : 49 01       |                  eor      #$01                 
  774 |  1 asmdemo.s    507 | Code        | 11 |         |    3 | 00/1105 : 8D 7F 0F    |                  sta      inverse              
  775 |  1 asmdemo.s    508 | Code        | 11 |         |    3 | 00/1108 : 4C 18 0E    |                  jmp      startimage           
  776 |  1 asmdemo.s    509 | Empty       | 11 |         |    0 | 00/110B               |                                                
  777 |  1 asmdemo.s    510 | Comment     | 11 |         |    0 | 00/110B               | *
  778 |  1 asmdemo.s    511 | Comment     | 11 |         |    0 | 00/110B               | *
  779 |  1 asmdemo.s    512 | Comment     | 11 |         |    0 | 00/110B               | * DoPaint
  780 |  1 asmdemo.s    513 | Comment     | 11 |         |    0 | 00/110B               | *
  781 |  1 asmdemo.s    514 | Comment     | 11 |         |    0 | 00/110B               | *<sym>
  782 |  1 asmdemo.s    515 | Empty       | 11 |         |    0 | 00/110B               | DoPaint                                        
  783 |  1 asmdemo.s    516 | Macro       | 11 |         |    0 | 00/110B               |                  GP_call  {{{{{{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1};LineDHGR
  784 |  1 asmdemo.s    516 | Code        | 11 |         |    3 | 00/110B : 20 00 40    |                  jsr      {$4000}              ; graphic primitives only entry point
  785 |  1 asmdemo.s    516 | Data        | 11 |         |    1 | 00/110E : 14          |                  dfb      {{{{{{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}; command ID (1 byte)
  786 |  1 asmdemo.s    516 | Data        | 11 |         |    2 | 00/110F : 12 11       |                  da       LineDHGR             ; address of parameter(s) (2 bytes), 0 if no paramter
  787 |  1 asmdemo.s    517 | Code        | 11 |         |    1 | 00/1111 : 60          |                  rts                           
  788 |  1 asmdemo.s    518 | Empty       | 11 |         |    0 | 00/1112               |                                                
  789 |  1 asmdemo.s    519 | Data        | 11 |         |    4 | 00/1112 : 00 00 0A 00 | LineDHGR         dw       0,10                 ; view location on current port
  790 |  1 asmdemo.s    520 | Data        | 11 |         |    2 | 00/1116 : 22 11       |                  dw       LineBits             ; bitmap pointer
  791 |  1 asmdemo.s    521 | Data        | 11 |         |    2 | 00/1118 : 50 00       |                  dw       80                   ; width of bitmap
  792 |  1 asmdemo.s    522 | Data        | 11 |         |    8 | 00/111A : 00 00 00 00 |                  dw       0,0,560,0            ; clip rectangle
      |                     |             |    |         |      |           30 02 00 00 |
  793 |  1 asmdemo.s    523 | Empty       | 11 |         |    0 | 00/1122               |                                                
  794 |  1 asmdemo.s    524 | Empty       | 11 |         |    0 | 00/1122               | LineBits                                       
  795 |  1 asmdemo.s    525 | Data        | 11 |         |   80 | 00/1122 : FF FF FF FF |                  ds       80,$FF               
      |                     |             |    |         |      |           FF FF FF FF |
      |                     |             |    |         |      |           FF FF FF FF |
      |                     |             |    |         |      |           FF FF FF FF |
      |                     |             |    |         |      |           FF FF FF FF |
      |                     |             |    |         |      |           FF FF FF FF |
      |                     |             |    |         |      |           FF FF FF FF |
      |                     |             |    |         |      |           FF FF FF FF |
      |                     |             |    |         |      |           FF FF FF FF |
      |                     |             |    |         |      |           FF FF FF FF |
      |                     |             |    |         |      |           FF FF FF FF |
      |                     |             |    |         |      |           FF FF FF FF |
      |                     |             |    |         |      |           FF FF FF FF |
      |                     |             |    |         |      |           FF FF FF FF |
      |                     |             |    |         |      |           FF FF FF FF |
      |                     |             |    |         |      |           FF FF FF FF |
      |                     |             |    |         |      |           FF FF FF FF |
      |                     |             |    |         |      |           FF FF FF FF |
      |                     |             |    |         |      |           FF FF FF FF |
      |                     |             |    |         |      |           FF FF FF FF |
  796 |  1 asmdemo.s    526 | Empty       | 11 |         |    0 | 00/1172               |                                                
  797 |  1 asmdemo.s    527 | Comment     | 11 |         |    0 | 00/1172               | *<sym>
  798 |  1 asmdemo.s    528 | Empty       | 11 |         |    0 | 00/1172               | DoPaint2                                       
  799 |  1 asmdemo.s    529 | Code        | 11 |         |    2 | 00/1172 : A0 00       |                  ldy      #0                   
  800 |  1 asmdemo.s    530 | Empty       | 11 |         |    0 | 00/1174               | outter                                         
  801 |  1 asmdemo.s    531 | Code        | 11 |         |    1 | 00/1174 : 5A          |                  phy                           
  802 |  1 asmdemo.s    532 | Code        | 11 |         |    2 | 00/1175 : A2 00       |                  ldx      #0                   
  803 |  1 asmdemo.s    533 | Empty       | 11 |         |    0 | 00/1177               | godraw                                         
  804 |  1 asmdemo.s    534 | Code        | 11 |         |    1 | 00/1177 : DA          |                  phx                           
  805 |  1 asmdemo.s    535 | Macro       | 11 |         |    0 | 00/1178               |                  GP_call  {{{{{{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1};TestBits2
  806 |  1 asmdemo.s    535 | Code        | 11 |         |    3 | 00/1178 : 20 00 40    |                  jsr      {$4000}              ; graphic primitives only entry point
  807 |  1 asmdemo.s    535 | Data        | 11 |         |    1 | 00/117B : 14          |                  dfb      {{{{{{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}; command ID (1 byte)
  808 |  1 asmdemo.s    535 | Data        | 11 |         |    2 | 00/117C : 93 11       |                  da       TestBits2            ; address of parameter(s) (2 bytes), 0 if no paramter
  809 |  1 asmdemo.s    536 | Empty       | 11 |         |    0 | 00/117E               |                                                
  810 |  1 asmdemo.s    537 | Code        | 11 |         |    1 | 00/117E : FA          |                  plx                           
  811 |  1 asmdemo.s    538 | Code        | 11 |         |    3 | 00/117F : BD A3 11    |                  lda      DataBits,x           
  812 |  1 asmdemo.s    539 | Code        | 11 |         |    1 | 00/1182 : 38          |                  sec                           
  813 |  1 asmdemo.s    540 | Code        | 11 |         |    1 | 00/1183 : 2A          |                  rol                           
  814 |  1 asmdemo.s    541 | Code        | 11 |         |    3 | 00/1184 : 9D A3 11    |                  sta      DataBits,x           
  815 |  1 asmdemo.s    542 | Code        | 11 |         |    1 | 00/1187 : E8          |                  inx                           
  816 |  1 asmdemo.s    543 | Code        | 11 |         |    2 | 00/1188 : E0 1E       |                  cpx      #30                  
  817 |  1 asmdemo.s    544 | Code        | 11 |         |    2 | 00/118A : D0 EB       |                  bne      godraw               
  818 |  1 asmdemo.s    545 | Code        | 11 |         |    1 | 00/118C : 7A          |                  ply                           
  819 |  1 asmdemo.s    546 | Code        | 11 |         |    1 | 00/118D : C8          |                  iny                           
  820 |  1 asmdemo.s    547 | Code        | 11 |         |    2 | 00/118E : C0 07       |                  cpy      #7                   
  821 |  1 asmdemo.s    548 | Code        | 11 |         |    2 | 00/1190 : D0 E2       |                  bne      outter               
  822 |  1 asmdemo.s    549 | Code        | 11 |         |    1 | 00/1192 : 60          |                  rts                           
  823 |  1 asmdemo.s    550 | Empty       | 11 |         |    0 | 00/1193               |                                                
  824 |  1 asmdemo.s    551 | Data        | 11 |         |    4 | 00/1193 : 32 00 32 00 | TestBits2        dw       50,50                ; view location on current port
  825 |  1 asmdemo.s    552 | Data        | 11 |         |    2 | 00/1197 : A3 11       |                  dw       DataBits             ; bitmap pointer
  826 |  1 asmdemo.s    553 | Data        | 11 |         |    2 | 00/1199 : 03 00       |                  dw       3                    ; width of bitmap
  827 |  1 asmdemo.s    554 | Data        | 11 |         |    8 | 00/119B : 00 00 00 00 |                  dw       0,0,17,9             ; clip rectangle
      |                     |             |    |         |      |           11 00 09 00 |
  828 |  1 asmdemo.s    555 | Empty       | 11 |         |    0 | 00/11A3               |                                                
  829 |  1 asmdemo.s    556 | Data        | 11 |         |    3 | 00/11A3 : 00 00 00    | DataBits         dfb      $00,$00,$00          ; bitmap data
  830 |  1 asmdemo.s    557 | Data        | 11 |         |    3 | 00/11A6 : 00 00 00    |                  dfb      $00,$00,$00          
  831 |  1 asmdemo.s    558 | Data        | 11 |         |    3 | 00/11A9 : 00 00 00    |                  dfb      $00,$00,$00          
  832 |  1 asmdemo.s    559 | Data        | 11 |         |    3 | 00/11AC : 00 00 00    |                  dfb      $00,$00,$00          
  833 |  1 asmdemo.s    560 | Data        | 11 |         |    3 | 00/11AF : 00 00 00    |                  dfb      $00,$00,$00          
  834 |  1 asmdemo.s    561 | Data        | 11 |         |    3 | 00/11B2 : 00 00 00    |                  dfb      $00,$00,$00          
  835 |  1 asmdemo.s    562 | Data        | 11 |         |    3 | 00/11B5 : 00 00 00    |                  dfb      $00,$00,$00          
  836 |  1 asmdemo.s    563 | Data        | 11 |         |    3 | 00/11B8 : 00 00 00    |                  dfb      $00,$00,$00          
  837 |  1 asmdemo.s    564 | Data        | 11 |         |    3 | 00/11BB : 00 00 00    |                  dfb      $00,$00,$00          
  838 |  1 asmdemo.s    565 | Data        | 11 |         |    3 | 00/11BE : 00 00 00    |                  dfb      $00,$00,$00          
  839 |  1 asmdemo.s    566 | Empty       | 11 |         |    0 | 00/11C1               |                                                
  840 |  1 asmdemo.s    567 | Comment     | 11 |         |    0 | 00/11C1               | * Wait for keypress
  841 |  1 asmdemo.s    568 | Comment     | 11 |         |    0 | 00/11C1               | *
  842 |  1 asmdemo.s    569 | Comment     | 11 |         |    0 | 00/11C1               | *<sym>
  843 |  1 asmdemo.s    570 | Empty       | 11 |         |    0 | 00/11C1               | WaitForKeyPress                                
  844 |  1 asmdemo.s    571 | Code        | 11 |         |    3 | 00/11C1 : AD 00 C0    |                  lda      {$C000}              
  845 |  1 asmdemo.s    572 | Code        | 11 |         |    2 | 00/11C4 : 10 FB       |                  bpl      WaitForKeyPress      
  846 |  1 asmdemo.s    573 | Code        | 11 |         |    3 | 00/11C6 : 8D 10 C0    |                  sta      {$C010}              
  847 |  1 asmdemo.s    574 | Code        | 11 |         |    1 | 00/11C9 : 60          |                  rts                           
  848 |  1 asmdemo.s    575 | Comment     | 11 |         |    0 | 00/11CA               | *
  849 |  1 asmdemo.s    576 | Comment     | 11 |         |    0 | 00/11CA               | * ClearIt
  850 |  1 asmdemo.s    577 | Comment     | 11 |         |    0 | 00/11CA               | *
  851 |  1 asmdemo.s    578 | Empty       | 11 |         |    0 | 00/11CA               | ozunid_6                                       
  852 |  1 asmdemo.s    578 | Equivalence | 11 |         |    0 | 00/11CA               | ClearIt          equ      ozunid_6             ; fill port with black
  853 |  1 asmdemo.s    579 | Macro       | 11 |         |    0 | 00/11CA               |                  GP_call  {{{{{{{1}+1}+1}+1}+1}+1}+1};ModeCopy; pen + destination = pen
  854 |  1 asmdemo.s    579 | Code        | 11 |         |    3 | 00/11CA : 20 00 40    |                  jsr      {$4000}              ; graphic primitives only entry point
  855 |  1 asmdemo.s    579 | Data        | 11 |         |    1 | 00/11CD : 07          |                  dfb      {{{{{{{1}+1}+1}+1}+1}+1}+1}; command ID (1 byte)
  856 |  1 asmdemo.s    579 | Data        | 11 |         |    2 | 00/11CE : 48 12       |                  da       ModeCopy             ; address of parameter(s) (2 bytes), 0 if no paramter
  857 |  1 asmdemo.s    580 | Macro       | 11 |         |    0 | 00/11D0               |                  GP_call  {{{{{{{{1}+1}+1}+1}+1}+1}+1}+1};Black; black (0,0,...)
  858 |  1 asmdemo.s    580 | Code        | 11 |         |    3 | 00/11D0 : 20 00 40    |                  jsr      {$4000}              ; graphic primitives only entry point
  859 |  1 asmdemo.s    580 | Data        | 11 |         |    1 | 00/11D3 : 08          |                  dfb      {{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}; command ID (1 byte)
  860 |  1 asmdemo.s    580 | Data        | 11 |         |    2 | 00/11D4 : 6D 12       |                  da       Black                ; address of parameter(s) (2 bytes), 0 if no paramter
  861 |  1 asmdemo.s    581 | Macro       | 11 |         |    0 | 00/11D6               |                  GP_call  {{{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1};WowRect; paint very large rectangle in black
  862 |  1 asmdemo.s    581 | Code        | 11 |         |    3 | 00/11D6 : 20 00 40    |                  jsr      {$4000}              ; graphic primitives only entry point
  863 |  1 asmdemo.s    581 | Data        | 11 |         |    1 | 00/11D9 : 11          |                  dfb      {{{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}; command ID (1 byte)
  864 |  1 asmdemo.s    581 | Data        | 11 |         |    2 | 00/11DA : E3 11       |                  da       WowRect              ; address of parameter(s) (2 bytes), 0 if no paramter
  865 |  1 asmdemo.s    582 | Macro       | 11 |         |    0 | 00/11DC               |                  GP_call  {{{{{{{{1}+1}+1}+1}+1}+1}+1}+1};White; restore pattern to white (1,1,...)
  866 |  1 asmdemo.s    582 | Code        | 11 |         |    3 | 00/11DC : 20 00 40    |                  jsr      {$4000}              ; graphic primitives only entry point
  867 |  1 asmdemo.s    582 | Data        | 11 |         |    1 | 00/11DF : 08          |                  dfb      {{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}; command ID (1 byte)
  868 |  1 asmdemo.s    582 | Data        | 11 |         |    2 | 00/11E0 : 76 12       |                  da       White                ; address of parameter(s) (2 bytes), 0 if no paramter
  869 |  1 asmdemo.s    583 | Code        | 11 |         |    1 | 00/11E2 : 60          |                  rts                           
  870 |  1 asmdemo.s    584 | Data        | 11 |         |    8 | 00/11E3 : 00 00 00 00 | WowRect          dw       0,0,10000,10000      ; very large rectangle
      |                     |             |    |         |      |           10 27 10 27 |
  871 |  1 asmdemo.s    585 | Comment     | 11 |         |    0 | 00/11EB               | *
  872 |  1 asmdemo.s    586 | Comment     | 11 |         |    0 | 00/11EB               | * Data for rects., polygons, bitmap, and text
  873 |  1 asmdemo.s    587 | Comment     | 11 |         |    0 | 00/11EB               | *
  874 |  1 asmdemo.s    588 | Data        | 11 |         |   36 | 00/11EB : 00 00 00 00 | TestPort         ds       {{{{{{{{{{{0}+4}+2}+2}+8}+10}+4}+2}+1}+1}+2}; space for TestPort (= standard grafport = screen grafport)
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
  875 |  1 asmdemo.s    589 | Comment     | 11 |         |    0 | 00/120F               | *
  876 |  1 asmdemo.s    590 | Data        | 11 |         |    8 | 00/120F : 1E 00 1E 00 | testrect1        dw       30,30,95,150         ; a ractangle
      |                     |             |    |         |      |           5F 00 96 00 |
  877 |  1 asmdemo.s    591 | Data        | 11 |         |    8 | 00/1217 : C8 00 32 00 | testrect2        dw       200,50,520,140       ; a ractangle
      |                     |             |    |         |      |           08 02 8C 00 |
  878 |  1 asmdemo.s    592 | Comment     | 11 |         |    0 | 00/121F               | *
  879 |  1 asmdemo.s    593 | Data        | 11 |         |    4 | 00/121F : 00 00 00 00 | Point1           dw       0,0                  ; upper left corner
  880 |  1 asmdemo.s    594 | Data        | 11 |         |    4 | 00/1223 : 2F 02 00 00 | Point2           dw       559,0                ; bottom right corner
  881 |  1 asmdemo.s    595 | Comment     | 11 |         |    0 | 00/1227               | *
  882 |  1 asmdemo.s    596 | Data        | 11 |         |    8 | 00/1227 : 0A 00 0A 00 | R1               dw       10,10,30,30          ; a rect (x,y)
      |                     |             |    |         |      |           1E 00 1E 00 |
  883 |  1 asmdemo.s    597 | Data        | 11 |         |    8 | 00/122F : 1C 00 1C 00 | R2               dw       28,28,70,70          ; a rect (x,y)
      |                     |             |    |         |      |           46 00 46 00 |
  884 |  1 asmdemo.s    598 | Data        | 11 |         |    8 | 00/1237 : 28 00 28 00 | R3               dw       40,40,90,90          ; a rect (x,y)
      |                     |             |    |         |      |           5A 00 5A 00 |
  885 |  1 asmdemo.s    599 | Data        | 11 |         |    8 | 00/123F : 64 00 1E 00 | R4               dw       100,30,180,60        ; a rect (x,y)
      |                     |             |    |         |      |           B4 00 3C 00 |
  886 |  1 asmdemo.s    600 | Comment     | 11 |         |    0 | 00/1247               | *
  887 |  1 asmdemo.s    601 | Data        | 11 |         |    1 | 00/1247 : 05          | ModeNotOr        dfb      5                    
  888 |  1 asmdemo.s    602 | Data        | 11 |         |    1 | 00/1248 : 00          | ModeCopy         dfb      0                    
  889 |  1 asmdemo.s    603 | Comment     | 11 |         |    0 | 00/1249               | *
  890 |  1 asmdemo.s    604 | Data        | 11 |         |    9 | 00/1249 : 66 66 66 66 | Color1           dfb      $66,$66,$66,$66,$66,$66,$66,$66,0; green pattern
      |                     |             |    |         |      |           66 66 66 66 |
      |                     |             |    |         |      |           00          |
  891 |  1 asmdemo.s    605 | Data        | 11 |         |    9 | 00/1252 : 11 11 11 11 | Color2           dfb      $11,$11,$11,$11,$11,$11,$11,$11,0; blue pattern
      |                     |             |    |         |      |           11 11 11 11 |
      |                     |             |    |         |      |           00          |
  892 |  1 asmdemo.s    606 | Data        | 11 |         |    9 | 00/125B : CC CC CC CC | Color3           dfb      $CC,$CC,$CC,$CC,$CC,$CC,$CC,$CC,0; orange pattern
      |                     |             |    |         |      |           CC CC CC CC |
      |                     |             |    |         |      |           00          |
  893 |  1 asmdemo.s    607 | Data        | 11 |         |    9 | 00/1264 : 38 74 EE 47 | weave            dfb      $38,$74,$EE,$47,$83,$C5,$EE,$5C,0; nice pattern ! (yellow weave)
      |                     |             |    |         |      |           83 C5 EE 5C |
      |                     |             |    |         |      |           00          |
  894 |  1 asmdemo.s    608 | Empty       | 11 |         |    0 | 00/126D               |                                                
  895 |  1 asmdemo.s    609 | Data        | 11 |         |    9 | 00/126D : 00 00 00 00 | Black            dfb      0,0,0,0,0,0,0,0,0    ; black pattern
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00          |
  896 |  1 asmdemo.s    610 | Data        | 11 |         |    8 | 00/1276 : FF FF FF FF | White            ds       8,$FF                ; white pattern
      |                     |             |    |         |      |           FF FF FF FF |
  897 |  1 asmdemo.s    611 | Data        | 11 |         |    1 | 00/127E : 00          |                  dfb      0                    
  898 |  1 asmdemo.s    612 | Comment     | 11 |         |    0 | 00/127F               | *
  899 |  1 asmdemo.s    613 | Comment     | 11 |         |    0 | 00/127F               |                                                         ; A shape
  900 |  1 asmdemo.s    614 | Data        | 11 |         |    2 | 00/127F : 08 80       | TestPoly         dfb      8,$80                ; 8 vertices, $80 : there is anather poly in this list
  901 |  1 asmdemo.s    615 | Data        | 11 |         |   32 | 00/1281 : 40 00 A8 00 |                  dw       64,168,192,168,224,120,288,120,320,168,448,168,320,40,192,40
      |                     |             |    |         |      |           C0 00 A8 00 |
      |                     |             |    |         |      |           E0 00 78 00 |
      |                     |             |    |         |      |           20 01 78 00 |
      |                     |             |    |         |      |           40 01 A8 00 |
      |                     |             |    |         |      |           C0 01 A8 00 |
      |                     |             |    |         |      |           40 01 28 00 |
      |                     |             |    |         |      |           C0 00 28 00 |
  902 |  1 asmdemo.s    616 | Comment     | 11 |         |    0 | 00/12A1               |                 ; dw 3                                  ; replaced by more readable :
  903 |  1 asmdemo.s    617 | Data        | 11 |         |    1 | 00/12A1 : 03          |                  db       3                    ; second poly of the list, 3 vertices
  904 |  1 asmdemo.s    618 | Comment     | 11 |         |    0 | 00/12A2               |                                                         ; makes a hole in first poly.
  905 |  1 asmdemo.s    619 | Data        | 11 |         |    1 | 00/12A2 : 00          |                  db       0                    ; $80 : last poly
  906 |  1 asmdemo.s    620 | Data        | 11 |         |   12 | 00/12A3 : E0 00 60 00 |                  dw       224,96,288,96,256,56 
      |                     |             |    |         |      |           20 01 60 00 |
      |                     |             |    |         |      |           00 01 38 00 |
  907 |  1 asmdemo.s    621 | Comment     | 11 |         |    0 | 00/12AF               | *
  908 |  1 asmdemo.s    622 | Data        | 11 |         |    4 | 00/12AF : 32 00 32 00 | TestBits         dw       50,50                ; view location on current port
  909 |  1 asmdemo.s    623 | Data        | 11 |         |    2 | 00/12B3 : BF 12       |                  dw       Handbits             ; bitmap pointer
  910 |  1 asmdemo.s    624 | Data        | 11 |         |    2 | 00/12B5 : 03 00       |                  dw       3                    ; width of bitmap
  911 |  1 asmdemo.s    625 | Data        | 11 |         |    8 | 00/12B7 : 00 00 00 00 |                  dw       0,0,17,9             ; clip rectangle
      |                     |             |    |         |      |           11 00 09 00 |
  912 |  1 asmdemo.s    626 | Data        | 11 |         |   12 | 00/12BF : 00 00 00 20 | Handbits         dfb      $00,$00,$00,$20,$00,$00,$30,$00,$00,$38,$00,$00; bitmap data
      |                     |             |    |         |      |           00 00 30 00 |
      |                     |             |    |         |      |           00 38 00 00 |
  913 |  1 asmdemo.s    627 | Data        | 11 |         |   12 | 00/12CB : 5E 7F 07 7E |                  dfb      $5E,$7F,$07,$7E,$00,$00,$3E,$1F,$00,$7E,$00,$00
      |                     |             |    |         |      |           00 00 3E 1F |
      |                     |             |    |         |      |           00 7E 00 00 |
  914 |  1 asmdemo.s    628 | Data        | 11 |         |    6 | 00/12D7 : 3C 0F 00 00 |                  dfb      $3C,$0F,$00,$00,$00,$00
      |                     |             |    |         |      |           00 00       |
  915 |  1 asmdemo.s    629 | Comment     | 11 |         |    0 | 00/12DD               | *
  916 |  1 asmdemo.s    630 | Data        | 11 |         |    4 | 00/12DD : 04 00 32 00 | Point3           dw       4,50                 
  917 |  1 asmdemo.s    631 | Comment     | 11 |         |    0 | 00/12E1               | *
  918 |  1 asmdemo.s    632 | Comment     | 11 |         |    0 | 00/12E1               | *
  919 |  1 asmdemo.s    633 | Data        | 11 |         |    2 | 00/12E1 : E4 12       | TestText         dw       message              
  920 |  1 asmdemo.s    634 | Data        | 11 |         |    1 | 00/12E3 : 2F          |                  dfb      {ozunid_7-message}   
  921 |  1 asmdemo.s    635 | Data        | 11 |         |   47 | 00/12E4 : 54 68 69 73 | message          asc      'This is a test of the emergency graphics system'
      |                     |             |    |         |      |           20 69 73 20 |
      |                     |             |    |         |      |           61 20 74 65 |
      |                     |             |    |         |      |           73 74 20 6F |
      |                     |             |    |         |      |           66 20 74 68 |
      |                     |             |    |         |      |           65 20 65 6D |
      |                     |             |    |         |      |           65 72 67 65 |
      |                     |             |    |         |      |           6E 63 79 20 |
      |                     |             |    |         |      |           67 72 61 70 |
      |                     |             |    |         |      |           68 69 63 73 |
      |                     |             |    |         |      |           20 73 79 73 |
      |                     |             |    |         |      |           74 65 6D    |
  922 |  1 asmdemo.s    636 | Empty       | 11 |         |    0 | 00/1313               | ozunid_7                                       
  923 |  1 asmdemo.s    636 | Equivalence | 11 |         |    0 | 00/1313               | msglength        equ      ozunid_7-message     
  924 |  1 asmdemo.s    637 | Comment     | 11 |         |    0 | 00/1313               | *
  925 |  1 asmdemo.s    638 | Comment     | 11 |         |    0 | 00/1313               | *
  926 |  1 asmdemo.s    639 | Comment     | 11 |         |    0 | 00/1313               | * MyPort          ds 50,0    
  927 |  1 asmdemo.s    640 | Comment     | 11 |         |    0 | 00/1313               | *<sym>                             
  928 |  1 asmdemo.s    641 | Data        | 11 |         |   36 | 00/1313 : 00 00 00 00 | MyPort           ds       {{{{{{{{{{{0}+4}+2}+2}+8}+10}+4}+2}+1}+1}+2}; space for a grafport stucture
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
  929 |  1 asmdemo.s    642 | Comment     | 11 |         |    0 | 00/1337               |                                                         ; this is better than original line above.
  930 |  1 asmdemo.s    643 | Data        | 11 |         |    4 | 00/1337 : 00 00 00 00 | MyBits           dw       0,0                  ; viewloc
  931 |  1 asmdemo.s    644 | Data        | 11 |         |    2 | 00/133B : 00 80       |                  dw       {$8000}              
  932 |  1 asmdemo.s    645 | Data        | 11 |         |    2 | 00/133D : 28 00       |                  dw       40                   
  933 |  1 asmdemo.s    646 | Data        | 11 |         |    8 | 00/133F : 00 00 00 00 |                  dw       0,0,200,100          
      |                     |             |    |         |      |           C8 00 64 00 |
  934 |  1 asmdemo.s    647 | Empty       | 11 |         |    0 | 00/1347               |                                                
  935 |  1 asmdemo.s    648 | Data        | 11 |         |    4 | 00/1347 : 32 00 1E 00 | MyDestBits       dw       50,30                
  936 |  1 asmdemo.s    649 | Data        | 11 |         |    2 | 00/134B : 00 80       |                  dw       {$8000}              
  937 |  1 asmdemo.s    650 | Data        | 11 |         |    2 | 00/134D : 28 00       |                  dw       40                   
  938 |  1 asmdemo.s    651 | Data        | 11 |         |    8 | 00/134F : 00 00 00 00 |                  dw       0,0,200,100          
      |                     |             |    |         |      |           C8 00 64 00 |
  939 |  1 asmdemo.s    652 | Comment     | 11 |         |    0 | 00/1357               | *
  940 |  1 asmdemo.s    653 | Data        | 11 |         |    2 | 00/1357 : 5A 13       | ContText         dw       message1             
  941 |  1 asmdemo.s    654 | Data        | 11 |         |    1 | 00/1359 : 22          |                  dfb      {ozunid_8-message1}  
  942 |  1 asmdemo.s    655 | Data        | 11 |         |   34 | 00/135A : 20 50 6C 65 | message1         asc      ' Please press RETURN to continue. '
      |                     |             |    |         |      |           61 73 65 20 |
      |                     |             |    |         |      |           70 72 65 73 |
      |                     |             |    |         |      |           73 20 52 45 |
      |                     |             |    |         |      |           54 55 52 4E |
      |                     |             |    |         |      |           20 74 6F 20 |
      |                     |             |    |         |      |           63 6F 6E 74 |
      |                     |             |    |         |      |           69 6E 75 65 |
      |                     |             |    |         |      |           2E 20       |
  943 |  1 asmdemo.s    656 | Empty       | 11 |         |    0 | 00/137C               | ozunid_8                                       
  944 |  1 asmdemo.s    656 | Equivalence | 11 |         |    0 | 00/137C               | msglgth          equ      ozunid_8-message1    
  945 |  1 asmdemo.s    657 | Data        | 11 |         |    4 | 00/137C : 1E 00 BE 00 | Point4           dw       30,190               
  946 |  1 asmdemo.s    658 | Data        | 11 |         |    1 | 00/1380 : 08          | Switch           dfb      8                    
  947 |  1 asmdemo.s    659 | Comment     | 11 |         |    0 | 00/1381               | *
  948 |  1 asmdemo.s    660 | Data        | 11 |         |    2 | 00/1381 : 84 13       | QuitText         dw       message2             
  949 |  1 asmdemo.s    661 | Data        | 11 |         |    1 | 00/1383 : 3C          |                  dfb      {ozunid_9-message2}  
  950 |  1 asmdemo.s    662 | Data        | 11 |         |   60 | 00/1384 : 20 20 20 20 | message2         asc      '      Please press RETURN to Quit..........                 '
      |                     |             |    |         |      |           20 20 50 6C |
      |                     |             |    |         |      |           65 61 73 65 |
      |                     |             |    |         |      |           20 70 72 65 |
      |                     |             |    |         |      |           73 73 20 52 |
      |                     |             |    |         |      |           45 54 55 52 |
      |                     |             |    |         |      |           4E 20 74 6F |
      |                     |             |    |         |      |           20 51 75 69 |
      |                     |             |    |         |      |           74 2E 2E 2E |
      |                     |             |    |         |      |           2E 2E 2E 2E |
      |                     |             |    |         |      |           2E 2E 2E 20 |
      |                     |             |    |         |      |           20 20 20 20 |
      |                     |             |    |         |      |           20 20 20 20 |
      |                     |             |    |         |      |           20 20 20 20 |
      |                     |             |    |         |      |           20 20 20 20 |
  951 |  1 asmdemo.s    663 | Empty       | 11 |         |    0 | 00/13C0               | ozunid_9                                       
  952 |  1 asmdemo.s    663 | Equivalence | 11 |         |    0 | 00/13C0               | msglgth1         equ      ozunid_9-message2    
  953 |  1 asmdemo.s    664 | Comment     | 11 |         |    0 | 00/13C0               | *
  954 |  1 asmdemo.s    665 | Data        | 11 |         |    2 | 00/13C0 : C3 13       | BufText          dw       message3             
  955 |  1 asmdemo.s    666 | Data        | 11 |         |    1 | 00/13C2 : 29          |                  dfb      {ozunid_10-message3} 
  956 |  1 asmdemo.s    667 | Data        | 11 |         |   41 | 00/13C3 : 20 20 20 20 | message3         asc      '      Now drawing into buffer............'
      |                     |             |    |         |      |           20 20 4E 6F |
      |                     |             |    |         |      |           77 20 64 72 |
      |                     |             |    |         |      |           61 77 69 6E |
      |                     |             |    |         |      |           67 20 69 6E |
      |                     |             |    |         |      |           74 6F 20 62 |
      |                     |             |    |         |      |           75 66 66 65 |
      |                     |             |    |         |      |           72 2E 2E 2E |
      |                     |             |    |         |      |           2E 2E 2E 2E |
      |                     |             |    |         |      |           2E 2E 2E 2E |
      |                     |             |    |         |      |           2E          |
  957 |  1 asmdemo.s    668 | Empty       | 11 |         |    0 | 00/13EC               | ozunid_10                                      
  958 |  1 asmdemo.s    668 | Equivalence | 11 |         |    0 | 00/13EC               | msglgth2         equ      ozunid_10-message3   
  959 |  1 asmdemo.s    669 | Empty       | 11 |         |    0 | 00/13EC               |                                                
  960 |  1 asmdemo.s    670 | Empty       | 11 |         |    0 | 00/13EC               |                                                
  961 |  1 asmdemo.s    671 | Comment     | 11 |         |    0 | 00/13EC               | * ------------------ utils ------------------
  962 |  1 asmdemo.s    672 | Comment     | 11 |         |    0 | 00/13EC               | * Clear DHGR screen   
  963 |  1 asmdemo.s    673 | Equivalence | 11 |         |    0 | 00/13EC               | screenbase       equ      $2000                ; address of screen memory
  964 |  1 asmdemo.s    674 | Comment     | 11 |         |    0 | 00/13EC               | *<sym> 
  965 |  1 asmdemo.s    675 | Empty       | 11 |         |    0 | 00/13EC               | clerscr                                        
  966 |  1 asmdemo.s    676 | Code        | 11 |         |    2 | 00/13EC : A9 00       |                  lda      #<{$2000}            
  967 |  1 asmdemo.s    677 | Code        | 11 |         |    2 | 00/13EE : 85 06       |                  sta      {$06}                
  968 |  1 asmdemo.s    678 | Code        | 11 |         |    2 | 00/13F0 : A9 20       |                  lda      #>{$2000}+1          
  969 |  1 asmdemo.s    679 | Code        | 11 |         |    2 | 00/13F2 : 85 07       |                  sta      {$06}+1              
  970 |  1 asmdemo.s    680 | Code        | 11 |         |    2 | 00/13F4 : A0 00       |                  ldy      #0                   
  971 |  1 asmdemo.s    681 | Code        | 11 |         |    2 | 00/13F6 : A9 00       |                  lda      #0                   
  972 |  1 asmdemo.s    682 | Code        | 11 |         |    3 | 00/13F8 : 8D 00 C0    |                  STA      $C000                
  973 |  1 asmdemo.s    683 | Comment     | 11 |         |    0 | 00/13FB               | *<sym> 
  974 |  1 asmdemo.s    684 | Empty       | 11 |         |    0 | 00/13FB               | clrloop                                        
  975 |  1 asmdemo.s    685 | Code        | 11 |         |    2 | 00/13FB : 91 06       |                  sta      ({$06}),y            
  976 |  1 asmdemo.s    686 | Code        | 11 |         |    3 | 00/13FD : 8D 05 C0    |                  sta      {$C005}              ; write char in aux
  977 |  1 asmdemo.s    687 | Code        | 11 |         |    2 | 00/1400 : 91 06       |                  sta      ({$06}),y            
  978 |  1 asmdemo.s    688 | Code        | 11 |         |    3 | 00/1402 : 8D 04 C0    |                  sta      {$C004}              
  979 |  1 asmdemo.s    689 | Code        | 11 |         |    1 | 00/1405 : C8          |                  iny                           
  980 |  1 asmdemo.s    690 | Code        | 11 |         |    2 | 00/1406 : D0 F3       |                  bne      clrloop              
  981 |  1 asmdemo.s    691 | Code        | 11 |         |    2 | 00/1408 : E6 07       |                  inc      {$06}+1              
  982 |  1 asmdemo.s    692 | Code        | 11 |         |    2 | 00/140A : A6 07       |                  ldx      {$06}+1              
  983 |  1 asmdemo.s    693 | Code        | 11 |         |    2 | 00/140C : E0 40       |                  cpx      #$40                 
  984 |  1 asmdemo.s    694 | Code        | 11 |         |    2 | 00/140E : D0 EB       |                  bne      clrloop              
  985 |  1 asmdemo.s    695 | Code        | 11 |         |    3 | 00/1410 : 8D 01 C0    |                  sta      $C001                
  986 |  1 asmdemo.s    696 | Code        | 11 |         |    3 | 00/1413 : 20 C1 11    |                  jsr      WaitForKeyPress      
  987 |  1 asmdemo.s    697 | Code        | 11 |         |    3 | 00/1416 : 4C 18 0E    |                  jmp      startimage           
  988 |  1 asmdemo.s    698 | Code        | 11 |         |    1 | 00/1419 : 60          |                  rts                           
  989 |  1 asmdemo.s    699 | Empty       | 11 |         |    0 | 00/141A               |                                                
  990 |  1 asmdemo.s    700 | Comment     | 11 |         |    0 | 00/141A               | *<sym>
  991 |  1 asmdemo.s    701 | Empty       | 11 |         |    0 | 00/141A               | DoTextScreen                                   
  992 |  1 asmdemo.s    702 | Code        | 11 |         |    3 | 00/141A : 8D 00 C0    |                  sta      $c000                ;80store off
  993 |  1 asmdemo.s    703 | Code        | 11 |         |    3 | 00/141D : 8D 02 C0    |                  sta      $c002                ;RAMRD main
  994 |  1 asmdemo.s    704 | Code        | 11 |         |    3 | 00/1420 : 8D 04 C0    |                  sta      $c004                ;RAMWRT main
  995 |  1 asmdemo.s    705 | Code        | 11 |         |    3 | 00/1423 : 8D 0C C0    |                  sta      $c00c                ;80col off
  996 |  1 asmdemo.s    706 | Code        | 11 |         |    3 | 00/1426 : 8D 0E C0    |                  sta      $c00e                ;Altcharset off
  997 |  1 asmdemo.s    707 | Code        | 11 |         |    3 | 00/1429 : 8D 81 C0    |                  sta      $c081                ;write RAM, read ROM (2nd 4k bank)
  998 |  1 asmdemo.s    708 | Code        | 11 |         |    3 | 00/142C : 20 2F FB    |                  jsr      {$FB2F}              
  999 |  1 asmdemo.s    709 | Code        | 11 |         |    3 | 00/142F : 20 58 FC    |                  jsr      {$FC58}              
 1000 |  1 asmdemo.s    710 | Code        | 11 |         |    3 | 00/1432 : 20 84 FE    |                  jsr      {$FE84}              
 1001 |  1 asmdemo.s    711 | Code        | 11 |         |    3 | 00/1435 : 20 93 FE    |                  jsr      {$fe93}              
 1002 |  1 asmdemo.s    712 | Code        | 11 |         |    3 | 00/1438 : 20 89 FE    |                  jsr      {$fe89}              
 1003 |  1 asmdemo.s    713 | Code        | 11 |         |    1 | 00/143B : 60          |                  rts                           
 1004 |  1 asmdemo.s    714 | Comment     | 11 |         |    0 | 00/143C               | *
 1005 |  1 asmdemo.s    715 | Comment     | 11 |         |    0 | 00/143C               | *<sym>
 1006 |  1 asmdemo.s    716 | Empty       | 11 |         |    0 | 00/143C               | clearbuffer                                    
 1007 |  1 asmdemo.s    717 | Comment     | 11 |         |    0 | 00/143C               | * clear memory 
 1008 |  1 asmdemo.s    718 | Code        | 11 |         |    2 | 00/143C : A9 2E       |                  lda      #<outbuff            
 1009 |  1 asmdemo.s    719 | Code        | 11 |         |    2 | 00/143E : 85 06       |                  sta      {$06}                
 1010 |  1 asmdemo.s    720 | Code        | 11 |         |    2 | 00/1440 : A9 0F       |                  lda      #>outbuff            
 1011 |  1 asmdemo.s    721 | Code        | 11 |         |    2 | 00/1442 : 85 07       |                  sta      {$06}+1              
 1012 |  1 asmdemo.s    722 | Code        | 11 |         |    2 | 00/1444 : A9 00       |                  lda      #0                   
 1013 |  1 asmdemo.s    723 | Code        | 11 |         |    2 | 00/1446 : A0 00       |                  ldy      #0                   
 1014 |  1 asmdemo.s    724 | Comment     | 11 |         |    0 | 00/1448               | *<sym>
 1015 |  1 asmdemo.s    725 | Code        | 11 |         |    2 | 00/1448 : 91 06       | pokeZ            sta      ({$06}),y            
 1016 |  1 asmdemo.s    726 | Code        | 11 |         |    1 | 00/144A : C8          |                  iny                           
 1017 |  1 asmdemo.s    727 | Code        | 11 |         |    2 | 00/144B : C0 50       |                  cpy      #80                  
 1018 |  1 asmdemo.s    728 | Code        | 11 |         |    2 | 00/144D : D0 F9       |                  bne      pokeZ                
 1019 |  1 asmdemo.s    729 | Code        | 11 |         |    1 | 00/144F : 60          |                  rts                           
 1020 |  1 asmdemo.s    730 | Comment     | 11 |         |    0 | 00/1450               | *               
 1021 |  1 asmdemo.s    731 | Comment     | 11 |         |    0 | 00/1450               | *<sym>
 1022 |  1 asmdemo.s    732 | Empty       | 11 |         |    0 | 00/1450               | ProDOSQuit                                     
 1023 |  1 asmdemo.s    733 | Code        | 11 |         |    3 | 00/1450 : 20 00 BF    |                  jsr      $BF00                ; ProDOS Quit
 1024 |  1 asmdemo.s    734 | Data        | 11 |         |    1 | 00/1453 : 65          |                  dfb      $65                  
 1025 |  1 asmdemo.s    735 | Data        | 11 |         |    2 | 00/1454 : 57 14       |                  dw       QuitParams           
 1026 |  1 asmdemo.s    736 | Code        | 11 |         |    1 | 00/1456 : 60          |                  rts                           
 1027 |  1 asmdemo.s    737 | Comment     | 11 |         |    0 | 00/1457               | *<sym>
 1028 |  1 asmdemo.s    738 | Data        | 11 |         |    1 | 00/1457 : 04          | QuitParams       dfb      4                    
 1029 |  1 asmdemo.s    739 | Data        | 11 |         |    8 | 00/1458 : 00 00 00 00 |                  dw       0,0,0,0              ; standard parameters for Quit call
      |                     |             |    |         |      |           00 00 00 00 |
 1030 |  1 asmdemo.s    740 | Comment     | 11 |         |    0 | 00/1460               | *
 1031 |  1 asmdemo.s    741 | Comment     | 11 |         |    0 | 00/1460               | *<sym>
 1032 |  1 asmdemo.s    742 | Empty       | 11 |         |    0 | 00/1460               | computeBytes                                   
 1033 |  1 asmdemo.s    743 | Comment     | 11 |         |    0 | 00/1460               | * given the # of bits in A,X (lo,hi), computes the # of bytes
 1034 |  1 asmdemo.s    744 | Comment     | 11 |         |    0 | 00/1460               | * to hold these bits on Apple II screen (7 pixels per byte)           
 1035 |  1 asmdemo.s    745 | Code        | 11 |         |    3 | 00/1460 : 8D 88 14    |                  sta      mybyte               ; number of bits (16 bits integer)
 1036 |  1 asmdemo.s    746 | Code        | 11 |         |    3 | 00/1463 : 8E 89 14    |                  stx      mybyte+1             
 1037 |  1 asmdemo.s    747 | Code        | 11 |         |    2 | 00/1466 : A2 01       |                  ldx      #1                   ; x = number of needed bytes
 1038 |  1 asmdemo.s    748 | Comment     | 11 |         |    0 | 00/1468               | *<sym>
 1039 |  1 asmdemo.s    749 | Empty       | 11 |         |    0 | 00/1468               | loopbyte                                       
 1040 |  1 asmdemo.s    750 | Code        | 11 |         |    3 | 00/1468 : AD 88 14    |                  lda      mybyte               
 1041 |  1 asmdemo.s    751 | Code        | 11 |         |    1 | 00/146B : 38          |                  sec                           
 1042 |  1 asmdemo.s    752 | Code        | 11 |         |    2 | 00/146C : E9 07       |                  sbc      #7                   
 1043 |  1 asmdemo.s    753 | Code        | 11 |         |    3 | 00/146E : 8D 88 14    |                  sta      mybyte               
 1044 |  1 asmdemo.s    754 | Code        | 11 |         |    3 | 00/1471 : AD 89 14    |                  lda      mybyte+1             
 1045 |  1 asmdemo.s    755 | Code        | 11 |         |    2 | 00/1474 : E9 00       |                  sbc      #0                   
 1046 |  1 asmdemo.s    756 | Code        | 11 |         |    3 | 00/1476 : 8D 89 14    |                  sta      mybyte+1             
 1047 |  1 asmdemo.s    757 | Empty       | 11 |         |    0 | 00/1479               |                                                
 1048 |  1 asmdemo.s    758 | Code        | 11 |         |    3 | 00/1479 : 0D 88 14    |                  ora      mybyte               
 1049 |  1 asmdemo.s    759 | Code        | 11 |         |    2 | 00/147C : F0 09       |                  beq      ozunid_5             ; = 0 : exit, nb_byte is correct
 1050 |  1 asmdemo.s    760 | Code        | 11 |         |    3 | 00/147E : AD 89 14    |                  lda      mybyte+1             
 1051 |  1 asmdemo.s    761 | Code        | 11 |         |    2 | 00/1481 : 30 04       |                  bmi      ozunid_5             ; < 0 : exit, nb_byte is correct
 1052 |  1 asmdemo.s    762 | Comment     | 11 |         |    0 | 00/1483               |                                         ; > 0 : loop
 1053 |  1 asmdemo.s    763 | Code        | 11 |         |    1 | 00/1483 : E8          |                  inx                           
 1054 |  1 asmdemo.s    764 | Code        | 11 |         |    3 | 00/1484 : 4C 68 14    |                  jmp      loopbyte             
 1055 |  1 asmdemo.s    765 | Empty       | 11 |         |    0 | 00/1487               | ozunid_5                                       
 1056 |  1 asmdemo.s    766 | Code        | 11 |         |    1 | 00/1487 : 60          |                  rts                           
 1057 |  1 asmdemo.s    767 | Comment     | 11 |         |    0 | 00/1488               | *<sym>
 1058 |  1 asmdemo.s    768 | Empty       | 11 |         |    0 | 00/1488               | mybyte                                         
 1059 |  1 asmdemo.s    769 | Data        | 11 |         |    2 | 00/1488 : 00 00       |                  ds       2                    
 1060 |  1 asmdemo.s    770 | Empty       | 11 |         |    0 | 00/148A               |                                                
------+---------------------+-------------+----+---------+------+-----------------------+-------------------------------------------------------------------
