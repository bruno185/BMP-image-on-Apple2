------+---------------------+-------------+----+---------+------+-----------------------+-------------------------------------------------------------------
 Line | # File         Line | Line Type   | MX |  Reloc  | Size | Address   Object Code |  Source Code                                                      
------+---------------------+-------------+----+---------+------+-----------------------+-------------------------------------------------------------------
    1 |  1 asmdemo.s      1 | Comment     | 11 |         |    0 | 00/8000               | * * * * * * * * * * * * * * * * * * * * * * * * * * * 
    2 |  1 asmdemo.s      2 | Comment     | 11 |         |    0 | 00/8000               | *                                                   *
    3 |  1 asmdemo.s      3 | Comment     | 11 |         |    0 | 00/8000               | *   Diplay a BMP image using Graphics Primitives    *      
    4 |  1 asmdemo.s      4 | Comment     | 11 |         |    0 | 00/8000               | *                                                   *  
    5 |  1 asmdemo.s      5 | Comment     | 11 |         |    0 | 00/8000               | * * * * * * * * * * * * * * * * * * * * * * * * * * *  
    6 |  1 asmdemo.s      6 | Comment     | 11 |         |    0 | 00/8000               | *
    7 |  1 asmdemo.s      7 | Comment     | 11 |         |    0 | 00/8000               | * BMP is loaded by this program, and tests are performed :
    8 |  1 asmdemo.s      8 | Comment     | 11 |         |    0 | 00/8000               |         * BMP image must have 1 bit per pixel
    9 |  1 asmdemo.s      9 | Comment     | 11 |         |    0 | 00/8000               |         * Dimension must not exceed 280 x 192
   10 |  1 asmdemo.s     10 | Comment     | 11 |         |    0 | 00/8000               |         * Every bit (= pixel) in BMP file is doubled horizontally 
   11 |  1 asmdemo.s     11 | Comment     | 11 |         |    0 | 00/8000               | * to respect image aspect ratio (more or less),
   12 |  1 asmdemo.s     12 | Comment     | 11 |         |    0 | 00/8000               | * the image is drawn line by line, using PaintBits function of Graphics Primitives package
   13 |  1 asmdemo.s     13 | Comment     | 11 |         |    0 | 00/8000               | *
   14 |  1 asmdemo.s     14 | Comment     | 11 |         |    0 | 00/8000               | *
   15 |  1 asmdemo.s     15 | Comment     | 11 |         |    0 | 00/8000               | * Memory :
   16 |  1 asmdemo.s     16 | Comment     | 11 |         |    0 | 00/8000               | * STARTUP (Basic) : $801 
   17 |  1 asmdemo.s     17 | Comment     | 11 |         |    0 | 00/8000               | * Font : $800 : destroy STARTUP !
   18 |  1 asmdemo.s     18 | Comment     | 11 |         |    0 | 00/8000               | * Program : $E00 - $1FFF
   19 |  1 asmdemo.s     19 | Comment     | 11 |         |    0 | 00/8000               | * Screen : $2000 - $3FFF
   20 |  1 asmdemo.s     20 | Comment     | 11 |         |    0 | 00/8000               | * GP Library : $4000 - $5FFF
   21 |  1 asmdemo.s     21 | Comment     | 11 |         |    0 | 00/8000               | * BMP Image : $6000 - $7FFF
   22 |  1 asmdemo.s     22 | Comment     | 11 |         |    0 | 00/8000               | * grafport storage : $8000
   23 |  1 asmdemo.s     23 | Empty       | 11 |         |    0 | 00/8000               |                                                    
   24 |  1 asmdemo.s     24 | Comment     | 11 |         |    0 | 00/8000               | *<sym>
   25 |  1 asmdemo.s     25 | Directive   | 11 |         |    0 | 00/8000               | GP_call              MAC                           ; call to graphic primitives (macro)
   26 |  1 asmdemo.s     26 | Directive   | 11 |         |    0 | 00/8000               |                      jsr      {$4000}              ; graphic primitives only entry point
   27 |  1 asmdemo.s     27 | Directive   | 11 |         |    0 | 00/8000               |                      dfb      ]1                   ; command ID (1 byte)
   28 |  1 asmdemo.s     28 | Directive   | 11 |         |    0 | 00/8000               |                      da       ]2                   ; address of parameter(s) (2 bytes), 0 if no paramter
   29 |  1 asmdemo.s     29 | Directive   | 11 |         |    0 | 00/8000               |                      EOM                           
   30 |  1 asmdemo.s     30 | Empty       | 11 |         |    0 | 00/8000               |                                                    
   31 |  1 asmdemo.s     31 | Directive   | 11 |         |    0 | 00/8000               |                      put      equates              
   32 |  2 equates.s      1 | Comment     | 11 |         |    0 | 00/8000               | ;
   33 |  2 equates.s      2 | Comment     | 11 |         |    0 | 00/8000               | ; equate file for interfacing to toolkit/graphics
   34 |  2 equates.s      3 | Comment     | 11 |         |    0 | 00/8000               | ;
   35 |  2 equates.s      4 | Equivalence | 11 |         |    0 | 00/8000               | ToolMLI              equ      $4000                
   36 |  2 equates.s      5 | Equivalence | 11 |         |    0 | 00/8000               | GrafMLI              equ      $4000                
   37 |  2 equates.s      6 | Comment     | 11 |         |    0 | 00/8000               | ;
   38 |  2 equates.s      7 | Comment     | 11 |         |    0 | 00/8000               | ; constants
   39 |  2 equates.s      8 | Comment     | 11 |         |    0 | 00/8000               | ;
   40 |  2 equates.s      9 | Equivalence | 11 |         |    0 | 00/8000               | SrcCopy              equ      0                    
   41 |  2 equates.s     10 | Equivalence | 11 |         |    0 | 00/8000               | SrcOr                equ      1                    
   42 |  2 equates.s     11 | Equivalence | 11 |         |    0 | 00/8000               | SrcXor               equ      2                    
   43 |  2 equates.s     12 | Equivalence | 11 |         |    0 | 00/8000               | SrcBic               equ      3                    
   44 |  2 equates.s     13 | Equivalence | 11 |         |    0 | 00/8000               | SrcNotCopy           equ      4                    
   45 |  2 equates.s     14 | Equivalence | 11 |         |    0 | 00/8000               | SrcNotOr             equ      5                    
   46 |  2 equates.s     15 | Equivalence | 11 |         |    0 | 00/8000               | SrcNotXor            equ      6                    
   47 |  2 equates.s     16 | Equivalence | 11 |         |    0 | 00/8000               | SrcNotBic            equ      7                    
   48 |  2 equates.s     17 | Comment     | 11 |         |    0 | 00/8000               | ;
   49 |  2 equates.s     18 | Comment     | 11 |         |    0 | 00/8000               | ; grafport structure
   50 |  2 equates.s     19 | Comment     | 11 |         |    0 | 00/8000               | ;
   51 |  2 equates.s     20 | Equivalence | 11 |         |    0 | 00/8000               | viewloc              equ      0                    
   52 |  2 equates.s     21 | Equivalence | 11 |         |    0 | 00/8000               | portbits             equ      {0}+4                
   53 |  2 equates.s     22 | Equivalence | 11 |         |    0 | 00/8000               | portwidth            equ      {{0}+4}+2            ; 1 byte for width, the other is reserved.
   54 |  2 equates.s     23 | Equivalence | 11 |         |    0 | 00/8000               | portrect             equ      {{{0}+4}+2}+2        
   55 |  2 equates.s     24 | Equivalence | 11 |         |    0 | 00/8000               | penpat               equ      {{{{0}+4}+2}+2}+8    
   56 |  2 equates.s     25 | Equivalence | 11 |         |    0 | 00/8000               | penloc               equ      {{{{{0}+4}+2}+2}+8}+10
   57 |  2 equates.s     26 | Equivalence | 11 |         |    0 | 00/8000               | pensize              equ      {{{{{{0}+4}+2}+2}+8}+10}+4
   58 |  2 equates.s     27 | Equivalence | 11 |         |    0 | 00/8000               | penmode              equ      {{{{{{{0}+4}+2}+2}+8}+10}+4}+2
   59 |  2 equates.s     28 | Equivalence | 11 |         |    0 | 00/8000               | txback               equ      {{{{{{{{0}+4}+2}+2}+8}+10}+4}+2}+1
   60 |  2 equates.s     29 | Equivalence | 11 |         |    0 | 00/8000               | txfont               equ      {{{{{{{{{0}+4}+2}+2}+8}+10}+4}+2}+1}+1
   61 |  2 equates.s     30 | Comment     | 11 |         |    0 | 00/8000               | ;
   62 |  2 equates.s     31 | Equivalence | 11 |         |    0 | 00/8000               | portlength           equ      {{{{{{{{{{0}+4}+2}+2}+8}+10}+4}+2}+1}+1}+2
   63 |  2 equates.s     32 | Comment     | 11 |         |    0 | 00/8000               | ;
   64 |  2 equates.s     33 | Comment     | 11 |         |    0 | 00/8000               | ;
   65 |  2 equates.s     34 | Comment     | 11 |         |    0 | 00/8000               | ; command numbers
   66 |  2 equates.s     35 | Comment     | 11 |         |    0 | 00/8000               | ;
   67 |  2 equates.s     36 | Equivalence | 11 |         |    0 | 00/8000               | InitGraf             equ      1                    
   68 |  2 equates.s     37 | Equivalence | 11 |         |    0 | 00/8000               | SetSwitches          equ      {1}+1                
   69 |  2 equates.s     38 | Comment     | 11 |         |    0 | 00/8000               | ;
   70 |  2 equates.s     39 | Equivalence | 11 |         |    0 | 00/8000               | InitPort             equ      {{1}+1}+1            
   71 |  2 equates.s     40 | Equivalence | 11 |         |    0 | 00/8000               | SetPort              equ      {{{1}+1}+1}+1        
   72 |  2 equates.s     41 | Equivalence | 11 |         |    0 | 00/8000               | GetPort              equ      {{{{1}+1}+1}+1}+1    
   73 |  2 equates.s     42 | Equivalence | 11 |         |    0 | 00/8000               | SetPortBits          equ      {{{{{1}+1}+1}+1}+1}+1
   74 |  2 equates.s     43 | Equivalence | 11 |         |    0 | 00/8000               | SetPenMode           equ      {{{{{{1}+1}+1}+1}+1}+1}+1
   75 |  2 equates.s     44 | Equivalence | 11 |         |    0 | 00/8000               | SetPattern           equ      {{{{{{{1}+1}+1}+1}+1}+1}+1}+1
   76 |  2 equates.s     45 | Equivalence | 11 |         |    0 | 00/8000               | SetColorFlags        equ      {{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1
   77 |  2 equates.s     46 | Equivalence | 11 |         |    0 | 00/8000               | SetPenSize           equ      {{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   78 |  2 equates.s     47 | Equivalence | 11 |         |    0 | 00/8000               | SetFont              equ      {{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   79 |  2 equates.s     48 | Equivalence | 11 |         |    0 | 00/8000               | SetTextBG            equ      {{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   80 |  2 equates.s     49 | Comment     | 11 |         |    0 | 00/8000               | ;
   81 |  2 equates.s     50 | Equivalence | 11 |         |    0 | 00/8000               | Move                 equ      {{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   82 |  2 equates.s     51 | Equivalence | 11 |         |    0 | 00/8000               | MoveTo               equ      {{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   83 |  2 equates.s     52 | Equivalence | 11 |         |    0 | 00/8000               | Line                 equ      {{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   84 |  2 equates.s     53 | Equivalence | 11 |         |    0 | 00/8000               | LineTo               equ      {{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   85 |  2 equates.s     54 | Equivalence | 11 |         |    0 | 00/8000               | PaintRect            equ      {{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   86 |  2 equates.s     55 | Equivalence | 11 |         |    0 | 00/8000               | FrameRect            equ      {{{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   87 |  2 equates.s     56 | Equivalence | 11 |         |    0 | 00/8000               | InRect               equ      {{{{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   88 |  2 equates.s     57 | Equivalence | 11 |         |    0 | 00/8000               | PaintBits            equ      {{{{{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   89 |  2 equates.s     58 | Equivalence | 11 |         |    0 | 00/8000               | PaintPoly            equ      {{{{{{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   90 |  2 equates.s     59 | Equivalence | 11 |         |    0 | 00/8000               | FramePoly            equ      {{{{{{{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   91 |  2 equates.s     60 | Equivalence | 11 |         |    0 | 00/8000               | InPoly               equ      {{{{{{{{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   92 |  2 equates.s     61 | Comment     | 11 |         |    0 | 00/8000               | ;
   93 |  2 equates.s     62 | Equivalence | 11 |         |    0 | 00/8000               | TextWidth            equ      {{{{{{{{{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   94 |  2 equates.s     63 | Equivalence | 11 |         |    0 | 00/8000               | DrawText             equ      {{{{{{{{{{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   95 |  2 equates.s     64 | Comment     | 11 |         |    0 | 00/8000               | ;
   96 |  2 equates.s     65 | Equivalence | 11 |         |    0 | 00/8000               | SetZP1               equ      {{{{{{{{{{{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   97 |  2 equates.s     66 | Equivalence | 11 |         |    0 | 00/8000               | SetZP2               equ      {{{{{{{{{{{{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   98 |  2 equates.s     67 | Equivalence | 11 |         |    0 | 00/8000               | GetVersion           equ      {{{{{{{{{{{{{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1
   99 |  2 equates.s     68 | Empty       | 11 |         |    0 | 00/8000               |                                                    
  100 |  2 equates.s     69 | Comment     | 11 |         |    0 | 00/8000               | ; DATA STRUCTURES
  101 |  2 equates.s     70 | Comment     | 11 |         |    0 | 00/8000               | ;
  102 |  2 equates.s     71 | Comment     | 11 |         |    0 | 00/8000               | ; The following data structures are defined as types (Pascal format):
  103 |  2 equates.s     72 | Comment     | 11 |         |    0 | 00/8000               |     ; byte = 0..255;
  104 |  2 equates.s     73 | Empty       | 11 |         |    0 | 00/8000               |                                                    
  105 |  2 equates.s     74 | Comment     | 11 |         |    0 | 00/8000               |     ; bits = packed array (0..7) of boolean;
  106 |  2 equates.s     75 | Empty       | 11 |         |    0 | 00/8000               |                                                    
  107 |  2 equates.s     76 | Comment     | 11 |         |    0 | 00/8000               |     ; pmode = (penCopy, penOr, penXor, penBic, notpenCopy, notpenOr, notpenXor, notpenBic);
  108 |  2 equates.s     77 | Empty       | 11 |         |    0 | 00/8000               |                                                    
  109 |  2 equates.s     78 | Comment     | 11 |         |    0 | 00/8000               |     ; point = record
  110 |  2 equates.s     79 | Comment     | 11 |         |    0 | 00/8000               |         ; x: integer;
  111 |  2 equates.s     80 | Comment     | 11 |         |    0 | 00/8000               |         ; y: integer;
  112 |  2 equates.s     81 | Comment     | 11 |         |    0 | 00/8000               |     ; end;
  113 |  2 equates.s     82 | Empty       | 11 |         |    0 | 00/8000               |                                                    
  114 |  2 equates.s     83 | Comment     | 11 |         |    0 | 00/8000               |     ; rect = record
  115 |  2 equates.s     84 | Comment     | 11 |         |    0 | 00/8000               |         ; case integer of
  116 |  2 equates.s     85 | Comment     | 11 |         |    0 | 00/8000               |         ; 0: (left: integer; top: integer; right: integer; bottom: integer);
  117 |  2 equates.s     86 | Comment     | 11 |         |    0 | 00/8000               |         ; 1: (topleft: point; botright: point);
  118 |  2 equates.s     87 | Empty       | 11 |         |    0 | 00/8000               |                                                    
  119 |  2 equates.s     88 | Comment     | 11 |         |    0 | 00/8000               |     ; maplnfo = packed record
  120 |  2 equates.s     89 | Comment     | 11 |         |    0 | 00/8000               |         ; viewloc: point;
  121 |  2 equates.s     90 | Comment     | 11 |         |    0 | 00/8000               |         ; mspbits: pointer;
  122 |  2 equates.s     91 | Comment     | 11 |         |    0 | 00/8000               |         ; mspwidth: byte;
  123 |  2 equates.s     92 | Comment     | 11 |         |    0 | 00/8000               |         ; reserved: byte;
  124 |  2 equates.s     93 | Comment     | 11 |         |    0 | 00/8000               |         ; maprect: rect;
  125 |  2 equates.s     94 | Comment     | 11 |         |    0 | 00/8000               |     ; end;
  126 |  2 equates.s     95 | Empty       | 11 |         |    0 | 00/8000               |                                                    
  127 |  2 equates.s     96 | Comment     | 11 |         |    0 | 00/8000               |     ; pattern = packed array [1..9] of byte;                ; 1..8 ???
  128 |  2 equates.s     97 | Empty       | 11 |         |    0 | 00/8000               |                                                    
  129 |  2 equates.s     98 | Comment     | 11 |         |    0 | 00/8000               |     ; maskinfo = packed record
  130 |  2 equates.s     99 | Comment     | 11 |         |    0 | 00/8000               |         ; ANDmask: byte;
  131 |  2 equates.s    100 | Comment     | 11 |         |    0 | 00/8000               |         ; ORmask: byte;
  132 |  2 equates.s    101 | Comment     | 11 |         |    0 | 00/8000               |     ; end;
  133 |  2 equates.s    102 | Empty       | 11 |         |    0 | 00/8000               |                                                    
  134 |  2 equates.s    103 | Comment     | 11 |         |    0 | 00/8000               |     ; GrafPort = packed record
  135 |  2 equates.s    104 | Comment     | 11 |         |    0 | 00/8000               |         ; portmap: maplnfo;
  136 |  2 equates.s    105 | Comment     | 11 |         |    0 | 00/8000               |         ; penpattern: pattern;
  137 |  2 equates.s    106 | Comment     | 11 |         |    0 | 00/8000               |         ; colormasks: maskinfo;
  138 |  2 equates.s    107 | Comment     | 11 |         |    0 | 00/8000               |         ; penloc: point;
  139 |  2 equates.s    108 | Comment     | 11 |         |    0 | 00/8000               |         ; penwidth: byte;
  140 |  2 equates.s    109 | Comment     | 11 |         |    0 | 00/8000               |         ; penheight: byte;
  141 |  2 equates.s    110 | Comment     | 11 |         |    0 | 00/8000               |         ; penmode: pmode;
  142 |  2 equates.s    111 | Comment     | 11 |         |    0 | 00/8000               |         ; reserved: 0..31;
  143 |  2 equates.s    112 | Comment     | 11 |         |    0 | 00/8000               |         ; textback: byte;
  144 |  2 equates.s    113 | Comment     | 11 |         |    0 | 00/8000               |         ; textfont: integer;
  145 |  2 equates.s    114 | Comment     | 11 |         |    0 | 00/8000               |     ; end;
  146 |  2 equates.s    115 | Empty       | 11 |         |    0 | 00/8000               |                                                    
  147 |  1 asmdemo.s     32 | Directive   | 11 |         |    0 | 00/8000               |                      put      equ                  
  148 |  3     equ.s      1 | Comment     | 11 |         |    0 | 00/8000               | ************ ROM routines ************ 
  149 |  3     equ.s      2 | Equivalence | 11 |         |    0 | 00/8000               | home                 equ      $FC58                ; clear text screen, reset margins
  150 |  3     equ.s      3 | Equivalence | 11 |         |    0 | 00/8000               | text                 equ      $FB2F                ; text mode
  151 |  3     equ.s      4 | Equivalence | 11 |         |    0 | 00/8000               | Bell                 equ      $FBDD                ; play a sound
  152 |  3     equ.s      5 | Equivalence | 11 |         |    0 | 00/8000               | cout                 equ      $FDED                ; print char in A
  153 |  3     equ.s      6 | Equivalence | 11 |         |    0 | 00/8000               | vtab                 equ      $FC22                ; vert. tab, value must be in CV ($25)
  154 |  3     equ.s      7 | Equivalence | 11 |         |    0 | 00/8000               | getln                equ      $FD6A                ; read line of input (=> X = length, buffer = $200)
  155 |  3     equ.s      8 | Equivalence | 11 |         |    0 | 00/8000               | getlnz               equ      $FD67                ; = return + getln
  156 |  3     equ.s      9 | Equivalence | 11 |         |    0 | 00/8000               | getln1               equ      $FD6F                ; = getln without prompt
  157 |  3     equ.s     10 | Equivalence | 11 |         |    0 | 00/8000               | bascalc              equ      $FBC1                ; calc. address of line in A, put address in $28/$29
  158 |  3     equ.s     11 | Equivalence | 11 |         |    0 | 00/8000               | crout                equ      $FD8E                ; print carriage return
  159 |  3     equ.s     12 | Equivalence | 11 |         |    0 | 00/8000               | clreop               equ      $FC42                ; clear from cursor to end of page
  160 |  3     equ.s     13 | Equivalence | 11 |         |    0 | 00/8000               | clreol               equ      $FC9C                ; clear from cursor to end of line
  161 |  3     equ.s     14 | Equivalence | 11 |         |    0 | 00/8000               | prntx                equ      $F944                ; prints X in hex (2 digits)
  162 |  3     equ.s     15 | Equivalence | 11 |         |    0 | 00/8000               | prbyte               equ      $FDDA                ; prints A in hex (2 digits)
  163 |  3     equ.s     16 | Equivalence | 11 |         |    0 | 00/8000               | printax              equ      $F941                ; Prints current contents of the A and X in hex
  164 |  3     equ.s     17 | Equivalence | 11 |         |    0 | 00/8000               | prntyx               equ      $F940                ; Prints current contents of the Y and X in hex
  165 |  3     equ.s     18 | Equivalence | 11 |         |    0 | 00/8000               | rdkey                equ      $FD0C                ; wait for keypress
  166 |  3     equ.s     19 | Equivalence | 11 |         |    0 | 00/8000               | wait                 equ      $FCA8                ; monitor delay
  167 |  3     equ.s     20 | Equivalence | 11 |         |    0 | 00/8000               | AUXMOV               equ      $C311                
  168 |  3     equ.s     21 | Equivalence | 11 |         |    0 | 00/8000               | OUTPORT              equ      $FE95                
  169 |  3     equ.s     22 | Equivalence | 11 |         |    0 | 00/8000               | prnxy                equ      $F940                
  170 |  3     equ.s     23 | Equivalence | 11 |         |    0 | 00/8000               | normal               equ      $FE84                ; Set normal video mode (white on black)
  171 |  3     equ.s     24 | Equivalence | 11 |         |    0 | 00/8000               | pr0                  equ      $fe93                ; SETVID (= PR#0)
  172 |  3     equ.s     25 | Equivalence | 11 |         |    0 | 00/8000               | in0                  equ      $fe89                ; SETKBD (= IN#0)
  173 |  3     equ.s     26 | Empty       | 11 |         |    0 | 00/8000               |                                                    
  174 |  3     equ.s     27 | Comment     | 11 |         |    0 | 00/8000               | *
  175 |  3     equ.s     28 | Comment     | 11 |         |    0 | 00/8000               | ************ ROM switches ************  
  176 |  3     equ.s     29 | Equivalence | 11 |         |    0 | 00/8000               | STORE80OFF           equ      $C000                ; disable 80-column store
  177 |  3     equ.s     30 | Equivalence | 11 |         |    0 | 00/8000               | STORE80ON            equ      $C001                ; enable 80-column store
  178 |  3     equ.s     31 | Equivalence | 11 |         |    0 | 00/8000               | RAMRDOFF             equ      $C002                ; read main
  179 |  3     equ.s     32 | Equivalence | 11 |         |    0 | 00/8000               | RAMRDON              equ      $C003                ; read aux
  180 |  3     equ.s     33 | Equivalence | 11 |         |    0 | 00/8000               | RAMWRTOFF            equ      $C004                ; write to main
  181 |  3     equ.s     34 | Equivalence | 11 |         |    0 | 00/8000               | RAMWRTON             equ      $C005                ; write to aux
  182 |  3     equ.s     35 | Equivalence | 11 |         |    0 | 00/8000               | ALTCHARSET0FF        equ      $C00E                
  183 |  3     equ.s     36 | Equivalence | 11 |         |    0 | 00/8000               | ALTCHARSET0N         equ      $C00F                
  184 |  3     equ.s     37 | Equivalence | 11 |         |    0 | 00/8000               | kbd                  equ      $C000                ; ascii code of last key pressed (+ 128 if strobe not cleared)
  185 |  3     equ.s     38 | Equivalence | 11 |         |    0 | 00/8000               | kbdstrb              equ      $C010                
  186 |  3     equ.s     39 | Equivalence | 11 |         |    0 | 00/8000               | col80off             equ      $C00C                
  187 |  3     equ.s     40 | Equivalence | 11 |         |    0 | 00/8000               | col80on              equ      $C00D                
  188 |  3     equ.s     41 | Equivalence | 11 |         |    0 | 00/8000               | 80col                equ      $C01F                
  189 |  3     equ.s     42 | Comment     | 11 |         |    0 | 00/8000               | *
  190 |  3     equ.s     43 | Comment     | 11 |         |    0 | 00/8000               | ************ page 0 ************  
  191 |  3     equ.s     44 | Equivalence | 11 |         |    0 | 00/8000               | cv                   equ      $25                  
  192 |  3     equ.s     45 | Equivalence | 11 |         |    0 | 00/8000               | ch                   equ      $24                  
  193 |  3     equ.s     46 | Equivalence | 11 |         |    0 | 00/8000               | basl                 equ      $28                  
  194 |  3     equ.s     47 | Equivalence | 11 |         |    0 | 00/8000               | wndlft               equ      $20                  
  195 |  3     equ.s     48 | Equivalence | 11 |         |    0 | 00/8000               | wndwdth              equ      $21                  
  196 |  3     equ.s     49 | Equivalence | 11 |         |    0 | 00/8000               | wndtop               equ      $22                  ; Top Margin (0 - 23, 0 is default, 20 in graphics mode)
  197 |  3     equ.s     50 | Equivalence | 11 |         |    0 | 00/8000               | wndbtm               equ      $23                  
  198 |  3     equ.s     51 | Equivalence | 11 |         |    0 | 00/8000               | prompt               equ      $33                  
  199 |  3     equ.s     52 | Comment     | 11 |         |    0 | 00/8000               | *
  200 |  3     equ.s     53 | Equivalence | 11 |         |    0 | 00/8000               | ourch                equ      $57B                 ; Cursor's column position minus 1 (HTAB's place) in 80-column mode
  201 |  3     equ.s     54 | Equivalence | 11 |         |    0 | 00/8000               | ourcv                equ      $5FB                 ; 80 col vertical pos
  202 |  3     equ.s     55 | Comment     | 11 |         |    0 | 00/8000               | *
  203 |  3     equ.s     56 | Comment     | 11 |         |    0 | 00/8000               | ************ ProDOS ************ 
  204 |  3     equ.s     57 | Equivalence | 11 |         |    0 | 00/8000               | GETBUFR              equ      $bef5                
  205 |  3     equ.s     58 | Equivalence | 11 |         |    0 | 00/8000               | FREEBUFR             equ      $BEF8                
  206 |  3     equ.s     59 | Equivalence | 11 |         |    0 | 00/8000               | devnum               equ      $BF30                ; last used device here, format : DSSS0000
  207 |  3     equ.s     60 | Equivalence | 11 |         |    0 | 00/8000               | RSHIMEM              equ      $BEFB                
  208 |  3     equ.s     61 | Comment     | 11 |         |    0 | 00/8000               | *
  209 |  3     equ.s     62 | Comment     | 11 |         |    0 | 00/8000               | ************ MLI calls (ProDOS) ************
  210 |  3     equ.s     63 | Equivalence | 11 |         |    0 | 00/8000               | MLI                  equ      $BF00                
  211 |  3     equ.s     64 | Equivalence | 11 |         |    0 | 00/8000               | create               equ      $C0                  
  212 |  3     equ.s     65 | Equivalence | 11 |         |    0 | 00/8000               | destroy              equ      $C1                  
  213 |  3     equ.s     66 | Equivalence | 11 |         |    0 | 00/8000               | online               equ      $C5                  
  214 |  3     equ.s     67 | Equivalence | 11 |         |    0 | 00/8000               | getprefix            equ      $c7                  
  215 |  3     equ.s     68 | Equivalence | 11 |         |    0 | 00/8000               | setprefix            equ      $c6                  
  216 |  3     equ.s     69 | Equivalence | 11 |         |    0 | 00/8000               | open                 equ      $C8                  
  217 |  3     equ.s     70 | Equivalence | 11 |         |    0 | 00/8000               | close                equ      $CC                  
  218 |  3     equ.s     71 | Equivalence | 11 |         |    0 | 00/8000               | read                 equ      $CA                  
  219 |  3     equ.s     72 | Equivalence | 11 |         |    0 | 00/8000               | write                equ      $CB                  
  220 |  3     equ.s     73 | Equivalence | 11 |         |    0 | 00/8000               | setmark              equ      $ce                  
  221 |  3     equ.s     74 | Equivalence | 11 |         |    0 | 00/8000               | geteof               equ      $d1                  
  222 |  3     equ.s     75 | Equivalence | 11 |         |    0 | 00/8000               | quit                 equ      $65                  
  223 |  3     equ.s     76 | Comment     | 11 |         |    0 | 00/8000               | *
  224 |  3     equ.s     77 | Comment     | 11 |         |    0 | 00/8000               | ************ FP routines ************
  225 |  3     equ.s     78 | Equivalence | 11 |         |    0 | 00/8000               | float                equ      $E2F2                ; Converts SIGNED integer in A/Y (high/lo) into FAC
  226 |  3     equ.s     79 | Equivalence | 11 |         |    0 | 00/8000               | GIVAYF               equ      $E2F2                ; idem
  227 |  3     equ.s     80 | Equivalence | 11 |         |    0 | 00/8000               | FLOAT2               equ      $EBA0                ; "Float2" entry point (https://6502disassembly.com/a2-rom/Applesoft.html#SymLDAB7)
  228 |  3     equ.s     81 | Comment     | 11 |         |    0 | 00/8000               |                                 ; Float UNSIGNED value in FAC+1,2 (hi,low)
  229 |  3     equ.s     82 | Comment     | 11 |         |    0 | 00/8000               |                                 ; X-reg = exponent ; C=0 to make value negative, C=1 to make value positive
  230 |  3     equ.s     83 | Empty       | 11 |         |    0 | 00/8000               |                                                    
  231 |  3     equ.s     84 | Equivalence | 11 |         |    0 | 00/8000               | PRNTFAC              equ      $ED2E                ; Prints number in FAC (in decimal format). FAC is destroyed
  232 |  3     equ.s     85 | Equivalence | 11 |         |    0 | 00/8000               | FIN                  equ      $EC4A                ; FAC = expression pointed TXTPTR
  233 |  3     equ.s     86 | Equivalence | 11 |         |    0 | 00/8000               | FNEG                 equ      $EED0                ; FAC = - FAC
  234 |  3     equ.s     87 | Equivalence | 11 |         |    0 | 00/8000               | FABS                 equ      $EBAF                ; FAC = ABS(FAC)
  235 |  3     equ.s     88 | Equivalence | 11 |         |    0 | 00/8000               | F2INT16              equ      $E752                ; FAC to 16 bits int in A/Y and $50/51 (low/high)
  236 |  3     equ.s     89 | Equivalence | 11 |         |    0 | 00/8000               | FADD                 equ      $E7BE                ; FAC = FAC + ARG
  237 |  3     equ.s     90 | Equivalence | 11 |         |    0 | 00/8000               | FSUBT                equ      $E7AA                ; FAC = FAC - ARG
  238 |  3     equ.s     91 | Equivalence | 11 |         |    0 | 00/8000               | FMULT                equ      $E97F                ; Move the number pointed by Y,A into ARG and fall into FMULTT
  239 |  3     equ.s     92 | Equivalence | 11 |         |    0 | 00/8000               | FMULTT               equ      $E982                ; FAC = FAC x ARG
  240 |  3     equ.s     93 | Equivalence | 11 |         |    0 | 00/8000               | FDIVT                equ      $EA69                ; FAC = FAC / ARG
  241 |  3     equ.s     94 | Equivalence | 11 |         |    0 | 00/8000               | RND                  equ      $EFAE                ; FAC = random number
  242 |  3     equ.s     95 | Equivalence | 11 |         |    0 | 00/8000               | FOUT                 equ      $ED34                ; Create a string at the start of the stack ($100−$110)
  243 |  3     equ.s     96 | Equivalence | 11 |         |    0 | 00/8000               | MOVAF                equ      $EB63                ; Move FAC into ARG. On exit A=FACEXP and Z is set
  244 |  3     equ.s     97 | Equivalence | 11 |         |    0 | 00/8000               | CONINT               equ      $E6FB                ; Convert FAC into a single byte number in X and FACLO
  245 |  3     equ.s     98 | Equivalence | 11 |         |    0 | 00/8000               | YTOFAC               equ      $E301                ; Float y
  246 |  3     equ.s     99 | Equivalence | 11 |         |    0 | 00/8000               | MOVMF                equ      $EB2B                ; Routine to pack FP number. Address of destination must be in Y
  247 |  3     equ.s    100 | Comment     | 11 |         |    0 | 00/8000               |                                 ; (high) and X (low). Result is packed from FAC                             
  248 |  3     equ.s    101 | Equivalence | 11 |         |    0 | 00/8000               | QUINT                equ      $EBF2                ; convert fac to 16bit INT at $A0 and $A1 (fac+3/fac+4)
  249 |  3     equ.s    102 | Equivalence | 11 |         |    0 | 00/8000               | STROUT               equ      $DB3A                ;
  250 |  3     equ.s    103 | Equivalence | 11 |         |    0 | 00/8000               | LINPRT               equ      $ED24                ; Converts the unsigned hexadecimal number in X (low) and A (high) into a decimal number and displays it.
  251 |  3     equ.s    104 | Empty       | 11 |         |    0 | 00/8000               |                                                    
  252 |  3     equ.s    105 | Comment     | 11 |         |    0 | 00/8000               | * A intégrer :
  253 |  3     equ.s    106 | Comment     | 11 |         |    0 | 00/8000               | *FSUB = $E7A7    OVERFLOW = $E8D5        ONE = $E913        FLOG = $E941    CONUPK = $E9E3  MUL10 = $EA39 
  254 |  3     equ.s    107 | Comment     | 11 |         |    0 | 00/8000               | * FDIV = $EA66        DIVERR = $EAE1        MOVFM = $EAF9    FLOAT = $EB93        FCOMP = $EBB2      
  255 |  3     equ.s    108 | Comment     | 11 |         |    0 | 00/8000               | * FINT = $EC23   SQR = $EE8D        FPWRT = $EE9    FEXP = $EF09      FCOS = $EFEA    FSIN = $EFF1  FTAN = $F03A 
  256 |  3     equ.s    109 | Comment     | 11 |         |    0 | 00/8000               | * PIHALF = $F066   FATN = $F09E        
  257 |  3     equ.s    110 | Comment     | 11 |         |    0 | 00/8000               | *
  258 |  3     equ.s    111 | Comment     | 11 |         |    0 | 00/8000               | ************ Applesoft BASIC ************
  259 |  3     equ.s    112 | Equivalence | 11 |         |    0 | 00/8000               | TXTTAB               equ      $67                  ; $67/$68 address of beginning of BASIC Program ($0801 is default)
  260 |  3     equ.s    113 | Equivalence | 11 |         |    0 | 00/8000               | PRGEND               equ      $AF                  ; $AF/$B0 address of end of Applesoft program plus 1 or 2 of BASIC
  261 |  3     equ.s    114 | Equivalence | 11 |         |    0 | 00/8000               | VARTAB               equ      $69                  ; $69/$6A address of beginning of simple variables, just after Basic prog. (unless modified by LOMEN)
  262 |  3     equ.s    115 | Equivalence | 11 |         |    0 | 00/8000               | ARYTAB               equ      $6B                  ; $6B/$6C addresse of beginning of array variables, just after simple variables
  263 |  3     equ.s    116 | Equivalence | 11 |         |    0 | 00/8000               | STREND               equ      $6D                  ; $6D/$6E addresse of end of array variables
  264 |  3     equ.s    117 | Equivalence | 11 |         |    0 | 00/8000               | MEMSIZ               equ      $73                  ; $73/$74 : top of string data, set by HIMEM: (usually $9600),
  265 |  3     equ.s    118 | Equivalence | 11 |         |    0 | 00/8000               | FRETOP               equ      $6F                  ; $6F/$70 bottom of string data, growing downwards
  266 |  3     equ.s    119 | Equivalence | 11 |         |    0 | 00/8000               | CHRGOT               equ      $B7                  ; get char pointed by TXTPTR in A
  267 |  3     equ.s    120 | Equivalence | 11 |         |    0 | 00/8000               | CHRGET               equ      $B1                  ; advance TXTPRT and read char
  268 |  3     equ.s    121 | Equivalence | 11 |         |    0 | 00/8000               | TXTPTR               equ      $B8                  ; pointer $B8/$B9 used in chrget and chrgot
  269 |  3     equ.s    122 | Equivalence | 11 |         |    0 | 00/8000               | CHKCOM               equ      $DEBE                ; check for comma and move TXTPTR forward
  270 |  3     equ.s    123 | Equivalence | 11 |         |    0 | 00/8000               | FRMNUM               equ      $DD67                ; eval num. value, variable, expression pointed by TXTPTR, advance TXTPTR
  271 |  3     equ.s    124 | Equivalence | 11 |         |    0 | 00/8000               | GETADR               equ      $E752                ; convert FAC to integer (to Y,A)
  272 |  3     equ.s    125 | Equivalence | 11 |         |    0 | 00/8000               | FRMEVL               equ      $DD7B                ; evaluate any expression, result in FAC.
  273 |  3     equ.s    126 | Equivalence | 11 |         |    0 | 00/8000               | FRESTR               equ      $E5FD                ; check if epression is a string. A = length, pointer in $5E/$5F
  274 |  3     equ.s    127 | Equivalence | 11 |         |    0 | 00/8000               | ERRDIR               equ      $E306                ; illegal direct if not running
  275 |  3     equ.s    128 | Empty       | 11 |         |    0 | 00/8000               |                                                    
  276 |  3     equ.s    129 | Equivalence | 11 |         |    0 | 00/8000               | PTRGET               equ      $DFE3                ; On entry, TXTPTR must be pointing to the first character of the variable's name.
  277 |  3     equ.s    130 | Comment     | 11 |         |    0 | 00/8000               | * finds an Applesoft variable's memory address and puts a pointer to it in VARPNT ($83-$84) and in A/Y (low/hi). 
  278 |  3     equ.s    131 | Comment     | 11 |         |    0 | 00/8000               | * The variable's name is left in VARNAM ($81-$82). It will work with any type of variable (integer, array element, string..)
  279 |  3     equ.s    132 | Comment     | 11 |         |    0 | 00/8000               | * If the variable does not already exist, PTRGET will create it for you
  280 |  3     equ.s    133 | Comment     | 11 |         |    0 | 00/8000               | * Advances TXTPTR.
  281 |  3     equ.s    134 | Comment     | 11 |         |    0 | 00/8000               | * Set : vartype equ $11 ; str$=$ff, num=$00 
  282 |  3     equ.s    135 | Comment     | 11 |         |    0 | 00/8000               | * set : numtype equ $12 ; int =$80, real = $00
  283 |  3     equ.s    136 | Empty       | 11 |         |    0 | 00/8000               |                                                    
  284 |  3     equ.s    137 | Equivalence | 11 |         |    0 | 00/8000               | CHKNUM               equ      $DD6A                ; verifies that the most recent var found by PTRGET was numeric.
  285 |  3     equ.s    138 | Comment     | 11 |         |    0 | 00/8000               |  *  https://www.brutaldeluxe.fr/documentation/thesourcerorsapprentice/thesourcerorsapprentice_v1n1.pdf
  286 |  3     equ.s    139 | Comment     | 11 |         |    0 | 00/8000               |  * Type mismatch error if var not numeric
  287 |  3     equ.s    140 | Empty       | 11 |         |    0 | 00/8000               |                                                    
  288 |  1 asmdemo.s     33 | Comment     | 11 |         |    0 | 00/8000               |                               ; loading address of "TEST.FONT" file
  289 |  1 asmdemo.s     34 | Comment     | 11 |         |    0 | 00/8000               | *<sym>
  290 |  1 asmdemo.s     35 | Equivalence | 11 |         |    0 | 00/8000               | ptr                  equ      $06                  
  291 |  1 asmdemo.s     36 | Comment     | 11 |         |    0 | 00/8000               | *
  292 |  1 asmdemo.s     37 | Comment     | 11 |         |    0 | 00/8000               | **************************** MAIN PROGRAM ****************************
  293 |  1 asmdemo.s     38 | Comment     | 11 |         |    0 | 00/8000               | *
  294 |  1 asmdemo.s     39 | Directive   | 11 |         |    0 | 00/8000               |                      org      $E00                 
  295 |  1 asmdemo.s     40 | Empty       | 11 |         |    0 | 00/0E00               |                                                    
  296 |  1 asmdemo.s     41 | Code        | 11 |         |    2 | 00/0E00 : A9 04       |                      lda      #4                   ; get 4 pages for 1024 file buffer
  297 |  1 asmdemo.s     42 | Code        | 11 |         |    3 | 00/0E02 : 20 F5 BE    |                      jsr      {$bef5}              ; needed by MLI OPEN
  298 |  1 asmdemo.s     43 | Code        | 11 |         |    2 | 00/0E05 : 90 03       |                      bcc      GetbufOK             ; carry clear means no error in the following code
  299 |  1 asmdemo.s     44 | Code        | 11 |         |    3 | 00/0E07 : 4C 0F 0F    |                      jmp      dataerr              ; carry set means error
  300 |  1 asmdemo.s     45 | Empty       | 11 |         |    0 | 00/0E0A               |                                                    
  301 |  1 asmdemo.s     46 | Comment     | 11 |         |    0 | 00/0E0A               | *<sym>
  302 |  1 asmdemo.s     47 | Empty       | 11 |         |    0 | 00/0E0A               | GetbufOK                                           
  303 |  1 asmdemo.s     48 | Code        | 11 |         |    3 | 00/0E0A : 8D E6 12    |                      sta      fbuff+1              ; set file buffer for OPEN param
  304 |  1 asmdemo.s     49 | Code        | 11 |         |    3 | 00/0E0D : 20 8D 12    |                      jsr      doprefix             ; set prefix
  305 |  1 asmdemo.s     50 | Code        | 11 |         |    2 | 00/0E10 : 90 03       |                      bcc      doprefixOK           
  306 |  1 asmdemo.s     51 | Code        | 11 |         |    3 | 00/0E12 : 4C 0F 0F    |                      jmp      dataerr              
  307 |  1 asmdemo.s     52 | Comment     | 11 |         |    0 | 00/0E15               | *<sym>
  308 |  1 asmdemo.s     53 | Empty       | 11 |         |    0 | 00/0E15               | doprefixOK                                         
  309 |  1 asmdemo.s     54 | Empty       | 11 |         |    0 | 00/0E15               |                                                    
  310 |  1 asmdemo.s     55 | Code        | 11 |         |    3 | 00/0E15 : 20 C1 11    |                      jsr      openBMP              ; open and load BMP file in memory
  311 |  1 asmdemo.s     56 | Code        | 11 |         |    2 | 00/0E18 : 90 03       |                      bcc      BMPok                
  312 |  1 asmdemo.s     57 | Code        | 11 |         |    3 | 00/0E1A : 4C 0F 0F    |                      jmp      dataerr              ; exit with error
  313 |  1 asmdemo.s     58 | Comment     | 11 |         |    0 | 00/0E1D               | *<sym>
  314 |  1 asmdemo.s     59 | Empty       | 11 |         |    0 | 00/0E1D               | BMPok                                              
  315 |  1 asmdemo.s     60 | Code        | 11 |         |    3 | 00/0E1D : 20 4E 0E    |                      jsr      DoHeader             ; check header of BMP data and set vars
  316 |  1 asmdemo.s     61 | Code        | 11 |         |    2 | 00/0E20 : 90 03       |                      bcc      headerOK             ; exit on error if carry set
  317 |  1 asmdemo.s     62 | Code        | 11 |         |    3 | 00/0E22 : 4C 0F 0F    |                      jmp      dataerr              ; exit with error
  318 |  1 asmdemo.s     63 | Comment     | 11 |         |    0 | 00/0E25               | *<sym>
  319 |  1 asmdemo.s     64 | Empty       | 11 |         |    0 | 00/0E25               | headerOK                                           
  320 |  1 asmdemo.s     65 | Macro       | 11 |         |    0 | 00/0E25               |                      GP_call  {1};0                ; go DHGR mode using Graphics Primitives library
  321 |  1 asmdemo.s     65 | Code        | 11 |         |    3 | 00/0E25 : 20 00 40    |                      jsr      {$4000}              ; graphic primitives only entry point
  322 |  1 asmdemo.s     65 | Data        | 11 |         |    1 | 00/0E28 : 01          |                      dfb      {1}                  ; command ID (1 byte)
  323 |  1 asmdemo.s     65 | Data        | 11 |         |    2 | 00/0E29 : 00 00       |                      da       0                    ; address of parameter(s) (2 bytes), 0 if no paramter
  324 |  1 asmdemo.s     66 | Macro       | 11 |         |    0 | 00/0E2B               |                      GP_call  {{{1}+1}+1};MyPort   
  325 |  1 asmdemo.s     66 | Code        | 11 |         |    3 | 00/0E2B : 20 00 40    |                      jsr      {$4000}              ; graphic primitives only entry point
  326 |  1 asmdemo.s     66 | Data        | 11 |         |    1 | 00/0E2E : 03          |                      dfb      {{{1}+1}+1}          ; command ID (1 byte)
  327 |  1 asmdemo.s     66 | Data        | 11 |         |    2 | 00/0E2F : 24 0F       |                      da       MyPort               ; address of parameter(s) (2 bytes), 0 if no paramter
  328 |  1 asmdemo.s     67 | Macro       | 11 |         |    0 | 00/0E31               |                      GP_call  {{{{1}+1}+1}+1};MyPort
  329 |  1 asmdemo.s     67 | Code        | 11 |         |    3 | 00/0E31 : 20 00 40    |                      jsr      {$4000}              ; graphic primitives only entry point
  330 |  1 asmdemo.s     67 | Data        | 11 |         |    1 | 00/0E34 : 04          |                      dfb      {{{{1}+1}+1}+1}      ; command ID (1 byte)
  331 |  1 asmdemo.s     67 | Data        | 11 |         |    2 | 00/0E35 : 24 0F       |                      da       MyPort               ; address of parameter(s) (2 bytes), 0 if no paramter
  332 |  1 asmdemo.s     68 | Comment     | 11 |         |    0 | 00/0E37               | *<sym>
  333 |  1 asmdemo.s     69 | Empty       | 11 |         |    0 | 00/0E37               | startimage                                         
  334 |  1 asmdemo.s     70 | Comment     | 11 |         |    0 | 00/0E37               | *<bp>
  335 |  1 asmdemo.s     71 | Code        | 11 |         |    3 | 00/0E37 : 20 CA 0F    |                      jsr      Doimg                ; display image
  336 |  1 asmdemo.s     72 | Code        | 11 |         |    2 | 00/0E3A : A9 00       |                      lda      #0                   ; init quif flag
  337 |  1 asmdemo.s     73 | Code        | 11 |         |    3 | 00/0E3C : 8D 67 0F    |                      sta      quitflag             
  338 |  1 asmdemo.s     74 | Code        | 11 |         |    3 | 00/0E3F : 20 9B 11    |                      jsr      WaitForKeyPress      ;
  339 |  1 asmdemo.s     75 | Code        | 11 |         |    3 | 00/0E42 : 20 71 11    |                      jsr      DoKey                ; process key
  340 |  1 asmdemo.s     76 | Code        | 11 |         |    3 | 00/0E45 : AD 67 0F    |                      lda      quitflag             ; test quit flag (=1 if escape key)
  341 |  1 asmdemo.s     77 | Code        | 11 |         |    2 | 00/0E48 : F0 ED       |                      beq      startimage           ; if 0 then loop
  342 |  1 asmdemo.s     78 | Code        | 11 |         |    3 | 00/0E4A : 20 1D 12    |                      jsr      DoTextScreen         ; else set text screen
  343 |  1 asmdemo.s     79 | Code        | 11 |         |    1 | 00/0E4D : 60          |                      rts                           ; END OF PROGRAM (without error)
  344 |  1 asmdemo.s     80 | Comment     | 11 |         |    0 | 00/0E4E               | *
  345 |  1 asmdemo.s     81 | Comment     | 11 |         |    0 | 00/0E4E               | *********************************************************************
  346 |  1 asmdemo.s     82 | Comment     | 11 |         |    0 | 00/0E4E               | *
  347 |  1 asmdemo.s     83 | Comment     | 11 |         |    0 | 00/0E4E               | *<sym>
  348 |  1 asmdemo.s     84 | Empty       | 11 |         |    0 | 00/0E4E               | DoHeader                                           
  349 |  1 asmdemo.s     85 | Comment     | 11 |         |    0 | 00/0E4E               | * check image specs.
  350 |  1 asmdemo.s     86 | Code        | 11 |         |    3 | 00/0E4E : 20 FD 0E    |                      jsr      TestSignature        ; test BMP signature
  351 |  1 asmdemo.s     87 | Code        | 11 |         |    2 | 00/0E51 : 90 01       |                      bcc      oksign               ; exit on error if carry set
  352 |  1 asmdemo.s     88 | Code        | 11 |         |    1 | 00/0E53 : 60          |                      rts                           
  353 |  1 asmdemo.s     89 | Comment     | 11 |         |    0 | 00/0E54               | *<sym>
  354 |  1 asmdemo.s     90 | Empty       | 11 |         |    0 | 00/0E54               | oksign                                             
  355 |  1 asmdemo.s     91 | Comment     | 11 |         |    0 | 00/0E54               | * get file length
  356 |  1 asmdemo.s     92 | Code        | 11 |         |    2 | 00/0E54 : A2 02       |                      ldx      #2                   ; offset to file length in BMP header
  357 |  1 asmdemo.s     93 | Code        | 11 |         |    3 | 00/0E56 : BD 00 60    |                      lda      {$6000},x            
  358 |  1 asmdemo.s     94 | Code        | 11 |         |    3 | 00/0E59 : 8D F3 0E    |                      sta      filelen              
  359 |  1 asmdemo.s     95 | Code        | 11 |         |    1 | 00/0E5C : E8          |                      inx                           
  360 |  1 asmdemo.s     96 | Code        | 11 |         |    3 | 00/0E5D : BD 00 60    |                      lda      {$6000},x            
  361 |  1 asmdemo.s     97 | Code        | 11 |         |    3 | 00/0E60 : 8D F4 0E    |                      sta      filelen+1            
  362 |  1 asmdemo.s     98 | Comment     | 11 |         |    0 | 00/0E63               | * check file length
  363 |  1 asmdemo.s     99 | Code        | 11 |         |    3 | 00/0E63 : AD F4 0E    |                      lda      filelen+1            
  364 |  1 asmdemo.s    100 | Code        | 11 |         |    2 | 00/0E66 : C9 20       |                      cmp      #>{$2000}            
  365 |  1 asmdemo.s    101 | Code        | 11 |         |    2 | 00/0E68 : D0 05       |                      bne      ozunid_1             
  366 |  1 asmdemo.s    102 | Code        | 11 |         |    3 | 00/0E6A : AD F3 0E    |                      lda      filelen              
  367 |  1 asmdemo.s    103 | Code        | 11 |         |    2 | 00/0E6D : C9 00       |                      cmp      #<{$2000}            
  368 |  1 asmdemo.s    104 | Code        | 11 |         |    2 | 00/0E6F : 90 06       | ozunid_1             bcc      lower                
  369 |  1 asmdemo.s    105 | Code        | 11 |         |    2 | 00/0E71 : D0 02       |                      bne      higher               
  370 |  1 asmdemo.s    106 | Code        | 11 |         |    2 | 00/0E73 : F0 02       |                      beq      samelength           
  371 |  1 asmdemo.s    107 | Comment     | 11 |         |    0 | 00/0E75               | *<sym>
  372 |  1 asmdemo.s    108 | Empty       | 11 |         |    0 | 00/0E75               | higher                                             
  373 |  1 asmdemo.s    109 | Code        | 11 |         |    1 | 00/0E75 : 38          |                      sec                           ; size is too big
  374 |  1 asmdemo.s    110 | Code        | 11 |         |    1 | 00/0E76 : 60          |                      rts                           
  375 |  1 asmdemo.s    111 | Comment     | 11 |         |    0 | 00/0E77               | *<sym>
  376 |  1 asmdemo.s    112 | Empty       | 11 |         |    0 | 00/0E77               | samelength                                         ; file length = max : OK
  377 |  1 asmdemo.s    113 | Comment     | 11 |         |    0 | 00/0E77               | *<sym>
  378 |  1 asmdemo.s    114 | Empty       | 11 |         |    0 | 00/0E77               | lower                                              ; file length < max : OK
  379 |  1 asmdemo.s    115 | Code        | 11 |         |    2 | 00/0E77 : A2 12       |                      ldx      #$12                 ; get image width in BMP header
  380 |  1 asmdemo.s    116 | Code        | 11 |         |    3 | 00/0E79 : BD 00 60    |                      lda      {$6000},x            
  381 |  1 asmdemo.s    117 | Code        | 11 |         |    3 | 00/0E7C : 8D F5 0E    |                      sta      hdef                 ; set hdef var accordingly
  382 |  1 asmdemo.s    118 | Code        | 11 |         |    1 | 00/0E7F : E8          |                      inx                           
  383 |  1 asmdemo.s    119 | Code        | 11 |         |    3 | 00/0E80 : BD 00 60    |                      lda      {$6000},x            
  384 |  1 asmdemo.s    120 | Code        | 11 |         |    3 | 00/0E83 : 8D F6 0E    |                      sta      hdef+1               
  385 |  1 asmdemo.s    121 | Code        | 11 |         |    2 | 00/0E86 : A2 16       |                      ldx      #$16                 ; get image height in BMP header
  386 |  1 asmdemo.s    122 | Code        | 11 |         |    3 | 00/0E88 : BD 00 60    |                      lda      {$6000},x            
  387 |  1 asmdemo.s    123 | Code        | 11 |         |    3 | 00/0E8B : 8D F7 0E    |                      sta      vdef                 ; set hdef var accordingly
  388 |  1 asmdemo.s    124 | Code        | 11 |         |    1 | 00/0E8E : E8          |                      inx                           
  389 |  1 asmdemo.s    125 | Code        | 11 |         |    3 | 00/0E8F : BD 00 60    |                      lda      {$6000},x            
  390 |  1 asmdemo.s    126 | Code        | 11 |         |    3 | 00/0E92 : 8D F8 0E    |                      sta      vdef+1               
  391 |  1 asmdemo.s    127 | Empty       | 11 |         |    0 | 00/0E95               |                                                    
  392 |  1 asmdemo.s    128 | Code        | 11 |         |    3 | 00/0E95 : AD F6 0E    |                      lda      hdef+1               ; width must be <= maxwidth
  393 |  1 asmdemo.s    129 | Empty       | 11 |         |    0 | 00/0E98               |                                                    
  394 |  1 asmdemo.s    130 | Code        | 11 |         |    2 | 00/0E98 : C9 01       |                      cmp      #>{280}              
  395 |  1 asmdemo.s    131 | Code        | 11 |         |    2 | 00/0E9A : D0 05       |                      bne      ozunid_2             
  396 |  1 asmdemo.s    132 | Code        | 11 |         |    3 | 00/0E9C : AD F5 0E    |                      lda      hdef                 
  397 |  1 asmdemo.s    133 | Code        | 11 |         |    2 | 00/0E9F : C9 18       |                      cmp      #<{280}              
  398 |  1 asmdemo.s    134 | Code        | 11 |         |    2 | 00/0EA1 : 90 06       | ozunid_2             bcc      goodw                
  399 |  1 asmdemo.s    135 | Code        | 11 |         |    2 | 00/0EA3 : D0 02       |                      bne      badw                 
  400 |  1 asmdemo.s    136 | Code        | 11 |         |    2 | 00/0EA5 : F0 02       |                      beq      goodw                
  401 |  1 asmdemo.s    137 | Comment     | 11 |         |    0 | 00/0EA7               | *<sym>
  402 |  1 asmdemo.s    138 | Empty       | 11 |         |    0 | 00/0EA7               | badw                                               
  403 |  1 asmdemo.s    139 | Code        | 11 |         |    1 | 00/0EA7 : 38          |                      sec                           ; width is too large
  404 |  1 asmdemo.s    140 | Code        | 11 |         |    1 | 00/0EA8 : 60          |                      rts                           
  405 |  1 asmdemo.s    141 | Comment     | 11 |         |    0 | 00/0EA9               | *<sym>
  406 |  1 asmdemo.s    142 | Empty       | 11 |         |    0 | 00/0EA9               | goodw                                              
  407 |  1 asmdemo.s    143 | Code        | 11 |         |    3 | 00/0EA9 : AD F8 0E    |                      lda      vdef+1               ; height must be <= maxheight
  408 |  1 asmdemo.s    144 | Code        | 11 |         |    2 | 00/0EAC : C9 00       |                      cmp      #>{192}              
  409 |  1 asmdemo.s    145 | Code        | 11 |         |    2 | 00/0EAE : D0 05       |                      bne      ozunid_3             
  410 |  1 asmdemo.s    146 | Code        | 11 |         |    3 | 00/0EB0 : AD F7 0E    |                      lda      vdef                 
  411 |  1 asmdemo.s    147 | Code        | 11 |         |    2 | 00/0EB3 : C9 C0       |                      cmp      #<{192}              
  412 |  1 asmdemo.s    148 | Code        | 11 |         |    2 | 00/0EB5 : 90 04       | ozunid_3             bcc      goodh                
  413 |  1 asmdemo.s    149 | Code        | 11 |         |    2 | 00/0EB7 : D0 EE       |                      bne      badw                 
  414 |  1 asmdemo.s    150 | Code        | 11 |         |    2 | 00/0EB9 : F0 00       |                      beq      goodh                
  415 |  1 asmdemo.s    151 | Comment     | 11 |         |    0 | 00/0EBB               | *<sym>
  416 |  1 asmdemo.s    152 | Empty       | 11 |         |    0 | 00/0EBB               | goodh                                              
  417 |  1 asmdemo.s    153 | Code        | 11 |         |    3 | 00/0EBB : AD F7 0E    |                      lda      vdef                 ; vdef = vdef -1 : tranform img def (1 to n)
  418 |  1 asmdemo.s    154 | Code        | 11 |         |    2 | 00/0EBE : D0 03       |                      bne      ozunid_4             ; to screen coordinate (0 to def-1)
  419 |  1 asmdemo.s    155 | Code        | 11 |         |    3 | 00/0EC0 : CE F8 0E    |                      dec      vdef+1               
  420 |  1 asmdemo.s    156 | Code        | 11 |         |    3 | 00/0EC3 : CE F7 0E    | ozunid_4             dec      vdef                 
  421 |  1 asmdemo.s    157 | Empty       | 11 |         |    0 | 00/0EC6               |                                                    
  422 |  1 asmdemo.s    158 | Code        | 11 |         |    2 | 00/0EC6 : A2 1C       |                      ldx      #$1C                 ; offset to image depth (# of bits per pixel)
  423 |  1 asmdemo.s    159 | Code        | 11 |         |    3 | 00/0EC8 : BD 00 60    |                      lda      {$6000},x            ; get value
  424 |  1 asmdemo.s    160 | Code        | 11 |         |    2 | 00/0ECB : C9 01       |                      cmp      #1                   ; must be 1
  425 |  1 asmdemo.s    161 | Code        | 11 |         |    2 | 00/0ECD : F0 02       |                      beq      gooddepth            
  426 |  1 asmdemo.s    162 | Code        | 11 |         |    1 | 00/0ECF : 38          |                      sec                           ; <> 1 bit per pixel
  427 |  1 asmdemo.s    163 | Code        | 11 |         |    1 | 00/0ED0 : 60          |                      rts                           
  428 |  1 asmdemo.s    164 | Comment     | 11 |         |    0 | 00/0ED1               | *<sym>
  429 |  1 asmdemo.s    165 | Empty       | 11 |         |    0 | 00/0ED1               | gooddepth                                          
  430 |  1 asmdemo.s    166 | Code        | 11 |         |    2 | 00/0ED1 : A2 0A       |                      ldx      #$A                  ; get image offset in BMP header
  431 |  1 asmdemo.s    167 | Comment     | 11 |         |    0 | 00/0ED3               |                                         ; image data start @ bmp+imgoffset
  432 |  1 asmdemo.s    168 | Code        | 11 |         |    3 | 00/0ED3 : BD 00 60    |                      lda      {$6000},x            
  433 |  1 asmdemo.s    169 | Code        | 11 |         |    3 | 00/0ED6 : 8D F9 0E    |                      sta      imgoffset            
  434 |  1 asmdemo.s    170 | Code        | 11 |         |    1 | 00/0ED9 : E8          |                      inx                           
  435 |  1 asmdemo.s    171 | Code        | 11 |         |    3 | 00/0EDA : BD 00 60    |                      lda      {$6000},x            
  436 |  1 asmdemo.s    172 | Code        | 11 |         |    3 | 00/0EDD : 8D FA 0E    |                      sta      imgoffset+1          
  437 |  1 asmdemo.s    173 | Empty       | 11 |         |    0 | 00/0EE0               |                                                    
  438 |  1 asmdemo.s    174 | Code        | 11 |         |    2 | 00/0EE0 : A9 00       |                      lda      #<{$6000}            ; set pointer to beginning of image data
  439 |  1 asmdemo.s    175 | Code        | 11 |         |    1 | 00/0EE2 : 18          |                      clc                           
  440 |  1 asmdemo.s    176 | Code        | 11 |         |    3 | 00/0EE3 : 6D F9 0E    |                      adc      imgoffset            
  441 |  1 asmdemo.s    177 | Code        | 11 |         |    3 | 00/0EE6 : 8D FB 0E    |                      sta      imgdata              
  442 |  1 asmdemo.s    178 | Code        | 11 |         |    2 | 00/0EE9 : A9 60       |                      lda      #>{$6000}            
  443 |  1 asmdemo.s    179 | Code        | 11 |         |    3 | 00/0EEB : 6D FA 0E    |                      adc      imgoffset+1          
  444 |  1 asmdemo.s    180 | Code        | 11 |         |    3 | 00/0EEE : 8D FC 0E    |                      sta      imgdata+1            
  445 |  1 asmdemo.s    181 | Code        | 11 |         |    1 | 00/0EF1 : 18          |                      clc                           
  446 |  1 asmdemo.s    182 | Code        | 11 |         |    1 | 00/0EF2 : 60          |                      rts                           
  447 |  1 asmdemo.s    183 | Comment     | 11 |         |    0 | 00/0EF3               | *<sym>
  448 |  1 asmdemo.s    184 | Data        | 11 |         |    2 | 00/0EF3 : 00 00       | filelen              ds       2                    
  449 |  1 asmdemo.s    185 | Comment     | 11 |         |    0 | 00/0EF5               | *<syme>
  450 |  1 asmdemo.s    186 | Equivalence | 11 |         |    0 | 00/0EF5               | maxlen               equ      $2000                ; 8 k for image (between $6000 and $7FFF)
  451 |  1 asmdemo.s    187 | Comment     | 11 |         |    0 | 00/0EF5               | *<syme>
  452 |  1 asmdemo.s    188 | Equivalence | 11 |         |    0 | 00/0EF5               | maxwidth             equ      280                  ; = 560 / 2 (each pixel is doubled in width)
  453 |  1 asmdemo.s    189 | Comment     | 11 |         |    0 | 00/0EF5               | *<syme>
  454 |  1 asmdemo.s    190 | Equivalence | 11 |         |    0 | 00/0EF5               | maxheight            equ      192                  ; screen height in pixels
  455 |  1 asmdemo.s    191 | Comment     | 11 |         |    0 | 00/0EF5               | *<sym>
  456 |  1 asmdemo.s    192 | Data        | 11 |         |    2 | 00/0EF5 : 00 00       | hdef                 ds       2                    ; image width
  457 |  1 asmdemo.s    193 | Comment     | 11 |         |    0 | 00/0EF7               | *<sym>
  458 |  1 asmdemo.s    194 | Data        | 11 |         |    2 | 00/0EF7 : 00 00       | vdef                 ds       2                    ; image height
  459 |  1 asmdemo.s    195 | Comment     | 11 |         |    0 | 00/0EF9               | *<sym>
  460 |  1 asmdemo.s    196 | Data        | 11 |         |    2 | 00/0EF9 : 00 00       | imgoffset            ds       2                    ; offset to image data (over BMP header)
  461 |  1 asmdemo.s    197 | Comment     | 11 |         |    0 | 00/0EFB               | *<sym>
  462 |  1 asmdemo.s    198 | Empty       | 11 |         |    0 | 00/0EFB               | imgdata                                            
  463 |  1 asmdemo.s    199 | Data        | 11 |         |    2 | 00/0EFB : 00 00       |                      ds       2                    ; address of image data
  464 |  1 asmdemo.s    200 | Comment     | 11 |         |    0 | 00/0EFD               | *
  465 |  1 asmdemo.s    201 | Comment     | 11 |         |    0 | 00/0EFD               | *
  466 |  1 asmdemo.s    202 | Comment     | 11 |         |    0 | 00/0EFD               | *<sym>
  467 |  1 asmdemo.s    203 | Empty       | 11 |         |    0 | 00/0EFD               | TestSignature                                      
  468 |  1 asmdemo.s    204 | Code        | 11 |         |    3 | 00/0EFD : AD 00 60    |                      lda      {$6000}              ; test signature
  469 |  1 asmdemo.s    205 | Code        | 11 |         |    2 | 00/0F00 : C9 42       |                      cmp      #'B'                 
  470 |  1 asmdemo.s    206 | Code        | 11 |         |    2 | 00/0F02 : D0 07       |                      bne      errSign              
  471 |  1 asmdemo.s    207 | Code        | 11 |         |    3 | 00/0F04 : AD 01 60    |                      lda      {$6000}+1            
  472 |  1 asmdemo.s    208 | Code        | 11 |         |    2 | 00/0F07 : C9 4D       |                      cmp      #'M'                 
  473 |  1 asmdemo.s    209 | Code        | 11 |         |    2 | 00/0F09 : F0 02       |                      beq      signatureOK          
  474 |  1 asmdemo.s    210 | Comment     | 11 |         |    0 | 00/0F0B               | *<sym>
  475 |  1 asmdemo.s    211 | Code        | 11 |         |    1 | 00/0F0B : 38          | errSign              sec                           
  476 |  1 asmdemo.s    212 | Code        | 11 |         |    1 | 00/0F0C : 60          |                      rts                           
  477 |  1 asmdemo.s    213 | Comment     | 11 |         |    0 | 00/0F0D               | *<sym>
  478 |  1 asmdemo.s    214 | Code        | 11 |         |    1 | 00/0F0D : 18          | signatureOK          clc                           
  479 |  1 asmdemo.s    215 | Code        | 11 |         |    1 | 00/0F0E : 60          |                      rts                           
  480 |  1 asmdemo.s    216 | Empty       | 11 |         |    0 | 00/0F0F               |                                                    
  481 |  1 asmdemo.s    217 | Comment     | 11 |         |    0 | 00/0F0F               | * * * * Exit with an error * * * * 
  482 |  1 asmdemo.s    218 | Comment     | 11 |         |    0 | 00/0F0F               | *<sym>
  483 |  1 asmdemo.s    219 | Code        | 11 |         |    3 | 00/0F0F : 20 1D 12    | dataerr              jsr      DoTextScreen         ; bad signature
  484 |  1 asmdemo.s    220 | Code        | 11 |         |    2 | 00/0F12 : A2 00       |                      ldx      #0                   
  485 |  1 asmdemo.s    221 | Comment     | 11 |         |    0 | 00/0F14               | *<sym>
  486 |  1 asmdemo.s    222 | Code        | 11 |         |    3 | 00/0F14 : BD 48 0F    | printchar            lda      errmsg,x             
  487 |  1 asmdemo.s    223 | Code        | 11 |         |    2 | 00/0F17 : F0 07       |                      beq      errend               
  488 |  1 asmdemo.s    224 | Code        | 11 |         |    3 | 00/0F19 : 20 ED FD    |                      jsr      {$FDED}              
  489 |  1 asmdemo.s    225 | Code        | 11 |         |    1 | 00/0F1C : E8          |                      inx                           
  490 |  1 asmdemo.s    226 | Code        | 11 |         |    3 | 00/0F1D : 4C 14 0F    |                      jmp      printchar            
  491 |  1 asmdemo.s    227 | Comment     | 11 |         |    0 | 00/0F20               | *<sym>
  492 |  1 asmdemo.s    228 | Code        | 11 |         |    3 | 00/0F20 : 20 8E FD    | errend               jsr      {$FD8E}              
  493 |  1 asmdemo.s    229 | Code        | 11 |         |    1 | 00/0F23 : 60          |                      rts                           
  494 |  1 asmdemo.s    230 | Comment     | 11 |         |    0 | 00/0F24               | * * * * * * * * * * * * * * * * *
  495 |  1 asmdemo.s    231 | Comment     | 11 |         |    0 | 00/0F24               | *
  496 |  1 asmdemo.s    232 | Comment     | 11 |         |    0 | 00/0F24               | *<sym>                             
  497 |  1 asmdemo.s    233 | Data        | 11 |         |   36 | 00/0F24 : 00 00 00 00 | MyPort               ds       {{{{{{{{{{{0}+4}+2}+2}+8}+10}+4}+2}+1}+1}+2}; space for a grafport stucture
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
  498 |  1 asmdemo.s    234 | Empty       | 11 |         |    0 | 00/0F48               |                                                    
  499 |  1 asmdemo.s    235 | Comment     | 11 |         |    0 | 00/0F48               | *<sym>
  500 |  1 asmdemo.s    236 | Data        | 11 |         |    7 | 00/0F48 : C5 F2 F2 EF | errmsg               asc      "Error !"            
      |                     |             |    |         |      |           F2 A0 A1    |
  501 |  1 asmdemo.s    237 | Data        | 11 |         |    1 | 00/0F4F : 00          |                      dfb      0                    
  502 |  1 asmdemo.s    238 | Comment     | 11 |         |    0 | 00/0F50               | *
  503 |  1 asmdemo.s    239 | Comment     | 11 |         |    0 | 00/0F50               | * Doimg
  504 |  1 asmdemo.s    240 | Comment     | 11 |         |    0 | 00/0F50               | * lopp on each line
  505 |  1 asmdemo.s    241 | Comment     | 11 |         |    0 | 00/0F50               | * loop on a line (lopp length = hdef bytes / 8) => calculte loop length 
  506 |  1 asmdemo.s    242 | Comment     | 11 |         |    0 | 00/0F50               | * needs : pointer to inputbyte
  507 |  1 asmdemo.s    243 | Comment     | 11 |         |    0 | 00/0F50               | * init pointer to imgdata
  508 |  1 asmdemo.s    244 | Empty       | 11 |         |    0 | 00/0F50               |                                                    
  509 |  1 asmdemo.s    245 | Comment     | 11 |         |    0 | 00/0F50               | * for i = 1 to loop length
  510 |  1 asmdemo.s    246 | Comment     | 11 |         |    0 | 00/0F50               | * for each byte :
  511 |  1 asmdemo.s    247 | Comment     | 11 |         |    0 | 00/0F50               | * loop 8 time (or less if end of line occurs before 8)
  512 |  1 asmdemo.s    248 | Comment     | 11 |         |    0 | 00/0F50               | * get next bit by shifting left in C
  513 |  1 asmdemo.s    249 | Comment     | 11 |         |    0 | 00/0F50               | * poke bit in output byte : need bitcounter
  514 |  1 asmdemo.s    250 | Comment     | 11 |         |    0 | 00/0F50               | * if C = 0 : x = bitcounter; lda output byte ; and tableZero ; sta output byte
  515 |  1 asmdemo.s    251 | Comment     | 11 |         |    0 | 00/0F50               | * if C = 1 : x = bitcounter; lda tableZero,x ; eor $ff ; and output byte ; sta output byte
  516 |  1 asmdemo.s    252 | Comment     | 11 |         |    0 | 00/0F50               | * inc bitcounter ; cmp #7 ; bne loop else { next output byte, bitcounter = 0}
  517 |  1 asmdemo.s    253 | Comment     | 11 |         |    0 | 00/0F50               | * Draw line using PaintBits function in graphic primitives package
  518 |  1 asmdemo.s    254 | Comment     | 11 |         |    0 | 00/0F50               | * next line
  519 |  1 asmdemo.s    255 | Comment     | 11 |         |    0 | 00/0F50               | * check for last line
  520 |  1 asmdemo.s    256 | Comment     | 11 |         |    0 | 00/0F50               | *
  521 |  1 asmdemo.s    257 | Comment     | 11 |         |    0 | 00/0F50               | * vars :
  522 |  1 asmdemo.s    258 | Comment     | 11 |         |    0 | 00/0F50               | *<sym>
  523 |  1 asmdemo.s    259 | Data        | 11 |         |    1 | 00/0F50 : 00          | lineCnt              ds       1                    ; current # of lines
  524 |  1 asmdemo.s    260 | Comment     | 11 |         |    0 | 00/0F51               | *<sym>
  525 |  1 asmdemo.s    261 | Data        | 11 |         |    1 | 00/0F51 : 00          | inputBitPos          ds       1                    ; current position in input byte (0 to 7)
  526 |  1 asmdemo.s    262 | Comment     | 11 |         |    0 | 00/0F52               | *<sym>
  527 |  1 asmdemo.s    263 | Data        | 11 |         |    2 | 00/0F52 : 00 00       | inputBitCnt          ds       2                    ; current # of input byte (0 to hdef - 1)
  528 |  1 asmdemo.s    264 | Comment     | 11 |         |    0 | 00/0F54               | *<sym>
  529 |  1 asmdemo.s    265 | Data        | 11 |         |    1 | 00/0F54 : 00          | outputBitPos         ds       1                    ; current position in ouput byte (0 to 6)
  530 |  1 asmdemo.s    266 | Comment     | 11 |         |    0 | 00/0F55               | *<sym>
  531 |  1 asmdemo.s    267 | Data        | 11 |         |    1 | 00/0F55 : 00          | inbyte               ds       1                    ; save input byte
  532 |  1 asmdemo.s    268 | Comment     | 11 |         |    0 | 00/0F56               | *<sym>
  533 |  1 asmdemo.s    269 | Data        | 11 |         |    1 | 00/0F56 : 00          | inputByteCnt         ds       1                    ; counts # of input byte in a line
  534 |  1 asmdemo.s    270 | Comment     | 11 |         |    0 | 00/0F57               | *<sym>
  535 |  1 asmdemo.s    271 | Empty       | 11 |         |    0 | 00/0F57               | tableZero                                          
  536 |  1 asmdemo.s    272 | Data        | 11 |         |    1 | 00/0F57 : FE          |                      db       %11111110            
  537 |  1 asmdemo.s    273 | Data        | 11 |         |    1 | 00/0F58 : FD          |                      db       %11111101            
  538 |  1 asmdemo.s    274 | Data        | 11 |         |    1 | 00/0F59 : FB          |                      db       %11111011            
  539 |  1 asmdemo.s    275 | Data        | 11 |         |    1 | 00/0F5A : F7          |                      db       %11110111            
  540 |  1 asmdemo.s    276 | Data        | 11 |         |    1 | 00/0F5B : EF          |                      db       %11101111            
  541 |  1 asmdemo.s    277 | Data        | 11 |         |    1 | 00/0F5C : DF          |                      db       %11011111            
  542 |  1 asmdemo.s    278 | Data        | 11 |         |    1 | 00/0F5D : BF          |                      db       %10111111            
  543 |  1 asmdemo.s    279 | Comment     | 11 |         |    0 | 00/0F5E               | *<sym>
  544 |  1 asmdemo.s    280 | Data        | 11 |         |    7 | 00/0F5E : 00 00 00 00 | tableOne             ds       7                    
      |                     |             |    |         |      |           00 00 00    |
  545 |  1 asmdemo.s    281 | Comment     | 11 |         |    0 | 00/0F65               | *<sym>
  546 |  1 asmdemo.s    282 | Data        | 11 |         |    1 | 00/0F65 : 00          | bitmapwidth          ds       1                    
  547 |  1 asmdemo.s    283 | Comment     | 11 |         |    0 | 00/0F66               | *<sym>
  548 |  1 asmdemo.s    284 | Data        | 11 |         |    1 | 00/0F66 : 01          | flipflop             db       1                    ; used to double pixels horizontally
  549 |  1 asmdemo.s    285 | Comment     | 11 |         |    0 | 00/0F67               | *<sym>
  550 |  1 asmdemo.s    286 | Data        | 11 |         |    1 | 00/0F67 : 00          | quitflag             ds       1                    ; to ckeck if user press escape key
  551 |  1 asmdemo.s    287 | Empty       | 11 |         |    0 | 00/0F68               |                                                    
  552 |  1 asmdemo.s    288 | Comment     | 11 |         |    0 | 00/0F68               | ******** line grafport ********
  553 |  1 asmdemo.s    289 | Comment     | 11 |         |    0 | 00/0F68               | *<m1>
  554 |  1 asmdemo.s    290 | Comment     | 11 |         |    0 | 00/0F68               | *<sym>
  555 |  1 asmdemo.s    291 | Data        | 11 |         |    4 | 00/0F68 : 00 00 00 00 | imageLine            dw       0,0                  ; view location on current port
  556 |  1 asmdemo.s    292 | Comment     | 11 |         |    0 | 00/0F6C               | *<sym>
  557 |  1 asmdemo.s    293 | Data        | 11 |         |    2 | 00/0F6C : 78 0F       | imfbits              dw       outbuff              ; bitmap pointer
  558 |  1 asmdemo.s    294 | Comment     | 11 |         |    0 | 00/0F6E               | *<sym>
  559 |  1 asmdemo.s    295 | Data        | 11 |         |    2 | 00/0F6E : 00 00       | imgw                 dw       0                    ; width of bitmap
  560 |  1 asmdemo.s    296 | Comment     | 11 |         |    0 | 00/0F70               | *<sym>
  561 |  1 asmdemo.s    297 | Data        | 11 |         |    8 | 00/0F70 : 00 00 00 00 | clipr                dw       0,0,0,0              ; clip rectangle
      |                     |             |    |         |      |           00 00 00 00 |
  562 |  1 asmdemo.s    298 | Comment     | 11 |         |    0 | 00/0F78               | *<sym>
  563 |  1 asmdemo.s    299 | Data        | 11 |         |   80 | 00/0F78 : 00 00 00 00 | outbuff              ds       80                   ; max 80 bytes for a dhgr line.
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
  564 |  1 asmdemo.s    300 | Comment     | 11 |         |    0 | 00/0FC8               | *<sym>
  565 |  1 asmdemo.s    301 | Data        | 11 |         |    1 | 00/0FC8 : 01          | carryf               db       1                    
  566 |  1 asmdemo.s    302 | Comment     | 11 |         |    0 | 00/0FC9               | *<sym>
  567 |  1 asmdemo.s    303 | Data        | 11 |         |    1 | 00/0FC9 : 01          | inverse              db       1                    
  568 |  1 asmdemo.s    304 | Empty       | 11 |         |    0 | 00/0FCA               |                                                    
  569 |  1 asmdemo.s    305 | Comment     | 11 |         |    0 | 00/0FCA               | *<sym>
  570 |  1 asmdemo.s    306 | Empty       | 11 |         |    0 | 00/0FCA               | Doimg                                              
  571 |  1 asmdemo.s    307 | Comment     | 11 |         |    0 | 00/0FCA               | ***** init *****
  572 |  1 asmdemo.s    308 | Empty       | 11 |         |    0 | 00/0FCA               |                                                    
  573 |  1 asmdemo.s    309 | Code        | 11 |         |    3 | 00/0FCA : 20 3F 12    |                      jsr      clearbuffer          ; clear line buffer
  574 |  1 asmdemo.s    310 | Empty       | 11 |         |    0 | 00/0FCD               |                                                    
  575 |  1 asmdemo.s    311 | Code        | 11 |         |    2 | 00/0FCD : A9 00       |                      lda      #$00                 ; init line counter
  576 |  1 asmdemo.s    312 | Code        | 11 |         |    3 | 00/0FCF : 8D 50 0F    |                      sta      lineCnt              
  577 |  1 asmdemo.s    313 | Code        | 11 |         |    3 | 00/0FD2 : 8D 52 0F    |                      sta      inputBitCnt          ; init input bit counter
  578 |  1 asmdemo.s    314 | Code        | 11 |         |    3 | 00/0FD5 : 8D 53 0F    |                      sta      inputBitCnt+1        
  579 |  1 asmdemo.s    315 | Code        | 11 |         |    3 | 00/0FD8 : 8D 56 0F    |                      sta      inputByteCnt         ; init # of byte in a row
  580 |  1 asmdemo.s    316 | Empty       | 11 |         |    0 | 00/0FDB               |                                                    
  581 |  1 asmdemo.s    317 | Code        | 11 |         |    3 | 00/0FDB : 8D 54 0F    |                      sta      outputBitPos         ; init output bit counter
  582 |  1 asmdemo.s    318 | Empty       | 11 |         |    0 | 00/0FDE               |                                                    
  583 |  1 asmdemo.s    319 | Code        | 11 |         |    3 | 00/0FDE : AD FB 0E    |                      lda      imgdata              ; init pointer to image data (input)
  584 |  1 asmdemo.s    320 | Code        | 11 |         |    3 | 00/0FE1 : 8D 2B 10    |                      sta      lineloop+1           
  585 |  1 asmdemo.s    321 | Code        | 11 |         |    3 | 00/0FE4 : AD FC 0E    |                      lda      imgdata+1            
  586 |  1 asmdemo.s    322 | Code        | 11 |         |    3 | 00/0FE7 : 8D 2C 10    |                      sta      lineloop+2           
  587 |  1 asmdemo.s    323 | Empty       | 11 |         |    0 | 00/0FEA               |                                                    
  588 |  1 asmdemo.s    324 | Code        | 11 |         |    2 | 00/0FEA : A9 78       |                      lda      #<outbuff            ; init pointer to ouput (buffer)
  589 |  1 asmdemo.s    325 | Code        | 11 |         |    3 | 00/0FEC : 8D 50 10    |                      sta      getoutbyte+1         
  590 |  1 asmdemo.s    326 | Code        | 11 |         |    2 | 00/0FEF : A9 0F       |                      lda      #>outbuff            
  591 |  1 asmdemo.s    327 | Code        | 11 |         |    3 | 00/0FF1 : 8D 51 10    |                      sta      getoutbyte+2         
  592 |  1 asmdemo.s    328 | Empty       | 11 |         |    0 | 00/0FF4               |                                                    
  593 |  1 asmdemo.s    329 | Code        | 11 |         |    2 | 00/0FF4 : A2 00       |                      ldx      #0                   ; init tableOne (= eor table Zero)
  594 |  1 asmdemo.s    330 | Comment     | 11 |         |    0 | 00/0FF6               | *<sym> 
  595 |  1 asmdemo.s    331 | Code        | 11 |         |    3 | 00/0FF6 : BD 57 0F    | tabloop              lda      tableZero,x          
  596 |  1 asmdemo.s    332 | Code        | 11 |         |    2 | 00/0FF9 : 49 FF       |                      eor      #$FF                 
  597 |  1 asmdemo.s    333 | Code        | 11 |         |    3 | 00/0FFB : 9D 5E 0F    |                      sta      tableOne,x           
  598 |  1 asmdemo.s    334 | Code        | 11 |         |    1 | 00/0FFE : E8          |                      inx                           
  599 |  1 asmdemo.s    335 | Code        | 11 |         |    2 | 00/0FFF : E0 07       |                      cpx      #7                   
  600 |  1 asmdemo.s    336 | Code        | 11 |         |    2 | 00/1001 : D0 F3       |                      bne      tabloop              
  601 |  1 asmdemo.s    337 | Comment     | 11 |         |    0 | 00/1003               | *<sym>
  602 |  1 asmdemo.s    338 | Empty       | 11 |         |    0 | 00/1003               | getwidth                                           
  603 |  1 asmdemo.s    339 | Code        | 11 |         |    3 | 00/1003 : AD F5 0E    |                      lda      hdef                 
  604 |  1 asmdemo.s    340 | Code        | 11 |         |    3 | 00/1006 : AE F6 0E    |                      ldx      hdef+1               
  605 |  1 asmdemo.s    341 | Code        | 11 |         |    3 | 00/1009 : 20 63 12    |                      jsr      computeBytes         
  606 |  1 asmdemo.s    342 | Code        | 11 |         |    3 | 00/100C : 8E 65 0F    |                      stx      bitmapwidth          
  607 |  1 asmdemo.s    343 | Comment     | 11 |         |    0 | 00/100F               | *<sym>
  608 |  1 asmdemo.s    344 | Empty       | 11 |         |    0 | 00/100F               | setline                                            
  609 |  1 asmdemo.s    345 | Code        | 11 |         |    3 | 00/100F : AD F7 0E    |                      lda      vdef                 
  610 |  1 asmdemo.s    346 | Code        | 11 |         |    3 | 00/1012 : 8D 6A 0F    |                      sta      imageLine+2          ; set vertical position of lower image line
  611 |  1 asmdemo.s    347 | Empty       | 11 |         |    0 | 00/1015               |                                                    
  612 |  1 asmdemo.s    348 | Code        | 11 |         |    3 | 00/1015 : AD 65 0F    |                      lda      bitmapwidth          
  613 |  1 asmdemo.s    349 | Code        | 11 |         |    1 | 00/1018 : 0A          |                      asl                           
  614 |  1 asmdemo.s    350 | Code        | 11 |         |    3 | 00/1019 : 8D 6E 0F    |                      sta      imgw                 ; set image width in byte
  615 |  1 asmdemo.s    351 | Empty       | 11 |         |    0 | 00/101C               |                                                    
  616 |  1 asmdemo.s    352 | Code        | 11 |         |    3 | 00/101C : AD F5 0E    |                      lda      hdef                 ; set clip rectangle in pixels
  617 |  1 asmdemo.s    353 | Code        | 11 |         |    1 | 00/101F : 0A          |                      asl                           
  618 |  1 asmdemo.s    354 | Code        | 11 |         |    3 | 00/1020 : 8D 74 0F    |                      sta      clipr+4              
  619 |  1 asmdemo.s    355 | Code        | 11 |         |    3 | 00/1023 : AD F6 0E    |                      lda      hdef+1               
  620 |  1 asmdemo.s    356 | Code        | 11 |         |    1 | 00/1026 : 2A          |                      rol                           
  621 |  1 asmdemo.s    357 | Code        | 11 |         |    3 | 00/1027 : 8D 75 0F    |                      sta      clipr+5              
  622 |  1 asmdemo.s    358 | Empty       | 11 |         |    0 | 00/102A               |                                                    
  623 |  1 asmdemo.s    359 | Comment     | 11 |         |    0 | 00/102A               | ***** process data *****
  624 |  1 asmdemo.s    360 | Comment     | 11 |         |    0 | 00/102A               | * outer loop (on all bytes of an image line)
  625 |  1 asmdemo.s    361 | Comment     | 11 |         |    0 | 00/102A               | *<sym>   
  626 |  1 asmdemo.s    362 | Empty       | 11 |         |    0 | 00/102A               | lineloop                                           ; get a new input byte
  627 |  1 asmdemo.s    363 | Empty       | 11 |         |    0 | 00/102A               |                                                    
  628 |  1 asmdemo.s    364 | Code        | 11 |         |    3 | 00/102A : AD FF FF    |                      lda      $ffff                ; self modified
  629 |  1 asmdemo.s    365 | Code        | 11 |         |    1 | 00/102D : 48          |                      pha                           
  630 |  1 asmdemo.s    366 | Code        | 11 |         |    3 | 00/102E : AD C9 0F    |                      lda      inverse              
  631 |  1 asmdemo.s    367 | Code        | 11 |         |    2 | 00/1031 : F0 06       |                      beq      normalvideo          
  632 |  1 asmdemo.s    368 | Code        | 11 |         |    1 | 00/1033 : 68          |                      pla                           
  633 |  1 asmdemo.s    369 | Code        | 11 |         |    2 | 00/1034 : 49 FF       |                      eor      #$ff                 
  634 |  1 asmdemo.s    370 | Code        | 11 |         |    3 | 00/1036 : 4C 3A 10    |                      jmp      inversevideo         
  635 |  1 asmdemo.s    371 | Comment     | 11 |         |    0 | 00/1039               | *<sym>
  636 |  1 asmdemo.s    372 | Empty       | 11 |         |    0 | 00/1039               | normalvideo                                        
  637 |  1 asmdemo.s    373 | Code        | 11 |         |    1 | 00/1039 : 68          |                      pla                           
  638 |  1 asmdemo.s    374 | Comment     | 11 |         |    0 | 00/103A               | *<sym>
  639 |  1 asmdemo.s    375 | Empty       | 11 |         |    0 | 00/103A               | inversevideo                                       
  640 |  1 asmdemo.s    376 | Code        | 11 |         |    3 | 00/103A : 8D 55 0F    |                      sta      inbyte               ; save it
  641 |  1 asmdemo.s    377 | Code        | 11 |         |    3 | 00/103D : EE 56 0F    |                      inc      inputByteCnt         ; update counter
  642 |  1 asmdemo.s    378 | Empty       | 11 |         |    0 | 00/1040               |                                                    
  643 |  1 asmdemo.s    379 | Comment     | 11 |         |    0 | 00/1040               | * inner loop on pixels (= input bits)
  644 |  1 asmdemo.s    380 | Comment     | 11 |         |    0 | 00/1040               | * Tranform a BMP image line into an image line un Apple II format.
  645 |  1 asmdemo.s    381 | Comment     | 11 |         |    0 | 00/1040               | * Each BMP pixel is process twice for acpect ratio.
  646 |  1 asmdemo.s    382 | Comment     | 11 |         |    0 | 00/1040               | *<sym>
  647 |  1 asmdemo.s    383 | Empty       | 11 |         |    0 | 00/1040               | pixelloop                                          
  648 |  1 asmdemo.s    384 | Code        | 11 |         |    3 | 00/1040 : AD 55 0F    |                      lda      inbyte               ; reload input byte
  649 |  1 asmdemo.s    385 | Code        | 11 |         |    1 | 00/1043 : 0A          |                      asl                           ; get a bit
  650 |  1 asmdemo.s    386 | Code        | 11 |         |    3 | 00/1044 : 8D 55 0F    |                      sta      inbyte               ; save shifted input byte
  651 |  1 asmdemo.s    387 | Empty       | 11 |         |    0 | 00/1047               |                                                    
  652 |  1 asmdemo.s    388 | Code        | 11 |         |    3 | 00/1047 : EE 52 0F    |                      inc      inputBitCnt          
  653 |  1 asmdemo.s    389 | Code        | 11 |         |    2 | 00/104A : D0 03       |                      bne      getoutbyte           
  654 |  1 asmdemo.s    390 | Code        | 11 |         |    3 | 00/104C : EE 53 0F    |                      inc      inputBitCnt+1        
  655 |  1 asmdemo.s    391 | Comment     | 11 |         |    0 | 00/104F               | *<sym>        
  656 |  1 asmdemo.s    392 | Empty       | 11 |         |    0 | 00/104F               | getoutbyte                                         
  657 |  1 asmdemo.s    393 | Code        | 11 |         |    3 | 00/104F : AD FF FF    |                      lda      $ffff                ; get ouput byte
  658 |  1 asmdemo.s    394 | Code        | 11 |         |    3 | 00/1052 : AE 54 0F    |                      ldx      outputBitPos         
  659 |  1 asmdemo.s    395 | Code        | 11 |         |    2 | 00/1055 : B0 0B       |                      bcs      pokeOne              ; bit coming from input byte = 1 ?
  660 |  1 asmdemo.s    396 | Comment     | 11 |         |    0 | 00/1057               | *<sym>
  661 |  1 asmdemo.s    397 | Empty       | 11 |         |    0 | 00/1057               | pokeZero                                           ; no : set this bit to 0 in output bit
  662 |  1 asmdemo.s    398 | Code        | 11 |         |    3 | 00/1057 : 3D 57 0F    |                      and      tableZero,x          ; A : ouput byte, and it with table value
  663 |  1 asmdemo.s    399 | Code        | 11 |         |    2 | 00/105A : A0 00       |                      ldy      #0                   
  664 |  1 asmdemo.s    400 | Code        | 11 |         |    3 | 00/105C : 8C C8 0F    |                      sty      carryf               ; save carry value in carryf var
  665 |  1 asmdemo.s    401 | Code        | 11 |         |    3 | 00/105F : 4C 6A 10    |                      jmp      pokeresult           
  666 |  1 asmdemo.s    402 | Comment     | 11 |         |    0 | 00/1062               | *<sym>
  667 |  1 asmdemo.s    403 | Empty       | 11 |         |    0 | 00/1062               | pokeOne                                            ; yes : set this bit to 1 in output bit
  668 |  1 asmdemo.s    404 | Code        | 11 |         |    2 | 00/1062 : A0 01       |                      ldy      #1                   
  669 |  1 asmdemo.s    405 | Code        | 11 |         |    3 | 00/1064 : 8C C8 0F    |                      sty      carryf               ; save carry value in carryf var
  670 |  1 asmdemo.s    406 | Code        | 11 |         |    3 | 00/1067 : 1D 5E 0F    |                      ora      tableOne,x           
  671 |  1 asmdemo.s    407 | Comment     | 11 |         |    0 | 00/106A               | *<sym>                                
  672 |  1 asmdemo.s    408 | Empty       | 11 |         |    0 | 00/106A               | pokeresult                                         ; save output byte
  673 |  1 asmdemo.s    409 | Code        | 11 |         |    3 | 00/106A : AE 50 10    |                      ldx      getoutbyte+1         ; get output address
  674 |  1 asmdemo.s    410 | Code        | 11 |         |    2 | 00/106D : 86 06       |                      stx      {$06}                
  675 |  1 asmdemo.s    411 | Code        | 11 |         |    3 | 00/106F : AE 51 10    |                      ldx      getoutbyte+2         
  676 |  1 asmdemo.s    412 | Code        | 11 |         |    2 | 00/1072 : 86 07       |                      stx      {$06}+1              
  677 |  1 asmdemo.s    413 | Code        | 11 |         |    2 | 00/1074 : A0 00       |                      ldy      #0                   
  678 |  1 asmdemo.s    414 | Code        | 11 |         |    2 | 00/1076 : 91 06       |                      sta      ({$06}),y            ; poke output byte in its original place
  679 |  1 asmdemo.s    415 | Comment     | 11 |         |    0 | 00/1078               | *<sym> 
  680 |  1 asmdemo.s    416 | Code        | 11 |         |    3 | 00/1078 : EE 54 0F    | updateoutput         inc      outputBitPos         ; get bit pos (output)
  681 |  1 asmdemo.s    417 | Code        | 11 |         |    3 | 00/107B : AD 54 0F    |                      lda      outputBitPos         
  682 |  1 asmdemo.s    418 | Code        | 11 |         |    2 | 00/107E : C9 07       |                      cmp      #7                   ; = 7 ?
  683 |  1 asmdemo.s    419 | Code        | 11 |         |    2 | 00/1080 : D0 08       |                      bne      ozunid_5             
  684 |  1 asmdemo.s    420 | Code        | 11 |         |    2 | 00/1082 : A9 00       |                      lda      #0                   
  685 |  1 asmdemo.s    421 | Code        | 11 |         |    3 | 00/1084 : 8D 54 0F    |                      sta      outputBitPos         ; yes : reset pos
  686 |  1 asmdemo.s    422 | Code        | 11 |         |    3 | 00/1087 : 20 1B 11    |                      jsr      nextoutput           ; inc pointer
  687 |  1 asmdemo.s    423 | Empty       | 11 |         |    0 | 00/108A               | ozunid_5                                           
  688 |  1 asmdemo.s    424 | Code        | 11 |         |    1 | 00/108A : 18          |                      clc                           
  689 |  1 asmdemo.s    425 | Code        | 11 |         |    3 | 00/108B : AC C8 0F    |                      ldy      carryf               
  690 |  1 asmdemo.s    426 | Code        | 11 |         |    2 | 00/108E : F0 01       |                      beq      ozunid_6             
  691 |  1 asmdemo.s    427 | Code        | 11 |         |    1 | 00/1090 : 38          |                      sec                           
  692 |  1 asmdemo.s    428 | Code        | 11 |         |    3 | 00/1091 : AD 66 0F    | ozunid_6             lda      flipflop             ; each pixel horizontally must be draw twice (and only twice)
  693 |  1 asmdemo.s    429 | Code        | 11 |         |    2 | 00/1094 : 49 01       |                      eor      #1                   ; test flipflop
  694 |  1 asmdemo.s    430 | Code        | 11 |         |    3 | 00/1096 : 8D 66 0F    |                      sta      flipflop             ; invvert it
  695 |  1 asmdemo.s    431 | Code        | 11 |         |    2 | 00/1099 : F0 B4       |                      beq      getoutbyte           ; if 0 : draw same pixel once again
  696 |  1 asmdemo.s    432 | Empty       | 11 |         |    0 | 00/109B               |                                                    
  697 |  1 asmdemo.s    433 | Code        | 11 |         |    3 | 00/109B : AD 52 0F    |                      lda      inputBitCnt          ; all pixels done for this line ?
  698 |  1 asmdemo.s    434 | Code        | 11 |         |    3 | 00/109E : CD F5 0E    |                      cmp      hdef                 ;
  699 |  1 asmdemo.s    435 | Code        | 11 |         |    2 | 00/10A1 : D0 57       |                      bne      nextpixel            ; no : loop to process next pixel
  700 |  1 asmdemo.s    436 | Code        | 11 |         |    3 | 00/10A3 : AD 53 0F    |                      lda      inputBitCnt+1        
  701 |  1 asmdemo.s    437 | Code        | 11 |         |    3 | 00/10A6 : CD F6 0E    |                      cmp      hdef+1               
  702 |  1 asmdemo.s    438 | Code        | 11 |         |    2 | 00/10A9 : D0 4F       |                      bne      nextpixel            
  703 |  1 asmdemo.s    439 | Empty       | 11 |         |    0 | 00/10AB               |                                                    
  704 |  1 asmdemo.s    440 | Comment     | 11 |         |    0 | 00/10AB               | * Here, a line has been processed
  705 |  1 asmdemo.s    441 | Comment     | 11 |         |    0 | 00/10AB               | * It is drawn
  706 |  1 asmdemo.s    442 | Comment     | 11 |         |    0 | 00/10AB               | * Then variables must be reset for next line, if any.
  707 |  1 asmdemo.s    443 | Comment     | 11 |         |    0 | 00/10AB               | *<sym>  
  708 |  1 asmdemo.s    444 | Empty       | 11 |         |    0 | 00/10AB               | nextline                                           ; yes : paint current line and prepare next one
  709 |  1 asmdemo.s    445 | Code        | 11 |         |    3 | 00/10AB : 20 2E 11    |                      jsr      drawImgLine2         ; a line has been calcultated, paint it !!!
  710 |  1 asmdemo.s    446 | Empty       | 11 |         |    0 | 00/10AE               |                                                    
  711 |  1 asmdemo.s    447 | Code        | 11 |         |    2 | 00/10AE : A9 78       |                      lda      #<outbuff            ; reset pointer to beginning of output buffer
  712 |  1 asmdemo.s    448 | Code        | 11 |         |    3 | 00/10B0 : 8D 50 10    |                      sta      getoutbyte+1         
  713 |  1 asmdemo.s    449 | Code        | 11 |         |    2 | 00/10B3 : A9 0F       |                      lda      #>outbuff            
  714 |  1 asmdemo.s    450 | Code        | 11 |         |    3 | 00/10B5 : 8D 51 10    |                      sta      getoutbyte+2         
  715 |  1 asmdemo.s    451 | Code        | 11 |         |    3 | 00/10B8 : 20 3F 12    |                      jsr      clearbuffer          ; zero ouput buffer
  716 |  1 asmdemo.s    452 | Comment     | 11 |         |    0 | 00/10BB               | *<sym> 
  717 |  1 asmdemo.s    453 | Empty       | 11 |         |    0 | 00/10BB               | loopadjust                                         ; in an BMP image line, # of bytes must be divisible by 4
  718 |  1 asmdemo.s    454 | Comment     | 11 |         |    0 | 00/10BB               |                                         ; if not, it is padded with zeros to make it divisible by 4
  719 |  1 asmdemo.s    455 | Comment     | 11 |         |    0 | 00/10BB               |                                         ; so we need to jump over these useless bytes, if any.
  720 |  1 asmdemo.s    456 | Code        | 11 |         |    3 | 00/10BB : AD 56 0F    |                      lda      inputByteCnt         ; get # of byte done in previous image line
  721 |  1 asmdemo.s    457 | Code        | 11 |         |    2 | 00/10BE : 29 03       |                      and      #3                   ; if this number is divisible by 4
  722 |  1 asmdemo.s    458 | Code        | 11 |         |    2 | 00/10C0 : F0 09       |                      beq      div4ok               ; go on
  723 |  1 asmdemo.s    459 | Code        | 11 |         |    3 | 00/10C2 : 20 12 11    |                      jsr      nextinput            ; else inc pointer to input data
  724 |  1 asmdemo.s    460 | Code        | 11 |         |    3 | 00/10C5 : EE 56 0F    |                      inc      inputByteCnt         ; inc counter
  725 |  1 asmdemo.s    461 | Code        | 11 |         |    3 | 00/10C8 : 4C BB 10    |                      jmp      loopadjust           ; and loop until inputByteCnt is divisible by 4
  726 |  1 asmdemo.s    462 | Comment     | 11 |         |    0 | 00/10CB               | *<sym> 
  727 |  1 asmdemo.s    463 | Empty       | 11 |         |    0 | 00/10CB               | div4ok                                             
  728 |  1 asmdemo.s    464 | Code        | 11 |         |    2 | 00/10CB : A9 00       |                      lda      #0                   
  729 |  1 asmdemo.s    465 | Code        | 11 |         |    3 | 00/10CD : 8D 56 0F    |                      sta      inputByteCnt         ; init byte counter for a line
  730 |  1 asmdemo.s    466 | Code        | 11 |         |    3 | 00/10D0 : 20 12 11    |                      jsr      nextinput            ; inc pointer to input byte
  731 |  1 asmdemo.s    467 | Code        | 11 |         |    2 | 00/10D3 : A9 00       |                      lda      #0                   
  732 |  1 asmdemo.s    468 | Code        | 11 |         |    3 | 00/10D5 : 8D 51 0F    |                      sta      inputBitPos          ; reset bit pos for input
  733 |  1 asmdemo.s    469 | Code        | 11 |         |    3 | 00/10D8 : 8D 52 0F    |                      sta      inputBitCnt          ; reset input bit counter
  734 |  1 asmdemo.s    470 | Code        | 11 |         |    3 | 00/10DB : 8D 53 0F    |                      sta      inputBitCnt+1        
  735 |  1 asmdemo.s    471 | Code        | 11 |         |    3 | 00/10DE : 8D 54 0F    |                      sta      outputBitPos         ; reset output byte position
  736 |  1 asmdemo.s    472 | Empty       | 11 |         |    0 | 00/10E1               |                                                    
  737 |  1 asmdemo.s    473 | Code        | 11 |         |    2 | 00/10E1 : A9 01       |                      lda      #1                   
  738 |  1 asmdemo.s    474 | Code        | 11 |         |    3 | 00/10E3 : 8D 66 0F    |                      sta      flipflop             ; reset toggle to double pixel width
  739 |  1 asmdemo.s    475 | Comment     | 11 |         |    0 | 00/10E6               | *<bp>      
  740 |  1 asmdemo.s    476 | Code        | 11 |         |    3 | 00/10E6 : EE 50 0F    |                      inc      lineCnt              ; inc line counter
  741 |  1 asmdemo.s    477 | Code        | 11 |         |    3 | 00/10E9 : AD 50 0F    |                      lda      lineCnt              
  742 |  1 asmdemo.s    478 | Code        | 11 |         |    3 | 00/10EC : CD F7 0E    |                      cmp      vdef                 ; all lines done ?
  743 |  1 asmdemo.s    479 | Code        | 11 |         |    2 | 00/10EF : B0 03       |                      bcs      suporeq              ; lineCnt >= vdef ?
  744 |  1 asmdemo.s    480 | Code        | 11 |         |    3 | 00/10F1 : 4C 2A 10    |                      jmp      lineloop             ; no : loop
  745 |  1 asmdemo.s    481 | Comment     | 11 |         |    0 | 00/10F4               | *<sym>  
  746 |  1 asmdemo.s    482 | Code        | 11 |         |    2 | 00/10F4 : D0 03       | suporeq              bne      endimage             ; if not egal then lineCnt > vdef : end loop
  747 |  1 asmdemo.s    483 | Code        | 11 |         |    3 | 00/10F6 : 4C 2A 10    |                      jmp      lineloop             ; no : loop for another image line
  748 |  1 asmdemo.s    484 | Comment     | 11 |         |    0 | 00/10F9               | *<sym>  
  749 |  1 asmdemo.s    485 | Empty       | 11 |         |    0 | 00/10F9               | endimage                                           
  750 |  1 asmdemo.s    486 | Code        | 11 |         |    1 | 00/10F9 : 60          |                      rts                           ; END !!!
  751 |  1 asmdemo.s    487 | Comment     | 11 |         |    0 | 00/10FA               | *<sym>         
  752 |  1 asmdemo.s    488 | Empty       | 11 |         |    0 | 00/10FA               | nextpixel                                          ; no : other pixels to go on current line
  753 |  1 asmdemo.s    489 | Code        | 11 |         |    3 | 00/10FA : EE 51 0F    |                      inc      inputBitPos          ; get bit pos (input)
  754 |  1 asmdemo.s    490 | Code        | 11 |         |    3 | 00/10FD : AD 51 0F    |                      lda      inputBitPos          
  755 |  1 asmdemo.s    491 | Code        | 11 |         |    2 | 00/1100 : C9 08       |                      cmp      #8                   ; = 8 ?
  756 |  1 asmdemo.s    492 | Code        | 11 |         |    2 | 00/1102 : F0 03       |                      beq      nextbyte             
  757 |  1 asmdemo.s    493 | Code        | 11 |         |    3 | 00/1104 : 4C 40 10    |                      jmp      pixelloop            
  758 |  1 asmdemo.s    494 | Comment     | 11 |         |    0 | 00/1107               | *<sym>  
  759 |  1 asmdemo.s    495 | Empty       | 11 |         |    0 | 00/1107               | nextbyte                                           
  760 |  1 asmdemo.s    496 | Code        | 11 |         |    2 | 00/1107 : A9 00       |                      lda      #0                   ; yes : adjust vars
  761 |  1 asmdemo.s    497 | Code        | 11 |         |    3 | 00/1109 : 8D 51 0F    |                      sta      inputBitPos          ; reset input bit position pos to 0
  762 |  1 asmdemo.s    498 | Code        | 11 |         |    3 | 00/110C : 20 12 11    |                      jsr      nextinput            ; inc pointer to image data
  763 |  1 asmdemo.s    499 | Code        | 11 |         |    3 | 00/110F : 4C 2A 10    |                      jmp      lineloop             ; loop to get next input byte
  764 |  1 asmdemo.s    500 | Comment     | 11 |         |    0 | 00/1112               | *<sym>                                 
  765 |  1 asmdemo.s    501 | Empty       | 11 |         |    0 | 00/1112               | nextinput                                          
  766 |  1 asmdemo.s    502 | Code        | 11 |         |    3 | 00/1112 : EE 2B 10    |                      inc      lineloop+1           
  767 |  1 asmdemo.s    503 | Code        | 11 |         |    2 | 00/1115 : D0 03       |                      bne      nextinputO           
  768 |  1 asmdemo.s    504 | Code        | 11 |         |    3 | 00/1117 : EE 2C 10    |                      inc      lineloop+2           
  769 |  1 asmdemo.s    505 | Comment     | 11 |         |    0 | 00/111A               | *<sym>
  770 |  1 asmdemo.s    506 | Code        | 11 |         |    1 | 00/111A : 60          | nextinputO           rts                           
  771 |  1 asmdemo.s    507 | Empty       | 11 |         |    0 | 00/111B               |                                                    
  772 |  1 asmdemo.s    508 | Comment     | 11 |         |    0 | 00/111B               | *<sym>
  773 |  1 asmdemo.s    509 | Empty       | 11 |         |    0 | 00/111B               | nextoutput                                         
  774 |  1 asmdemo.s    510 | Code        | 11 |         |    3 | 00/111B : EE 50 10    |                      inc      getoutbyte+1         
  775 |  1 asmdemo.s    511 | Code        | 11 |         |    2 | 00/111E : D0 03       |                      bne      nextoutputO          
  776 |  1 asmdemo.s    512 | Code        | 11 |         |    3 | 00/1120 : EE 51 10    |                      inc      getoutbyte+2         
  777 |  1 asmdemo.s    513 | Comment     | 11 |         |    0 | 00/1123               | *<sym>
  778 |  1 asmdemo.s    514 | Code        | 11 |         |    1 | 00/1123 : 60          | nextoutputO          rts                           
  779 |  1 asmdemo.s    515 | Comment     | 11 |         |    0 | 00/1124               | *<sym>
  780 |  1 asmdemo.s    516 | Empty       | 11 |         |    0 | 00/1124               | drawImgLine                                        ; draw line using Graphics Primitives
  781 |  1 asmdemo.s    517 | Macro       | 11 |         |    0 | 00/1124               |                      GP_call  {{{{{{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1};imageLine; dram a line of the image
  782 |  1 asmdemo.s    517 | Code        | 11 |         |    3 | 00/1124 : 20 00 40    |                      jsr      {$4000}              ; graphic primitives only entry point
  783 |  1 asmdemo.s    517 | Data        | 11 |         |    1 | 00/1127 : 14          |                      dfb      {{{{{{{{{{{{{{{{{{{{1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}+1}; command ID (1 byte)
  784 |  1 asmdemo.s    517 | Data        | 11 |         |    2 | 00/1128 : 68 0F       |                      da       imageLine            ; address of parameter(s) (2 bytes), 0 if no paramter
  785 |  1 asmdemo.s    518 | Code        | 11 |         |    3 | 00/112A : CE 6A 0F    |                      dec      imageLine+2          
  786 |  1 asmdemo.s    519 | Code        | 11 |         |    1 | 00/112D : 60          |                      rts                           
  787 |  1 asmdemo.s    520 | Empty       | 11 |         |    0 | 00/112E               |                                                    
  788 |  1 asmdemo.s    521 | Comment     | 11 |         |    0 | 00/112E               | *<sym>
  789 |  1 asmdemo.s    522 | Empty       | 11 |         |    0 | 00/112E               | drawImgLine2                                       ; draw line using direct access to memory
  790 |  1 asmdemo.s    523 | Code        | 11 |         |    3 | 00/112E : AD 6B 0F    |                      lda      imageLine+3          ; upper byte must be 0
  791 |  1 asmdemo.s    524 | Code        | 11 |         |    2 | 00/1131 : F0 01       |                      beq      okYinf256            ; ok
  792 |  1 asmdemo.s    525 | Code        | 11 |         |    1 | 00/1133 : 60          |                      rts                           ; else vertical position > 192 : exit
  793 |  1 asmdemo.s    526 | Comment     | 11 |         |    0 | 00/1134               | *<sym>
  794 |  1 asmdemo.s    527 | Code        | 11 |         |    3 | 00/1134 : AE 6A 0F    | okYinf256            ldx      imageLine+2          ; get Y pos of current line
  795 |  1 asmdemo.s    528 | Code        | 11 |         |    2 | 00/1137 : E0 C0       |                      cpx      #192                 ; check if line # is < 192
  796 |  1 asmdemo.s    529 | Code        | 11 |         |    2 | 00/1139 : 90 01       |                      bcc      okYinf192            
  797 |  1 asmdemo.s    530 | Code        | 11 |         |    1 | 00/113B : 60          |                      rts                           ; exit if not
  798 |  1 asmdemo.s    531 | Comment     | 11 |         |    0 | 00/113C               | *<sym>
  799 |  1 asmdemo.s    532 | Empty       | 11 |         |    0 | 00/113C               | okYinf192                                          
  800 |  1 asmdemo.s    533 | Code        | 11 |         |    3 | 00/113C : BD CD 14    |                      lda      lo,x                 ; set pointer prt to memory address
  801 |  1 asmdemo.s    534 | Code        | 11 |         |    2 | 00/113F : 85 06       |                      sta      {$06}                ; of this image line
  802 |  1 asmdemo.s    535 | Code        | 11 |         |    3 | 00/1141 : BD 0D 14    |                      lda      hi,x                 
  803 |  1 asmdemo.s    536 | Code        | 11 |         |    2 | 00/1144 : 85 07       |                      sta      {$06}+1              
  804 |  1 asmdemo.s    537 | Code        | 11 |         |    2 | 00/1146 : A2 00       |                      ldx      #0                   
  805 |  1 asmdemo.s    538 | Code        | 11 |         |    2 | 00/1148 : A0 00       |                      ldy      #0                   
  806 |  1 asmdemo.s    539 | Code        | 11 |         |    3 | 00/114A : 8D 00 C0    |                      sta      {$C000}              
  807 |  1 asmdemo.s    540 | Comment     | 11 |         |    0 | 00/114D               | *<sym>
  808 |  1 asmdemo.s    541 | Empty       | 11 |         |    0 | 00/114D               | pokeloop                                           
  809 |  1 asmdemo.s    542 | Code        | 11 |         |    3 | 00/114D : BD 78 0F    |                      lda      outbuff,x            
  810 |  1 asmdemo.s    543 | Code        | 11 |         |    3 | 00/1150 : 8D 05 C0    |                      sta      {$C005}              ; write in aux memory
  811 |  1 asmdemo.s    544 | Code        | 11 |         |    2 | 00/1153 : 91 06       |                      sta      ({$06}),y            
  812 |  1 asmdemo.s    545 | Code        | 11 |         |    3 | 00/1155 : 8D 04 C0    |                      sta      {$C004}              ; write in main memory
  813 |  1 asmdemo.s    546 | Code        | 11 |         |    1 | 00/1158 : E8          |                      inx                           
  814 |  1 asmdemo.s    547 | Code        | 11 |         |    3 | 00/1159 : EC 6E 0F    |                      cpx      imgw                 ; end ond line ?
  815 |  1 asmdemo.s    548 | Code        | 11 |         |    2 | 00/115C : F0 0C       |                      beq      outloop              
  816 |  1 asmdemo.s    549 | Code        | 11 |         |    3 | 00/115E : BD 78 0F    |                      lda      outbuff,x            
  817 |  1 asmdemo.s    550 | Code        | 11 |         |    2 | 00/1161 : 91 06       |                      sta      ({$06}),y            
  818 |  1 asmdemo.s    551 | Code        | 11 |         |    1 | 00/1163 : C8          |                      iny                           
  819 |  1 asmdemo.s    552 | Code        | 11 |         |    1 | 00/1164 : E8          |                      inx                           
  820 |  1 asmdemo.s    553 | Code        | 11 |         |    3 | 00/1165 : EC 6E 0F    |                      cpx      imgw                 
  821 |  1 asmdemo.s    554 | Code        | 11 |         |    2 | 00/1168 : D0 E3       |                      bne      pokeloop             
  822 |  1 asmdemo.s    555 | Comment     | 11 |         |    0 | 00/116A               | *<sym>
  823 |  1 asmdemo.s    556 | Empty       | 11 |         |    0 | 00/116A               | outloop                                            
  824 |  1 asmdemo.s    557 | Code        | 11 |         |    3 | 00/116A : 8D 01 C0    |                      sta      {$C001}              
  825 |  1 asmdemo.s    558 | Code        | 11 |         |    3 | 00/116D : CE 6A 0F    |                      dec      imageLine+2          
  826 |  1 asmdemo.s    559 | Code        | 11 |         |    1 | 00/1170 : 60          |                      rts                           
  827 |  1 asmdemo.s    560 | Comment     | 11 |         |    0 | 00/1171               | *<syme>
  828 |  1 asmdemo.s    561 | Equivalence | 11 |         |    0 | 00/1171               | bmp                  equ      $6000                ; image is supposed to be loaded at $6000
  829 |  1 asmdemo.s    562 | Empty       | 11 |         |    0 | 00/1171               |                                                    
  830 |  1 asmdemo.s    563 | Comment     | 11 |         |    0 | 00/1171               | *<sym>
  831 |  1 asmdemo.s    564 | Empty       | 11 |         |    0 | 00/1171               | DoKey                                              ; test keys
  832 |  1 asmdemo.s    565 | Code        | 11 |         |    2 | 00/1171 : C9 E9       |                      cmp      #"i"                 ; if i ou I : negate image
  833 |  1 asmdemo.s    566 | Code        | 11 |         |    2 | 00/1173 : F0 1B       |                      beq      doInverse            
  834 |  1 asmdemo.s    567 | Code        | 11 |         |    2 | 00/1175 : C9 C9       |                      cmp      #"I"                 
  835 |  1 asmdemo.s    568 | Code        | 11 |         |    2 | 00/1177 : F0 17       |                      beq      doInverse            
  836 |  1 asmdemo.s    569 | Comment     | 11 |         |    0 | 00/1179               | *<sym>
  837 |  1 asmdemo.s    570 | Code        | 11 |         |    2 | 00/1179 : C9 9B       | nextkey              cmp      #$9B                 ; escape : exit
  838 |  1 asmdemo.s    571 | Code        | 11 |         |    2 | 00/117B : F0 0D       |                      beq      exitDK               
  839 |  1 asmdemo.s    572 | Empty       | 11 |         |    0 | 00/117D               |                                                    
  840 |  1 asmdemo.s    573 | Code        | 11 |         |    2 | 00/117D : C9 E3       |                      cmp      #"c"                 ; c for clear
  841 |  1 asmdemo.s    574 | Code        | 11 |         |    2 | 00/117F : F0 05       |                      beq      doclear              
  842 |  1 asmdemo.s    575 | Code        | 11 |         |    2 | 00/1181 : C9 C3       |                      cmp      #"C"                 
  843 |  1 asmdemo.s    576 | Code        | 11 |         |    2 | 00/1183 : F0 01       |                      beq      doclear              
  844 |  1 asmdemo.s    577 | Code        | 11 |         |    1 | 00/1185 : 60          |                      rts                           ; none of these keys : do nothing
  845 |  1 asmdemo.s    578 | Comment     | 11 |         |    0 | 00/1186               | *<sym>
  846 |  1 asmdemo.s    579 | Empty       | 11 |         |    0 | 00/1186               | doclear                                            
  847 |  1 asmdemo.s    580 | Code        | 11 |         |    3 | 00/1186 : 20 EF 11    |                      jsr      clerscr              ; call clear screen proc.
  848 |  1 asmdemo.s    581 | Code        | 11 |         |    1 | 00/1189 : 60          |                      rts                           
  849 |  1 asmdemo.s    582 | Comment     | 11 |         |    0 | 00/118A               | *<sym>
  850 |  1 asmdemo.s    583 | Code        | 11 |         |    2 | 00/118A : A9 01       | exitDK               lda      #1                   ; escape : set quit flag
  851 |  1 asmdemo.s    584 | Code        | 11 |         |    3 | 00/118C : 8D 67 0F    |                      sta      quitflag             
  852 |  1 asmdemo.s    585 | Code        | 11 |         |    1 | 00/118F : 60          |                      rts                           
  853 |  1 asmdemo.s    586 | Empty       | 11 |         |    0 | 00/1190               |                                                    
  854 |  1 asmdemo.s    587 | Comment     | 11 |         |    0 | 00/1190               | *<sym>
  855 |  1 asmdemo.s    588 | Empty       | 11 |         |    0 | 00/1190               | doInverse                                          
  856 |  1 asmdemo.s    589 | Code        | 11 |         |    3 | 00/1190 : AD C9 0F    |                      lda      inverse              
  857 |  1 asmdemo.s    590 | Code        | 11 |         |    2 | 00/1193 : 49 01       |                      eor      #$01                 
  858 |  1 asmdemo.s    591 | Code        | 11 |         |    3 | 00/1195 : 8D C9 0F    |                      sta      inverse              
  859 |  1 asmdemo.s    592 | Code        | 11 |         |    3 | 00/1198 : 4C 37 0E    |                      jmp      startimage           
  860 |  1 asmdemo.s    593 | Empty       | 11 |         |    0 | 00/119B               |                                                    
  861 |  1 asmdemo.s    594 | Empty       | 11 |         |    0 | 00/119B               |                                                    
  862 |  1 asmdemo.s    595 | Comment     | 11 |         |    0 | 00/119B               | *<sym>
  863 |  1 asmdemo.s    596 | Empty       | 11 |         |    0 | 00/119B               | WaitForKeyPress                                    
  864 |  1 asmdemo.s    597 | Code        | 11 |         |    3 | 00/119B : AD 00 C0    |                      lda      {$C000}              
  865 |  1 asmdemo.s    598 | Code        | 11 |         |    2 | 00/119E : 10 FB       |                      bpl      WaitForKeyPress      
  866 |  1 asmdemo.s    599 | Code        | 11 |         |    3 | 00/11A0 : 8D 10 C0    |                      sta      {$C010}              
  867 |  1 asmdemo.s    600 | Code        | 11 |         |    1 | 00/11A3 : 60          |                      rts                           
  868 |  1 asmdemo.s    601 | Empty       | 11 |         |    0 | 00/11A4               |                                                    
  869 |  1 asmdemo.s    602 | Empty       | 11 |         |    0 | 00/11A4               |                                                    
  870 |  1 asmdemo.s    603 | Empty       | 11 |         |    0 | 00/11A4               |                                                    
  871 |  1 asmdemo.s    604 | Comment     | 11 |         |    0 | 00/11A4               | * ------------------ utils ------------------
  872 |  1 asmdemo.s    605 | Empty       | 11 |         |    0 | 00/11A4               |                                                    
  873 |  1 asmdemo.s    606 | Comment     | 11 |         |    0 | 00/11A4               | *<sym>
  874 |  1 asmdemo.s    607 | Empty       | 11 |         |    0 | 00/11A4               | testLength                                         
  875 |  1 asmdemo.s    608 | Code        | 11 |         |    3 | 00/11A4 : AD 0C 14    |                      lda      filelength+2         ;       Byte 3 must 0 (else file size would be > $FFFF)
  876 |  1 asmdemo.s    609 | Code        | 11 |         |    2 | 00/11A7 : F0 02       |                      beq      ozunid_7             
  877 |  1 asmdemo.s    610 | Code        | 11 |         |    1 | 00/11A9 : 38          |                      sec                           
  878 |  1 asmdemo.s    611 | Code        | 11 |         |    1 | 00/11AA : 60          |                      rts                           
  879 |  1 asmdemo.s    612 | Empty       | 11 |         |    0 | 00/11AB               | ozunid_7                                           
  880 |  1 asmdemo.s    613 | Code        | 11 |         |    3 | 00/11AB : AD 0B 14    |                      lda      filelength+1         ; compare file length
  881 |  1 asmdemo.s    614 | Code        | 11 |         |    2 | 00/11AE : C9 20       |                      cmp      #>{$2000}            ; to maxlen
  882 |  1 asmdemo.s    615 | Code        | 11 |         |    2 | 00/11B0 : D0 05       |                      bne      ozunid_8             
  883 |  1 asmdemo.s    616 | Code        | 11 |         |    3 | 00/11B2 : AD 0A 14    |                      lda      filelength           
  884 |  1 asmdemo.s    617 | Code        | 11 |         |    2 | 00/11B5 : C9 00       |                      cmp      #<{$2000}            
  885 |  1 asmdemo.s    618 | Empty       | 11 |         |    0 | 00/11B7               | ozunid_8                                           
  886 |  1 asmdemo.s    619 | Code        | 11 |         |    2 | 00/11B7 : 90 04       |                      bcc      lowerlen             ; lower : OK
  887 |  1 asmdemo.s    620 | Code        | 11 |         |    2 | 00/11B9 : D0 04       |                      bne      higherlen            ; higher : KO
  888 |  1 asmdemo.s    621 | Code        | 11 |         |    2 | 00/11BB : F0 00       |                      beq      lowerlen             ; = : OK
  889 |  1 asmdemo.s    622 | Comment     | 11 |         |    0 | 00/11BD               | *<sym>
  890 |  1 asmdemo.s    623 | Code        | 11 |         |    1 | 00/11BD : 18          | lowerlen             clc                           
  891 |  1 asmdemo.s    624 | Code        | 11 |         |    1 | 00/11BE : 60          |                      rts                           
  892 |  1 asmdemo.s    625 | Comment     | 11 |         |    0 | 00/11BF               | *<sym>
  893 |  1 asmdemo.s    626 | Empty       | 11 |         |    0 | 00/11BF               | higherlen                                          
  894 |  1 asmdemo.s    627 | Code        | 11 |         |    1 | 00/11BF : 38          |                      sec                           
  895 |  1 asmdemo.s    628 | Code        | 11 |         |    1 | 00/11C0 : 60          |                      rts                           
  896 |  1 asmdemo.s    629 | Empty       | 11 |         |    0 | 00/11C1               |                                                    
  897 |  1 asmdemo.s    630 | Comment     | 11 |         |    0 | 00/11C1               | * open BMP file
  898 |  1 asmdemo.s    631 | Empty       | 11 |         |    0 | 00/11C1               |                                                    
  899 |  1 asmdemo.s    632 | Comment     | 11 |         |    0 | 00/11C1               | *<sym>
  900 |  1 asmdemo.s    633 | Empty       | 11 |         |    0 | 00/11C1               | openBMP                                            
  901 |  1 asmdemo.s    634 | Code        | 11 |         |    3 | 00/11C1 : 20 00 BF    |                      jsr      {$BF00}              ; OPEN file
  902 |  1 asmdemo.s    635 | Data        | 11 |         |    1 | 00/11C4 : C8          |                      dfb      {$C8}                
  903 |  1 asmdemo.s    636 | Data        | 11 |         |    2 | 00/11C5 : E2 12       |                      da       OPEN_parms           
  904 |  1 asmdemo.s    637 | Code        | 11 |         |    2 | 00/11C7 : 90 01       |                      bcc      GetEOF               ; no error, go on
  905 |  1 asmdemo.s    638 | Code        | 11 |         |    1 | 00/11C9 : 60          |                      rts                           
  906 |  1 asmdemo.s    639 | Comment     | 11 |         |    0 | 00/11CA               | *<sym>
  907 |  1 asmdemo.s    640 | Empty       | 11 |         |    0 | 00/11CA               | GetEOF                                             
  908 |  1 asmdemo.s    641 | Code        | 11 |         |    3 | 00/11CA : AD E7 12    |                      lda      ref                  ; get reference to file (got it in open mli call above)
  909 |  1 asmdemo.s    642 | Code        | 11 |         |    3 | 00/11CD : 8D DB 12    |                      sta      refread              ; set it for reading
  910 |  1 asmdemo.s    643 | Code        | 11 |         |    3 | 00/11D0 : 8D 09 14    |                      sta      refd1                ; set if for geteof
  911 |  1 asmdemo.s    644 | Empty       | 11 |         |    0 | 00/11D3               |                                                    
  912 |  1 asmdemo.s    645 | Code        | 11 |         |    3 | 00/11D3 : 20 00 BF    |                      jsr      {$BF00}              ; Call GetEOF to get length of file
  913 |  1 asmdemo.s    646 | Data        | 11 |         |    1 | 00/11D6 : D1          |                      dfb      {$d1}                
  914 |  1 asmdemo.s    647 | Data        | 11 |         |    2 | 00/11D7 : 08 14       |                      da       GET_EOF_param        
  915 |  1 asmdemo.s    648 | Code        | 11 |         |    2 | 00/11D9 : 90 01       |                      bcc      geteofOK             ; if call was ok then go on
  916 |  1 asmdemo.s    649 | Code        | 11 |         |    1 | 00/11DB : 60          |                      rts                           
  917 |  1 asmdemo.s    650 | Comment     | 11 |         |    0 | 00/11DC               | *<sym>
  918 |  1 asmdemo.s    651 | Empty       | 11 |         |    0 | 00/11DC               | geteofOK                                           
  919 |  1 asmdemo.s    652 | Code        | 11 |         |    3 | 00/11DC : 20 A4 11    |                      jsr      testLength           ; compare maxlen (max size for an image in memory ans size of BMP file
  920 |  1 asmdemo.s    653 | Code        | 11 |         |    2 | 00/11DF : 90 01       |                      bcc      LoadBMP              ; ok if file size < max size
  921 |  1 asmdemo.s    654 | Code        | 11 |         |    1 | 00/11E1 : 60          |                      rts                           
  922 |  1 asmdemo.s    655 | Empty       | 11 |         |    0 | 00/11E2               |                                                    
  923 |  1 asmdemo.s    656 | Comment     | 11 |         |    0 | 00/11E2               | *<sym>
  924 |  1 asmdemo.s    657 | Empty       | 11 |         |    0 | 00/11E2               | LoadBMP                                            ; read BMP file
  925 |  1 asmdemo.s    658 | Code        | 11 |         |    3 | 00/11E2 : AD E7 12    |                      lda      ref                  ; set reference to file (got it in open mli call above)
  926 |  1 asmdemo.s    659 | Code        | 11 |         |    3 | 00/11E5 : 8D DB 12    |                      sta      refread              
  927 |  1 asmdemo.s    660 | Code        | 11 |         |    3 | 00/11E8 : 20 00 BF    |                      jsr      {$BF00}              
  928 |  1 asmdemo.s    661 | Data        | 11 |         |    1 | 00/11EB : CA          |                      dfb      {$CA}                
  929 |  1 asmdemo.s    662 | Data        | 11 |         |    2 | 00/11EC : DA 12       |                      da       READ_param           
  930 |  1 asmdemo.s    663 | Code        | 11 |         |    1 | 00/11EE : 60          |                      rts                           
  931 |  1 asmdemo.s    664 | Empty       | 11 |         |    0 | 00/11EF               |                                                    
  932 |  1 asmdemo.s    665 | Comment     | 11 |         |    0 | 00/11EF               | * Clear DHGR screen   
  933 |  1 asmdemo.s    666 | Equivalence | 11 |         |    0 | 00/11EF               | screenbase           equ      $2000                ; address of screen memory
  934 |  1 asmdemo.s    667 | Comment     | 11 |         |    0 | 00/11EF               | *<sym> 
  935 |  1 asmdemo.s    668 | Empty       | 11 |         |    0 | 00/11EF               | clerscr                                            
  936 |  1 asmdemo.s    669 | Code        | 11 |         |    2 | 00/11EF : A9 00       |                      lda      #<{$2000}            
  937 |  1 asmdemo.s    670 | Code        | 11 |         |    2 | 00/11F1 : 85 06       |                      sta      {$06}                
  938 |  1 asmdemo.s    671 | Code        | 11 |         |    2 | 00/11F3 : A9 20       |                      lda      #>{$2000}+1          
  939 |  1 asmdemo.s    672 | Code        | 11 |         |    2 | 00/11F5 : 85 07       |                      sta      {$06}+1              
  940 |  1 asmdemo.s    673 | Code        | 11 |         |    2 | 00/11F7 : A0 00       |                      ldy      #0                   
  941 |  1 asmdemo.s    674 | Code        | 11 |         |    2 | 00/11F9 : A9 00       |                      lda      #0                   
  942 |  1 asmdemo.s    675 | Code        | 11 |         |    3 | 00/11FB : 8D 00 C0    |                      sta      $C000                
  943 |  1 asmdemo.s    676 | Comment     | 11 |         |    0 | 00/11FE               | *<sym> 
  944 |  1 asmdemo.s    677 | Empty       | 11 |         |    0 | 00/11FE               | clrloop                                            
  945 |  1 asmdemo.s    678 | Code        | 11 |         |    2 | 00/11FE : 91 06       |                      sta      ({$06}),y            
  946 |  1 asmdemo.s    679 | Code        | 11 |         |    3 | 00/1200 : 8D 05 C0    |                      sta      {$C005}              ; write char in aux
  947 |  1 asmdemo.s    680 | Code        | 11 |         |    2 | 00/1203 : 91 06       |                      sta      ({$06}),y            
  948 |  1 asmdemo.s    681 | Code        | 11 |         |    3 | 00/1205 : 8D 04 C0    |                      sta      {$C004}              
  949 |  1 asmdemo.s    682 | Code        | 11 |         |    1 | 00/1208 : C8          |                      iny                           
  950 |  1 asmdemo.s    683 | Code        | 11 |         |    2 | 00/1209 : D0 F3       |                      bne      clrloop              
  951 |  1 asmdemo.s    684 | Code        | 11 |         |    2 | 00/120B : E6 07       |                      inc      {$06}+1              
  952 |  1 asmdemo.s    685 | Code        | 11 |         |    2 | 00/120D : A6 07       |                      ldx      {$06}+1              
  953 |  1 asmdemo.s    686 | Code        | 11 |         |    2 | 00/120F : E0 40       |                      cpx      #$40                 
  954 |  1 asmdemo.s    687 | Code        | 11 |         |    2 | 00/1211 : D0 EB       |                      bne      clrloop              
  955 |  1 asmdemo.s    688 | Code        | 11 |         |    3 | 00/1213 : 8D 01 C0    |                      sta      $C001                
  956 |  1 asmdemo.s    689 | Code        | 11 |         |    3 | 00/1216 : 20 9B 11    |                      jsr      WaitForKeyPress      
  957 |  1 asmdemo.s    690 | Code        | 11 |         |    3 | 00/1219 : 4C 37 0E    |                      jmp      startimage           
  958 |  1 asmdemo.s    691 | Code        | 11 |         |    1 | 00/121C : 60          |                      rts                           
  959 |  1 asmdemo.s    692 | Empty       | 11 |         |    0 | 00/121D               |                                                    
  960 |  1 asmdemo.s    693 | Comment     | 11 |         |    0 | 00/121D               | *<sym>
  961 |  1 asmdemo.s    694 | Empty       | 11 |         |    0 | 00/121D               | DoTextScreen                                       
  962 |  1 asmdemo.s    695 | Code        | 11 |         |    3 | 00/121D : 8D 00 C0    |                      sta      $c000                ;80store off
  963 |  1 asmdemo.s    696 | Code        | 11 |         |    3 | 00/1220 : 8D 02 C0    |                      sta      $c002                ;RAMRD main
  964 |  1 asmdemo.s    697 | Code        | 11 |         |    3 | 00/1223 : 8D 04 C0    |                      sta      $c004                ;RAMWRT main
  965 |  1 asmdemo.s    698 | Code        | 11 |         |    3 | 00/1226 : 8D 0C C0    |                      sta      $c00c                ;80col off
  966 |  1 asmdemo.s    699 | Code        | 11 |         |    3 | 00/1229 : 8D 0E C0    |                      sta      $c00e                ;Altcharset off
  967 |  1 asmdemo.s    700 | Code        | 11 |         |    3 | 00/122C : 8D 81 C0    |                      sta      $c081                ;write RAM, read ROM (2nd 4k bank)
  968 |  1 asmdemo.s    701 | Code        | 11 |         |    3 | 00/122F : 20 2F FB    |                      jsr      {$FB2F}              
  969 |  1 asmdemo.s    702 | Code        | 11 |         |    3 | 00/1232 : 20 58 FC    |                      jsr      {$FC58}              
  970 |  1 asmdemo.s    703 | Code        | 11 |         |    3 | 00/1235 : 20 84 FE    |                      jsr      {$FE84}              
  971 |  1 asmdemo.s    704 | Code        | 11 |         |    3 | 00/1238 : 20 93 FE    |                      jsr      {$fe93}              
  972 |  1 asmdemo.s    705 | Code        | 11 |         |    3 | 00/123B : 20 89 FE    |                      jsr      {$fe89}              
  973 |  1 asmdemo.s    706 | Code        | 11 |         |    1 | 00/123E : 60          |                      rts                           
  974 |  1 asmdemo.s    707 | Comment     | 11 |         |    0 | 00/123F               | *
  975 |  1 asmdemo.s    708 | Comment     | 11 |         |    0 | 00/123F               | *<sym>
  976 |  1 asmdemo.s    709 | Empty       | 11 |         |    0 | 00/123F               | clearbuffer                                        
  977 |  1 asmdemo.s    710 | Comment     | 11 |         |    0 | 00/123F               | * clear memory 
  978 |  1 asmdemo.s    711 | Code        | 11 |         |    2 | 00/123F : A9 78       |                      lda      #<outbuff            
  979 |  1 asmdemo.s    712 | Code        | 11 |         |    2 | 00/1241 : 85 06       |                      sta      {$06}                
  980 |  1 asmdemo.s    713 | Code        | 11 |         |    2 | 00/1243 : A9 0F       |                      lda      #>outbuff            
  981 |  1 asmdemo.s    714 | Code        | 11 |         |    2 | 00/1245 : 85 07       |                      sta      {$06}+1              
  982 |  1 asmdemo.s    715 | Code        | 11 |         |    2 | 00/1247 : A9 00       |                      lda      #0                   
  983 |  1 asmdemo.s    716 | Code        | 11 |         |    2 | 00/1249 : A0 00       |                      ldy      #0                   
  984 |  1 asmdemo.s    717 | Comment     | 11 |         |    0 | 00/124B               | *<sym>
  985 |  1 asmdemo.s    718 | Code        | 11 |         |    2 | 00/124B : 91 06       | pokeZ                sta      ({$06}),y            
  986 |  1 asmdemo.s    719 | Code        | 11 |         |    1 | 00/124D : C8          |                      iny                           
  987 |  1 asmdemo.s    720 | Code        | 11 |         |    2 | 00/124E : C0 50       |                      cpy      #80                  
  988 |  1 asmdemo.s    721 | Code        | 11 |         |    2 | 00/1250 : D0 F9       |                      bne      pokeZ                
  989 |  1 asmdemo.s    722 | Code        | 11 |         |    1 | 00/1252 : 60          |                      rts                           
  990 |  1 asmdemo.s    723 | Comment     | 11 |         |    0 | 00/1253               | *               
  991 |  1 asmdemo.s    724 | Comment     | 11 |         |    0 | 00/1253               | *<sym>
  992 |  1 asmdemo.s    725 | Empty       | 11 |         |    0 | 00/1253               | ProDOSQuit                                         
  993 |  1 asmdemo.s    726 | Code        | 11 |         |    3 | 00/1253 : 20 00 BF    |                      jsr      $BF00                ; ProDOS Quit
  994 |  1 asmdemo.s    727 | Data        | 11 |         |    1 | 00/1256 : 65          |                      dfb      $65                  
  995 |  1 asmdemo.s    728 | Data        | 11 |         |    2 | 00/1257 : 5A 12       |                      dw       QuitParams           
  996 |  1 asmdemo.s    729 | Code        | 11 |         |    1 | 00/1259 : 60          |                      rts                           
  997 |  1 asmdemo.s    730 | Comment     | 11 |         |    0 | 00/125A               | *<sym>
  998 |  1 asmdemo.s    731 | Data        | 11 |         |    1 | 00/125A : 04          | QuitParams           dfb      4                    
  999 |  1 asmdemo.s    732 | Data        | 11 |         |    8 | 00/125B : 00 00 00 00 |                      dw       0,0,0,0              ; standard parameters for Quit call
      |                     |             |    |         |      |           00 00 00 00 |
 1000 |  1 asmdemo.s    733 | Comment     | 11 |         |    0 | 00/1263               | *
 1001 |  1 asmdemo.s    734 | Comment     | 11 |         |    0 | 00/1263               | *<sym>
 1002 |  1 asmdemo.s    735 | Empty       | 11 |         |    0 | 00/1263               | computeBytes                                       
 1003 |  1 asmdemo.s    736 | Comment     | 11 |         |    0 | 00/1263               | * given the # of bits in A,X (lo,hi), computes the # of bytes
 1004 |  1 asmdemo.s    737 | Comment     | 11 |         |    0 | 00/1263               | * to hold these bits on Apple II screen (7 pixels per byte)           
 1005 |  1 asmdemo.s    738 | Code        | 11 |         |    3 | 00/1263 : 8D 8B 12    |                      sta      mybyte               ; number of bits (16 bits integer)
 1006 |  1 asmdemo.s    739 | Code        | 11 |         |    3 | 00/1266 : 8E 8C 12    |                      stx      mybyte+1             
 1007 |  1 asmdemo.s    740 | Code        | 11 |         |    2 | 00/1269 : A2 01       |                      ldx      #1                   ; x = number of needed bytes
 1008 |  1 asmdemo.s    741 | Comment     | 11 |         |    0 | 00/126B               | *<sym>
 1009 |  1 asmdemo.s    742 | Empty       | 11 |         |    0 | 00/126B               | loopbyte                                           
 1010 |  1 asmdemo.s    743 | Code        | 11 |         |    3 | 00/126B : AD 8B 12    |                      lda      mybyte               
 1011 |  1 asmdemo.s    744 | Code        | 11 |         |    1 | 00/126E : 38          |                      sec                           
 1012 |  1 asmdemo.s    745 | Code        | 11 |         |    2 | 00/126F : E9 07       |                      sbc      #7                   
 1013 |  1 asmdemo.s    746 | Code        | 11 |         |    3 | 00/1271 : 8D 8B 12    |                      sta      mybyte               
 1014 |  1 asmdemo.s    747 | Code        | 11 |         |    3 | 00/1274 : AD 8C 12    |                      lda      mybyte+1             
 1015 |  1 asmdemo.s    748 | Code        | 11 |         |    2 | 00/1277 : E9 00       |                      sbc      #0                   
 1016 |  1 asmdemo.s    749 | Code        | 11 |         |    3 | 00/1279 : 8D 8C 12    |                      sta      mybyte+1             
 1017 |  1 asmdemo.s    750 | Empty       | 11 |         |    0 | 00/127C               |                                                    
 1018 |  1 asmdemo.s    751 | Code        | 11 |         |    3 | 00/127C : 0D 8B 12    |                      ora      mybyte               
 1019 |  1 asmdemo.s    752 | Code        | 11 |         |    2 | 00/127F : F0 09       |                      beq      ozunid_9             ; = 0 : exit, nb_byte is correct
 1020 |  1 asmdemo.s    753 | Code        | 11 |         |    3 | 00/1281 : AD 8C 12    |                      lda      mybyte+1             
 1021 |  1 asmdemo.s    754 | Code        | 11 |         |    2 | 00/1284 : 30 04       |                      bmi      ozunid_9             ; < 0 : exit, nb_byte is correct
 1022 |  1 asmdemo.s    755 | Comment     | 11 |         |    0 | 00/1286               |                                         ; > 0 : loop
 1023 |  1 asmdemo.s    756 | Code        | 11 |         |    1 | 00/1286 : E8          |                      inx                           
 1024 |  1 asmdemo.s    757 | Code        | 11 |         |    3 | 00/1287 : 4C 6B 12    |                      jmp      loopbyte             
 1025 |  1 asmdemo.s    758 | Empty       | 11 |         |    0 | 00/128A               | ozunid_9                                           
 1026 |  1 asmdemo.s    759 | Code        | 11 |         |    1 | 00/128A : 60          |                      rts                           
 1027 |  1 asmdemo.s    760 | Comment     | 11 |         |    0 | 00/128B               | *<sym>
 1028 |  1 asmdemo.s    761 | Empty       | 11 |         |    0 | 00/128B               | mybyte                                             
 1029 |  1 asmdemo.s    762 | Data        | 11 |         |    2 | 00/128B : 00 00       |                      ds       2                    
 1030 |  1 asmdemo.s    763 | Comment     | 11 |         |    0 | 00/128D               | *
 1031 |  1 asmdemo.s    764 | Comment     | 11 |         |    0 | 00/128D               | *
 1032 |  1 asmdemo.s    765 | Comment     | 11 |         |    0 | 00/128D               | *********** PREFIX *************
 1033 |  1 asmdemo.s    766 | Comment     | 11 |         |    0 | 00/128D               | * Set prefix using current préfix :
 1034 |  1 asmdemo.s    767 | Comment     | 11 |         |    0 | 00/128D               | * Call GETPREFIX, put it in "path" string
 1035 |  1 asmdemo.s    768 | Comment     | 11 |         |    0 | 00/128D               | * If no prefix (i.e. length of "path" string = 0),
 1036 |  1 asmdemo.s    769 | Comment     | 11 |         |    0 | 00/128D               | * then get préfix from last used disk, unsing ONLINE call
 1037 |  1 asmdemo.s    770 | Comment     | 11 |         |    0 | 00/128D               | * If any error, exit with carry set
 1038 |  1 asmdemo.s    771 | Comment     | 11 |         |    0 | 00/128D               | * else exit with carry clear
 1039 |  1 asmdemo.s    772 | Comment     | 11 |         |    0 | 00/128D               | *
 1040 |  1 asmdemo.s    773 | Comment     | 11 |         |    0 | 00/128D               | *<sym>
 1041 |  1 asmdemo.s    774 | Empty       | 11 |         |    0 | 00/128D               | doprefix                                           
 1042 |  1 asmdemo.s    775 | Code        | 11 |         |    3 | 00/128D : 20 00 BF    |                      jsr      {$BF00}              ; getprefix MLI call ; put prefix in "path"
 1043 |  1 asmdemo.s    776 | Data        | 11 |         |    1 | 00/1290 : C7          |                      dfb      {$c7}                
 1044 |  1 asmdemo.s    777 | Data        | 11 |         |    2 | 00/1291 : EC 12       |                      da       GET_PREFIX_param     
 1045 |  1 asmdemo.s    778 | Code        | 11 |         |    2 | 00/1293 : 90 01       |                      bcc      gpOk                 
 1046 |  1 asmdemo.s    779 | Code        | 11 |         |    1 | 00/1295 : 60          |                      rts                           
 1047 |  1 asmdemo.s    780 | Comment     | 11 |         |    0 | 00/1296               | *<sym>
 1048 |  1 asmdemo.s    781 | Empty       | 11 |         |    0 | 00/1296               | gpOk                                               
 1049 |  1 asmdemo.s    782 | Code        | 11 |         |    3 | 00/1296 : AD F6 12    |                      lda      path                 ; first char = length
 1050 |  1 asmdemo.s    783 | Code        | 11 |         |    2 | 00/1299 : F0 03       |                      beq      noprefix             ; if length = 0 => no prefix
 1051 |  1 asmdemo.s    784 | Code        | 11 |         |    3 | 00/129B : 4C D9 12    |                      jmp      prefixSetOK          ; else prefix already set, exit
 1052 |  1 asmdemo.s    785 | Comment     | 11 |         |    0 | 00/129E               | *<sym>
 1053 |  1 asmdemo.s    786 | Empty       | 11 |         |    0 | 00/129E               | noprefix                                           
 1054 |  1 asmdemo.s    787 | Code        | 11 |         |    3 | 00/129E : AD 30 BF    |                      lda      {$BF30}              ; last used slot/drive
 1055 |  1 asmdemo.s    788 | Code        | 11 |         |    3 | 00/12A1 : 8D F3 12    |                      sta      unit                 ; param du mli online
 1056 |  1 asmdemo.s    789 | Code        | 11 |         |    3 | 00/12A4 : 20 00 BF    |                      jsr      {$BF00}              
 1057 |  1 asmdemo.s    790 | Data        | 11 |         |    1 | 00/12A7 : C5          |                      dfb      {$C5}                ; on_line : get prefix in path
 1058 |  1 asmdemo.s    791 | Data        | 11 |         |    2 | 00/12A8 : F2 12       |                      da       ONLINE_param         
 1059 |  1 asmdemo.s    792 | Code        | 11 |         |    2 | 00/12AA : 90 01       |                      bcc      onlineOK             
 1060 |  1 asmdemo.s    793 | Code        | 11 |         |    1 | 00/12AC : 60          |                      rts                           
 1061 |  1 asmdemo.s    794 | Comment     | 11 |         |    0 | 00/12AD               | *<sym>
 1062 |  1 asmdemo.s    795 | Empty       | 11 |         |    0 | 00/12AD               | onlineOK                                           
 1063 |  1 asmdemo.s    796 | Code        | 11 |         |    3 | 00/12AD : AD F6 12    |                      lda      path                 
 1064 |  1 asmdemo.s    797 | Code        | 11 |         |    2 | 00/12B0 : 29 0F       |                      and      #$0f                 ; length in low nibble
 1065 |  1 asmdemo.s    798 | Code        | 11 |         |    3 | 00/12B2 : 8D F6 12    |                      sta      path                 
 1066 |  1 asmdemo.s    799 | Code        | 11 |         |    1 | 00/12B5 : AA          |                      tax                           
 1067 |  1 asmdemo.s    800 | Comment     | 11 |         |    0 | 00/12B6               | *<sym>
 1068 |  1 asmdemo.s    801 | Code        | 11 |         |    3 | 00/12B6 : BD F6 12    | ozunid_10            lda      path,x               ; shift prefix by one byte
 1069 |  1 asmdemo.s    802 | Code        | 11 |         |    3 | 00/12B9 : 9D F7 12    |                      sta      path+1,x             ;
 1070 |  1 asmdemo.s    803 | Code        | 11 |         |    1 | 00/12BC : CA          |                      dex                           
 1071 |  1 asmdemo.s    804 | Code        | 11 |         |    2 | 00/12BD : D0 F7       |                      bne      ozunid_10            ; all string
 1072 |  1 asmdemo.s    805 | Code        | 11 |         |    3 | 00/12BF : EE F6 12    |                      inc      path                 
 1073 |  1 asmdemo.s    806 | Code        | 11 |         |    3 | 00/12C2 : EE F6 12    |                      inc      path                 ; length = length + 2
 1074 |  1 asmdemo.s    807 | Code        | 11 |         |    3 | 00/12C5 : AE F6 12    |                      ldx      path                 ;
 1075 |  1 asmdemo.s    808 | Code        | 11 |         |    2 | 00/12C8 : A9 AF       |                      lda      #$af                 ; = '/'
 1076 |  1 asmdemo.s    809 | Code        | 11 |         |    3 | 00/12CA : 9D F6 12    |                      sta      path,x               ; insert '/'' at the end
 1077 |  1 asmdemo.s    810 | Code        | 11 |         |    3 | 00/12CD : 8D F7 12    |                      sta      path+1               ; and '/'' at the beginning
 1078 |  1 asmdemo.s    811 | Empty       | 11 |         |    0 | 00/12D0               |                                                    
 1079 |  1 asmdemo.s    812 | Code        | 11 |         |    3 | 00/12D0 : 20 00 BF    |                      jsr      {$BF00}              ; set_prefix (in the form : /prefix/)
 1080 |  1 asmdemo.s    813 | Data        | 11 |         |    1 | 00/12D3 : C6          |                      dfb      {$c6}                
 1081 |  1 asmdemo.s    814 | Data        | 11 |         |    2 | 00/12D4 : EF 12       |                      da       SET_PREFIX_param     
 1082 |  1 asmdemo.s    815 | Code        | 11 |         |    2 | 00/12D6 : 90 01       |                      bcc      prefixSetOK          
 1083 |  1 asmdemo.s    816 | Code        | 11 |         |    1 | 00/12D8 : 60          |                      rts                           
 1084 |  1 asmdemo.s    817 | Comment     | 11 |         |    0 | 00/12D9               | *<sym>
 1085 |  1 asmdemo.s    818 | Empty       | 11 |         |    0 | 00/12D9               | prefixSetOK                                        
 1086 |  1 asmdemo.s    819 | Code        | 11 |         |    1 | 00/12D9 : 60          |                      rts                           
 1087 |  1 asmdemo.s    820 | Comment     | 11 |         |    0 | 00/12DA               | *
 1088 |  1 asmdemo.s    821 | Comment     | 11 |         |    0 | 00/12DA               | *
 1089 |  1 asmdemo.s    822 | Comment     | 11 |         |    0 | 00/12DA               | * * * * MLI Call READ parameters * * * * 
 1090 |  1 asmdemo.s    823 | Comment     | 11 |         |    0 | 00/12DA               | *<sym>
 1091 |  1 asmdemo.s    824 | Empty       | 11 |         |    0 | 00/12DA               | READ_param                                         ; READ file
 1092 |  1 asmdemo.s    825 | Data        | 11 |         |    1 | 00/12DA : 04          |                      hex      04                   ; number of params.
 1093 |  1 asmdemo.s    826 | Comment     | 11 |         |    0 | 00/12DB               | *<sym>
 1094 |  1 asmdemo.s    827 | Data        | 11 |         |    1 | 00/12DB : 00          | refread              hex      00                   ; ref #
 1095 |  1 asmdemo.s    828 | Comment     | 11 |         |    0 | 00/12DC               | *<sym>
 1096 |  1 asmdemo.s    829 | Data        | 11 |         |    2 | 00/12DC : 00 60       | rdbuffa              da       {$6000}              
 1097 |  1 asmdemo.s    830 | Comment     | 11 |         |    0 | 00/12DE               | *<sym>
 1098 |  1 asmdemo.s    831 | Data        | 11 |         |    2 | 00/12DE : 00 20       | rreq                 hex      0020                 ; bytes requested
 1099 |  1 asmdemo.s    832 | Comment     | 11 |         |    0 | 00/12E0               | *<sym>
 1100 |  1 asmdemo.s    833 | Data        | 11 |         |    2 | 00/12E0 : 00 00       | readlen              hex      0000                 ; bytes read
 1101 |  1 asmdemo.s    834 | Comment     | 11 |         |    0 | 00/12E2               | *
 1102 |  1 asmdemo.s    835 | Comment     | 11 |         |    0 | 00/12E2               | * * * * MLI Call OPEN parameters * * * * 
 1103 |  1 asmdemo.s    836 | Comment     | 11 |         |    0 | 00/12E2               | *<sym>
 1104 |  1 asmdemo.s    837 | Empty       | 11 |         |    0 | 00/12E2               | OPEN_parms                                         ; OPEN file for reading
 1105 |  1 asmdemo.s    838 | Data        | 11 |         |    1 | 00/12E2 : 03          |                      hex      03                   ; number of params.
 1106 |  1 asmdemo.s    839 | Data        | 11 |         |    2 | 00/12E3 : E8 12       |                      da       fname                ; path name
 1107 |  1 asmdemo.s    840 | Comment     | 11 |         |    0 | 00/12E5               | *<sym>
 1108 |  1 asmdemo.s    841 | Data        | 11 |         |    2 | 00/12E5 : 00 00       | fbuff                hex      0000                 
 1109 |  1 asmdemo.s    842 | Comment     | 11 |         |    0 | 00/12E7               | *<sym>
 1110 |  1 asmdemo.s    843 | Data        | 11 |         |    1 | 00/12E7 : 00          | ref                  hex      00                   
 1111 |  1 asmdemo.s    844 | Comment     | 11 |         |    0 | 00/12E8               | *<sym>
 1112 |  1 asmdemo.s    845 | Data        | 11 |         |    4 | 00/12E8 : 03 49 4D 47 | fname                str      'IMG'                
 1113 |  1 asmdemo.s    846 | Comment     | 11 |         |    0 | 00/12EC               | *
 1114 |  1 asmdemo.s    847 | Comment     | 11 |         |    0 | 00/12EC               | * * * * MLI Call GET_PREFIX parameters * * * * 
 1115 |  1 asmdemo.s    848 | Comment     | 11 |         |    0 | 00/12EC               | *<sym>
 1116 |  1 asmdemo.s    849 | Empty       | 11 |         |    0 | 00/12EC               | GET_PREFIX_param                                   ; GET_PREFIX
 1117 |  1 asmdemo.s    850 | Data        | 11 |         |    1 | 00/12EC : 01          |                      hex      01                   ; number of params.
 1118 |  1 asmdemo.s    851 | Data        | 11 |         |    2 | 00/12ED : F6 12       |                      da       path                 
 1119 |  1 asmdemo.s    852 | Empty       | 11 |         |    0 | 00/12EF               |                                                    
 1120 |  1 asmdemo.s    853 | Comment     | 11 |         |    0 | 00/12EF               | *
 1121 |  1 asmdemo.s    854 | Comment     | 11 |         |    0 | 00/12EF               | * * * * MLI Call SET_PREFIX parameters * * * *
 1122 |  1 asmdemo.s    855 | Comment     | 11 |         |    0 | 00/12EF               | *<sym>
 1123 |  1 asmdemo.s    856 | Empty       | 11 |         |    0 | 00/12EF               | SET_PREFIX_param                                   ; SET_PREFIX
 1124 |  1 asmdemo.s    857 | Data        | 11 |         |    1 | 00/12EF : 01          |                      hex      01                   ; number of params.
 1125 |  1 asmdemo.s    858 | Data        | 11 |         |    2 | 00/12F0 : F6 12       |                      da       path                 
 1126 |  1 asmdemo.s    859 | Comment     | 11 |         |    0 | 00/12F2               | *
 1127 |  1 asmdemo.s    860 | Comment     | 11 |         |    0 | 00/12F2               | *
 1128 |  1 asmdemo.s    861 | Comment     | 11 |         |    0 | 00/12F2               | * * * * MLI Call ONLINE parameters * * * *
 1129 |  1 asmdemo.s    862 | Comment     | 11 |         |    0 | 00/12F2               | *<sym>
 1130 |  1 asmdemo.s    863 | Empty       | 11 |         |    0 | 00/12F2               | ONLINE_param                                       ; ONLINE
 1131 |  1 asmdemo.s    864 | Data        | 11 |         |    1 | 00/12F2 : 02          |                      hex      02                   ; number of params.
 1132 |  1 asmdemo.s    865 | Comment     | 11 |         |    0 | 00/12F3               | *<sym>
 1133 |  1 asmdemo.s    866 | Data        | 11 |         |    1 | 00/12F3 : 00          | unit                 hex      00                   
 1134 |  1 asmdemo.s    867 | Data        | 11 |         |    2 | 00/12F4 : F6 12       |                      da       path                 
 1135 |  1 asmdemo.s    868 | Comment     | 11 |         |    0 | 00/12F6               | *
 1136 |  1 asmdemo.s    869 | Comment     | 11 |         |    0 | 00/12F6               | *<sym>
 1137 |  1 asmdemo.s    870 | Data        | 11 |         |  256 | 00/12F6 : 00 00 00 00 | path                 ds       256                  ; storage for path
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
      |                     |             |    |         |      |           00 00 00 00 |
 1138 |  1 asmdemo.s    871 | Comment     | 11 |         |    0 | 00/13F6               | *
 1139 |  1 asmdemo.s    872 | Comment     | 11 |         |    0 | 00/13F6               | * * * * MLI Call GET_FILE_INFO parameters * * * *
 1140 |  1 asmdemo.s    873 | Comment     | 11 |         |    0 | 00/13F6               | *<sym>
 1141 |  1 asmdemo.s    874 | Empty       | 11 |         |    0 | 00/13F6               | GET_FILE_INFO_param                                ; GET_FILE_INFO
 1142 |  1 asmdemo.s    875 | Data        | 11 |         |    1 | 00/13F6 : 0A          |                      hex      0A                   
 1143 |  1 asmdemo.s    876 | Data        | 11 |         |    2 | 00/13F7 : F6 12       |                      da       path                 
 1144 |  1 asmdemo.s    877 | Comment     | 11 |         |    0 | 00/13F9               | *<sym>
 1145 |  1 asmdemo.s    878 | Data        | 11 |         |    1 | 00/13F9 : 00          | access               hex      00                   
 1146 |  1 asmdemo.s    879 | Comment     | 11 |         |    0 | 00/13FA               | *<sym>
 1147 |  1 asmdemo.s    880 | Data        | 11 |         |    1 | 00/13FA : 00          | ftype                hex      00                   
 1148 |  1 asmdemo.s    881 | Comment     | 11 |         |    0 | 00/13FB               | *<sym>
 1149 |  1 asmdemo.s    882 | Data        | 11 |         |    2 | 00/13FB : 00 00       | auxtype              hex      0000                 
 1150 |  1 asmdemo.s    883 | Comment     | 11 |         |    0 | 00/13FD               | *<sym>
 1151 |  1 asmdemo.s    884 | Data        | 11 |         |    1 | 00/13FD : 00          | stotype              hex      00                   
 1152 |  1 asmdemo.s    885 | Comment     | 11 |         |    0 | 00/13FE               | *<sym>
 1153 |  1 asmdemo.s    886 | Data        | 11 |         |    2 | 00/13FE : 00 00       | blocks               hex      0000                 
 1154 |  1 asmdemo.s    887 | Comment     | 11 |         |    0 | 00/1400               | *<sym>
 1155 |  1 asmdemo.s    888 | Data        | 11 |         |    2 | 00/1400 : 00 00       | date                 hex      0000                 
 1156 |  1 asmdemo.s    889 | Comment     | 11 |         |    0 | 00/1402               | *<sym>
 1157 |  1 asmdemo.s    890 | Data        | 11 |         |    2 | 00/1402 : 00 00       | time                 hex      0000                 
 1158 |  1 asmdemo.s    891 | Data        | 11 |         |    2 | 00/1404 : 00 00       | cdate                hex      0000                 
 1159 |  1 asmdemo.s    892 | Data        | 11 |         |    2 | 00/1406 : 00 00       | ctime                hex      0000                 
 1160 |  1 asmdemo.s    893 | Comment     | 11 |         |    0 | 00/1408               | *
 1161 |  1 asmdemo.s    894 | Comment     | 11 |         |    0 | 00/1408               | * * * * MLI Call GET_EOF parameters * * * *
 1162 |  1 asmdemo.s    895 | Comment     | 11 |         |    0 | 00/1408               | *<sym>
 1163 |  1 asmdemo.s    896 | Empty       | 11 |         |    0 | 00/1408               | GET_EOF_param                                      ; GET_EOF
 1164 |  1 asmdemo.s    897 | Data        | 11 |         |    1 | 00/1408 : 02          |                      hex      02                   
 1165 |  1 asmdemo.s    898 | Comment     | 11 |         |    0 | 00/1409               | *<sym>
 1166 |  1 asmdemo.s    899 | Data        | 11 |         |    1 | 00/1409 : 00          | refd1                hex      00                   
 1167 |  1 asmdemo.s    900 | Comment     | 11 |         |    0 | 00/140A               | *<sym>
 1168 |  1 asmdemo.s    901 | Data        | 11 |         |    3 | 00/140A : 00 00 00    | filelength           ds       3                    
 1169 |  1 asmdemo.s    902 | Empty       | 11 |         |    0 | 00/140D               |                                                    
 1170 |  1 asmdemo.s    903 | Directive   | 11 |         |    0 | 00/140D               |                      put      hilo                 
 1171 |  4    hilo.s      1 | Comment     | 11 |         |    0 | 00/140D               | *
 1172 |  4    hilo.s      2 | Comment     | 11 |         |    0 | 00/140D               | *
 1173 |  4    hilo.s      3 | Data        | 11 |         |    8 | 00/140D : 20 24 28 2C | hi                   hex      2024282c3034383c     
      |                     |             |    |         |      |           30 34 38 3C |
 1174 |  4    hilo.s      4 | Data        | 11 |         |    8 | 00/1415 : 20 24 28 2C |                      hex      2024282c3034383c     
      |                     |             |    |         |      |           30 34 38 3C |
 1175 |  4    hilo.s      5 | Data        | 11 |         |    8 | 00/141D : 21 25 29 2D |                      hex      2125292d3135393d     
      |                     |             |    |         |      |           31 35 39 3D |
 1176 |  4    hilo.s      6 | Data        | 11 |         |    8 | 00/1425 : 21 25 29 2D |                      hex      2125292d3135393d     
      |                     |             |    |         |      |           31 35 39 3D |
 1177 |  4    hilo.s      7 | Data        | 11 |         |    8 | 00/142D : 22 26 2A 2E |                      hex      22262a2e32363a3e     
      |                     |             |    |         |      |           32 36 3A 3E |
 1178 |  4    hilo.s      8 | Data        | 11 |         |    8 | 00/1435 : 22 26 2A 2E |                      hex      22262a2e32363a3e     
      |                     |             |    |         |      |           32 36 3A 3E |
 1179 |  4    hilo.s      9 | Data        | 11 |         |    8 | 00/143D : 23 27 2B 2F |                      hex      23272b2f33373b3f     
      |                     |             |    |         |      |           33 37 3B 3F |
 1180 |  4    hilo.s     10 | Data        | 11 |         |    8 | 00/1445 : 23 27 2B 2F |                      hex      23272b2f33373b3f     
      |                     |             |    |         |      |           33 37 3B 3F |
 1181 |  4    hilo.s     11 | Data        | 11 |         |    8 | 00/144D : 20 24 28 2C |                      hex      2024282c3034383c     
      |                     |             |    |         |      |           30 34 38 3C |
 1182 |  4    hilo.s     12 | Data        | 11 |         |    8 | 00/1455 : 20 24 28 2C |                      hex      2024282c3034383c     
      |                     |             |    |         |      |           30 34 38 3C |
 1183 |  4    hilo.s     13 | Data        | 11 |         |    8 | 00/145D : 21 25 29 2D |                      hex      2125292d3135393d     
      |                     |             |    |         |      |           31 35 39 3D |
 1184 |  4    hilo.s     14 | Data        | 11 |         |    8 | 00/1465 : 21 25 29 2D |                      hex      2125292d3135393d     
      |                     |             |    |         |      |           31 35 39 3D |
 1185 |  4    hilo.s     15 | Data        | 11 |         |    8 | 00/146D : 22 26 2A 2E |                      hex      22262a2e32363a3e     
      |                     |             |    |         |      |           32 36 3A 3E |
 1186 |  4    hilo.s     16 | Data        | 11 |         |    8 | 00/1475 : 22 26 2A 2E |                      hex      22262a2e32363a3e     
      |                     |             |    |         |      |           32 36 3A 3E |
 1187 |  4    hilo.s     17 | Data        | 11 |         |    8 | 00/147D : 23 27 2B 2F |                      hex      23272b2f33373b3f     
      |                     |             |    |         |      |           33 37 3B 3F |
 1188 |  4    hilo.s     18 | Data        | 11 |         |    8 | 00/1485 : 23 27 2B 2F |                      hex      23272b2f33373b3f     
      |                     |             |    |         |      |           33 37 3B 3F |
 1189 |  4    hilo.s     19 | Data        | 11 |         |    8 | 00/148D : 20 24 28 2C |                      hex      2024282c3034383c     
      |                     |             |    |         |      |           30 34 38 3C |
 1190 |  4    hilo.s     20 | Data        | 11 |         |    8 | 00/1495 : 20 24 28 2C |                      hex      2024282c3034383c     
      |                     |             |    |         |      |           30 34 38 3C |
 1191 |  4    hilo.s     21 | Data        | 11 |         |    8 | 00/149D : 21 25 29 2D |                      hex      2125292d3135393d     
      |                     |             |    |         |      |           31 35 39 3D |
 1192 |  4    hilo.s     22 | Data        | 11 |         |    8 | 00/14A5 : 21 25 29 2D |                      hex      2125292d3135393d     
      |                     |             |    |         |      |           31 35 39 3D |
 1193 |  4    hilo.s     23 | Data        | 11 |         |    8 | 00/14AD : 22 26 2A 2E |                      hex      22262a2e32363a3e     
      |                     |             |    |         |      |           32 36 3A 3E |
 1194 |  4    hilo.s     24 | Data        | 11 |         |    8 | 00/14B5 : 22 26 2A 2E |                      hex      22262a2e32363a3e     
      |                     |             |    |         |      |           32 36 3A 3E |
 1195 |  4    hilo.s     25 | Data        | 11 |         |    8 | 00/14BD : 23 27 2B 2F |                      hex      23272b2f33373b3f     
      |                     |             |    |         |      |           33 37 3B 3F |
 1196 |  4    hilo.s     26 | Data        | 11 |         |    8 | 00/14C5 : 23 27 2B 2F |                      hex      23272b2f33373b3f     
      |                     |             |    |         |      |           33 37 3B 3F |
 1197 |  4    hilo.s     27 | Data        | 11 |         |    8 | 00/14CD : 00 00 00 00 | lo                   hex      0000000000000000     
      |                     |             |    |         |      |           00 00 00 00 |
 1198 |  4    hilo.s     28 | Data        | 11 |         |    8 | 00/14D5 : 80 80 80 80 |                      hex      8080808080808080     
      |                     |             |    |         |      |           80 80 80 80 |
 1199 |  4    hilo.s     29 | Data        | 11 |         |    8 | 00/14DD : 00 00 00 00 |                      hex      0000000000000000     
      |                     |             |    |         |      |           00 00 00 00 |
 1200 |  4    hilo.s     30 | Data        | 11 |         |    8 | 00/14E5 : 80 80 80 80 |                      hex      8080808080808080     
      |                     |             |    |         |      |           80 80 80 80 |
 1201 |  4    hilo.s     31 | Data        | 11 |         |    8 | 00/14ED : 00 00 00 00 |                      hex      0000000000000000     
      |                     |             |    |         |      |           00 00 00 00 |
 1202 |  4    hilo.s     32 | Data        | 11 |         |    8 | 00/14F5 : 80 80 80 80 |                      hex      8080808080808080     
      |                     |             |    |         |      |           80 80 80 80 |
 1203 |  4    hilo.s     33 | Data        | 11 |         |    8 | 00/14FD : 00 00 00 00 |                      hex      0000000000000000     
      |                     |             |    |         |      |           00 00 00 00 |
 1204 |  4    hilo.s     34 | Data        | 11 |         |    8 | 00/1505 : 80 80 80 80 |                      hex      8080808080808080     
      |                     |             |    |         |      |           80 80 80 80 |
 1205 |  4    hilo.s     35 | Data        | 11 |         |    8 | 00/150D : 28 28 28 28 |                      hex      2828282828282828     
      |                     |             |    |         |      |           28 28 28 28 |
 1206 |  4    hilo.s     36 | Data        | 11 |         |    8 | 00/1515 : A8 A8 A8 A8 |                      hex      a8a8a8a8a8a8a8a8     
      |                     |             |    |         |      |           A8 A8 A8 A8 |
 1207 |  4    hilo.s     37 | Data        | 11 |         |    8 | 00/151D : 28 28 28 28 |                      hex      2828282828282828     
      |                     |             |    |         |      |           28 28 28 28 |
 1208 |  4    hilo.s     38 | Data        | 11 |         |    8 | 00/1525 : A8 A8 A8 A8 |                      hex      a8a8a8a8a8a8a8a8     
      |                     |             |    |         |      |           A8 A8 A8 A8 |
 1209 |  4    hilo.s     39 | Data        | 11 |         |    8 | 00/152D : 28 28 28 28 |                      hex      2828282828282828     
      |                     |             |    |         |      |           28 28 28 28 |
 1210 |  4    hilo.s     40 | Data        | 11 |         |    8 | 00/1535 : A8 A8 A8 A8 |                      hex      a8a8a8a8a8a8a8a8     
      |                     |             |    |         |      |           A8 A8 A8 A8 |
 1211 |  4    hilo.s     41 | Data        | 11 |         |    8 | 00/153D : 28 28 28 28 |                      hex      2828282828282828     
      |                     |             |    |         |      |           28 28 28 28 |
 1212 |  4    hilo.s     42 | Data        | 11 |         |    8 | 00/1545 : A8 A8 A8 A8 |                      hex      a8a8a8a8a8a8a8a8     
      |                     |             |    |         |      |           A8 A8 A8 A8 |
 1213 |  4    hilo.s     43 | Data        | 11 |         |    8 | 00/154D : 50 50 50 50 |                      hex      5050505050505050     
      |                     |             |    |         |      |           50 50 50 50 |
 1214 |  4    hilo.s     44 | Data        | 11 |         |    8 | 00/1555 : D0 D0 D0 D0 |                      hex      d0d0d0d0d0d0d0d0     
      |                     |             |    |         |      |           D0 D0 D0 D0 |
 1215 |  4    hilo.s     45 | Data        | 11 |         |    8 | 00/155D : 50 50 50 50 |                      hex      5050505050505050     
      |                     |             |    |         |      |           50 50 50 50 |
 1216 |  4    hilo.s     46 | Data        | 11 |         |    8 | 00/1565 : D0 D0 D0 D0 |                      hex      d0d0d0d0d0d0d0d0     
      |                     |             |    |         |      |           D0 D0 D0 D0 |
 1217 |  4    hilo.s     47 | Data        | 11 |         |    8 | 00/156D : 50 50 50 50 |                      hex      5050505050505050     
      |                     |             |    |         |      |           50 50 50 50 |
 1218 |  4    hilo.s     48 | Data        | 11 |         |    8 | 00/1575 : D0 D0 D0 D0 |                      hex      d0d0d0d0d0d0d0d0     
      |                     |             |    |         |      |           D0 D0 D0 D0 |
 1219 |  4    hilo.s     49 | Data        | 11 |         |    8 | 00/157D : 50 50 50 50 |                      hex      5050505050505050     
      |                     |             |    |         |      |           50 50 50 50 |
 1220 |  4    hilo.s     50 | Data        | 11 |         |    8 | 00/1585 : D0 D0 D0 D0 |                      hex      d0d0d0d0d0d0d0d0     
      |                     |             |    |         |      |           D0 D0 D0 D0 |
 1221 |  4    hilo.s     51 | Comment     | 11 |         |    0 | 00/158D               | *
------+---------------------+-------------+----+---------+------+-----------------------+-------------------------------------------------------------------
